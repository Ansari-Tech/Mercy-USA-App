{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\node_modules\\\\react-native-calendars\\\\src\\\\expandableCalendar\\\\week.js\";\n\nfunction _objectSpread2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport dateutils from \"../dateutils\";\nimport { xdateToData, parseDate } from \"../interface\";\nimport { SELECT_DATE_SLOT } from \"../testIDs\";\nimport styleConstructor from \"./style\";\nimport Day from \"../calendar/day/basic\";\nimport UnitDay from \"../calendar/day/period\";\nimport MultiDotDay from \"../calendar/day/multi-dot\";\nimport MultiPeriodDay from \"../calendar/day/multi-period\";\nimport SingleDay from \"../calendar/day/custom\";\nimport Calendar from \"../calendar\";\nvar EmptyArray = [];\n\nclass Week extends Component {\n  constructor(props) {\n    super(props);\n    this.style = styleConstructor(props.theme);\n  }\n\n  getWeek(date) {\n    if (date) {\n      var current = parseDate(date);\n      var daysArray = [current];\n      var dayOfTheWeek = current.getDay() - this.props.firstDay;\n\n      if (dayOfTheWeek < 0) {\n        dayOfTheWeek = 7 + dayOfTheWeek;\n      }\n\n      var newDate = current;\n      var index = dayOfTheWeek - 1;\n\n      while (index >= 0) {\n        newDate = parseDate(newDate).addDays(-1);\n        daysArray.unshift(newDate);\n        index -= 1;\n      }\n\n      newDate = current;\n      index = dayOfTheWeek + 1;\n\n      while (index < 7) {\n        newDate = parseDate(newDate).addDays(1);\n        daysArray.push(newDate);\n        index += 1;\n      }\n\n      return daysArray;\n    }\n  }\n\n  getDayComponent() {\n    var {\n      dayComponent\n    } = this.props;\n\n    if (dayComponent) {\n      return dayComponent;\n    }\n\n    switch (this.props.markingType) {\n      case 'period':\n        return UnitDay;\n\n      case 'multi-dot':\n        return MultiDotDay;\n\n      case 'multi-period':\n        return MultiPeriodDay;\n\n      case 'custom':\n        return SingleDay;\n\n      default:\n        return Day;\n    }\n  }\n\n  getDateMarking(day) {\n    var {\n      markedDates\n    } = this.props;\n\n    if (!markedDates) {\n      return false;\n    }\n\n    var dates = markedDates[day.toString('yyyy-MM-dd')] || EmptyArray;\n\n    if (dates.length || dates) {\n      return dates;\n    } else {\n      return false;\n    }\n  }\n\n  renderDay(day, id) {\n    var {\n      current\n    } = this.props;\n    var minDate = parseDate(this.props.minDate);\n    var maxDate = parseDate(this.props.maxDate);\n    var state = '';\n\n    if (this.props.disabledByDefault) {\n      state = 'disabled';\n    } else if (minDate && !dateutils.isGTE(day, minDate) || maxDate && !dateutils.isLTE(day, maxDate)) {\n      state = 'disabled';\n    } else if (!dateutils.sameMonth(day, parseDate(current))) {\n      state = 'disabled';\n    } else if (dateutils.sameDate(day, XDate())) {\n      state = 'today';\n    }\n\n    if (current && this.props.hideExtraDays) {\n      if (!dateutils.sameMonth(day, parseDate(current))) {\n        return React.createElement(View, {\n          key: id,\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          }\n        });\n      }\n    }\n\n    var DayComp = this.getDayComponent();\n    var dayDate = day.getDate();\n    var dateAsObject = xdateToData(day);\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center'\n      },\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      }\n    }, React.createElement(DayComp, {\n      testID: \"\".concat(SELECT_DATE_SLOT, \"-\").concat(dateAsObject.dateString),\n      state: state,\n      theme: this.props.theme,\n      onPress: this.props.onDayPress,\n      onLongPress: this.props.onDayPress,\n      date: dateAsObject,\n      marking: this.getDateMarking(day),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      }\n    }, dayDate));\n  }\n\n  render() {\n    var {\n      current\n    } = this.props;\n    var dates = this.getWeek(current);\n    var week = [];\n\n    if (dates) {\n      dates.forEach((day, id) => {\n        week.push(this.renderDay(day, id));\n      }, this);\n    }\n\n    return React.createElement(View, {\n      style: this.style.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      }\n    }, React.createElement(View, {\n      style: [this.style.week, this.props.style],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      }\n    }, week));\n  }\n\n}\n\nWeek.displayName = 'IGNORE';\nWeek.propTypes = _objectSpread2({}, Calendar.propTypes, {\n  current: PropTypes.any\n});\nexport default Week;","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\node_modules\\react-native-calendars\\src\\expandableCalendar\\week.js"],"names":["React","Component","PropTypes","XDate","dateutils","xdateToData","parseDate","SELECT_DATE_SLOT","styleConstructor","Day","UnitDay","MultiDotDay","MultiPeriodDay","SingleDay","Calendar","EmptyArray","Week","constructor","props","style","theme","getWeek","date","current","daysArray","dayOfTheWeek","getDay","firstDay","newDate","index","addDays","unshift","push","getDayComponent","dayComponent","markingType","getDateMarking","day","markedDates","dates","toString","length","renderDay","id","minDate","maxDate","state","disabledByDefault","isGTE","isLTE","sameMonth","sameDate","hideExtraDays","flex","DayComp","dayDate","getDate","dateAsObject","alignItems","dateString","onDayPress","render","week","forEach","container","displayName","propTypes","any"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {View} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport XDate from 'xdate';\r\n\r\nimport dateutils from '../dateutils';\r\nimport {xdateToData, parseDate} from '../interface';\r\nimport {SELECT_DATE_SLOT} from '../testIDs';\r\nimport styleConstructor from './style';\r\n\r\nimport Day from '../calendar/day/basic';\r\nimport UnitDay from '../calendar/day/period';\r\nimport MultiDotDay from '../calendar/day/multi-dot';\r\nimport MultiPeriodDay from '../calendar/day/multi-period';\r\nimport SingleDay from '../calendar/day/custom';\r\nimport Calendar from '../calendar';\r\n\r\n\r\nconst EmptyArray = [];\r\n\r\nclass Week extends Component {\r\n  static displayName = 'IGNORE';\r\n\r\n  static propTypes = {\r\n    ...Calendar.propTypes,\r\n    // the current date\r\n    current: PropTypes.any\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.style = styleConstructor(props.theme);\r\n  }\r\n\r\n  getWeek(date) {\r\n    if (date) {\r\n      const current = parseDate(date);\r\n      const daysArray = [current];\r\n      let dayOfTheWeek = current.getDay() - this.props.firstDay;\r\n      if (dayOfTheWeek < 0) { // to handle firstDay > 0\r\n        dayOfTheWeek = 7 + dayOfTheWeek;\r\n      }\r\n      \r\n      let newDate = current;\r\n      let index = dayOfTheWeek - 1;\r\n      while (index >= 0) {\r\n        newDate = parseDate(newDate).addDays(-1);\r\n        daysArray.unshift(newDate);\r\n        index -= 1;\r\n      }\r\n\r\n      newDate = current;\r\n      index = dayOfTheWeek + 1;\r\n      while (index < 7) {\r\n        newDate = parseDate(newDate).addDays(1);\r\n        daysArray.push(newDate);\r\n        index += 1;\r\n      }\r\n      return daysArray;\r\n    }\r\n  }\r\n\r\n  getDayComponent() {\r\n    const {dayComponent} = this.props;\r\n    if (dayComponent) {\r\n      return dayComponent;\r\n    }\r\n\r\n    switch (this.props.markingType) {\r\n    case 'period':\r\n      return UnitDay;\r\n    case 'multi-dot':\r\n      return MultiDotDay;\r\n    case 'multi-period':\r\n      return MultiPeriodDay;\r\n    case 'custom':\r\n      return SingleDay;\r\n    default:\r\n      return Day;\r\n    }\r\n  }\r\n\r\n  getDateMarking(day) {\r\n    const {markedDates} = this.props;\r\n\r\n    if (!markedDates) {\r\n      return false;\r\n    }\r\n\r\n    const dates = markedDates[day.toString('yyyy-MM-dd')] || EmptyArray;\r\n    if (dates.length || dates) {\r\n      return dates;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // renderWeekNumber (weekNumber) {\r\n  //   return <Day key={`week-${weekNumber}`} theme={this.props.theme} marking={{disableTouchEvent: true}} state='disabled'>{weekNumber}</Day>;\r\n  // }\r\n\r\n  renderDay(day, id) {\r\n    const {current} = this.props;\r\n    const minDate = parseDate(this.props.minDate);\r\n    const maxDate = parseDate(this.props.maxDate);\r\n    \r\n    let state = '';\r\n    if (this.props.disabledByDefault) {\r\n      state = 'disabled';\r\n    } else if ((minDate && !dateutils.isGTE(day, minDate)) || (maxDate && !dateutils.isLTE(day, maxDate))) {\r\n      state = 'disabled';\r\n    } else if (!dateutils.sameMonth(day, parseDate(current))) { // for extra days\r\n      state = 'disabled';\r\n    } else if (dateutils.sameDate(day, XDate())) {\r\n      state = 'today';\r\n    }\r\n\r\n    // hide extra days\r\n    if (current && this.props.hideExtraDays) {\r\n      if (!dateutils.sameMonth(day, parseDate(current))) {\r\n        return (<View key={id} style={{flex: 1}}/>);\r\n      }\r\n    }\r\n\r\n    const DayComp = this.getDayComponent();\r\n    const dayDate = day.getDate();\r\n    const dateAsObject = xdateToData(day);\r\n\r\n    return (\r\n      <View style={{flex: 1, alignItems: 'center'}} key={id}>\r\n        <DayComp\r\n          testID={`${SELECT_DATE_SLOT}-${dateAsObject.dateString}`}\r\n          state={state}\r\n          theme={this.props.theme}\r\n          onPress={this.props.onDayPress}\r\n          onLongPress={this.props.onDayPress}\r\n          date={dateAsObject}\r\n          marking={this.getDateMarking(day)}\r\n        >\r\n          {dayDate}\r\n        </DayComp>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {current} = this.props;\r\n    const dates = this.getWeek(current);\r\n    const week = [];\r\n    \r\n    if (dates) {\r\n      dates.forEach((day, id) => {\r\n        week.push(this.renderDay(day, id));\r\n      }, this);\r\n    }\r\n    \r\n    // if (this.props.showWeekNumbers) {\r\n    //   week.unshift(this.renderWeekNumber(item[item.length - 1].getWeek()));\r\n    // }\r\n\r\n    return (\r\n      <View style={this.style.container}>\r\n        <View style={[this.style.week, this.props.style]}>{week}</View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Week;\r\n"]},"metadata":{},"sourceType":"module"}