{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\screens\\\\AssetsScreen.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport NavigationService from \"../NavigationService\";\nimport { Divider, Overlay } from \"react-native-elements\";\nimport { MKTextField } from \"react-native-material-kit\";\nimport { TextInputMask } from \"react-native-masked-text\";\n\nvar Dimensions = require(\"Dimensions\");\n\nvar {\n  width\n} = Dimensions.get(\"window\").width;\nvar {\n  height\n} = Dimensions.get(\"window\").height;\nvar {\n  modalHeight\n} = height - 50;\nvar cashText = MKTextField.textfield().withPlaceholder(\"Cash in hand\").build();\nexport default class AssetsScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: true\n    };\n  }\n\n  render() {\n    return React.createElement(View, {\n      style: styles.mainView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      }\n    }, React.createElement(Overlay, {\n      isVisible: this.state.isVisible,\n      onBackdropPress: () => this.setState({\n        isVisible: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      }\n    }, React.createElement(View, {\n      style: styles.modalView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      }\n    }, React.createElement(Text, {\n      style: styles.modalTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      }\n    }, \"Evaluating Your Assets\"), React.createElement(Divider, {\n      style: {\n        backgroundColor: \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      }\n    }), React.createElement(ScrollView, {\n      style: {\n        flex: 1,\n        alignContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      }\n    }, React.createElement(View, {\n      style: styles.modalSection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      }\n    }, React.createElement(Text, {\n      style: styles.modalSubtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      }\n    }, \"Cash in Hand & in Bank.\"), React.createElement(Text, {\n      style: styles.modalBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      }\n    }, \"Money stored in your checking account or in cash, as well as any savings readily available to you.\")), React.createElement(View, {\n      style: styles.modalSection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      }\n    }, React.createElement(Text, {\n      style: styles.modalSubtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      }\n    }, \"The Value of Gold.\"), React.createElement(Text, {\n      style: styles.modalBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      }\n    }, \"This could include any gold you own that is not in the form of jewlery, such as gold bars or coins.\")), React.createElement(View, {\n      style: styles.modalSection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      }\n    }, React.createElement(Text, {\n      style: styles.modalSubtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      }\n    }, \"Large Amounts of Jewlery.\"), React.createElement(Text, {\n      style: styles.modalBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      }\n    }, \"While jewlery doesn't count towards the amount of gold you own, large collections of jewlery worth unusually high amounts of money should be counted under this category.\"))), React.createElement(Divider, {\n      style: {\n        backgroundColor: \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      }\n    }), React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      }\n    }, React.createElement(Button, {\n      style: styles.modalButton,\n      title: \"Get Started\",\n      onPress: () => {\n        this.setState({\n          isVisible: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      }\n    })))), React.createElement(Text, {\n      style: styles.inputText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      }\n    }, \"Enter the value of cash in your bank account(s) and in your posesssion.\"), React.createElement(TextInputMask, {\n      customTextInput: cashText,\n      customTextInputProps: {\n        style: {\n          width: \"80%\"\n        },\n        placeholder: \"$0.00        \"\n      },\n      type: \"money\",\n      options: {\n        precision: 2,\n        separator: \".\",\n        delimiter: \",\",\n        unit: \"$\",\n        suffixUnit: \"\"\n      },\n      value: this.state.cash,\n      onChangeText: money => {\n        this.setState({\n          cash: money\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      }\n    }), React.createElement(Text, {\n      style: styles.inputText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      }\n    }, \"Enter the value of precious metals such as Gold, Silver, Platinum, etc.\"), React.createElement(TextInputMask, {\n      customTextInput: cashText,\n      customTextInputProps: {\n        style: {\n          width: \"80%\"\n        },\n        placeholder: \"$0.00        \"\n      },\n      type: \"money\",\n      options: {\n        precision: 2,\n        separator: \".\",\n        delimiter: \",\",\n        unit: \"$\",\n        suffixUnit: \"\"\n      },\n      value: this.state.gold,\n      onChangeText: money => {\n        this.setState({\n          gold: money\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      }\n    }), React.createElement(Text, {\n      style: styles.inputText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      }\n    }, \"Enter the value of any jewlery exceeding 85 grams (3 ounces).\"), React.createElement(TextInputMask, {\n      customTextInput: cashText,\n      customTextInputProps: {\n        style: {\n          width: \"80%\"\n        },\n        placeholder: \"$0.00        \"\n      },\n      type: \"money\",\n      options: {\n        precision: 2,\n        separator: \".\",\n        delimiter: \",\",\n        unit: \"$\",\n        suffixUnit: \"\"\n      },\n      value: this.state.jewlery,\n      onChangeText: money => {\n        this.setState({\n          jewlery: money\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      }\n    }), React.createElement(View, {\n      style: styles.btnView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      }\n    }, React.createElement(Button, {\n      style: styles.btn,\n      title: \"Loans >>\",\n      onPress: () => {\n        var assetsInput = {\n          cash: this.state.cash,\n          gold: this.state.gold,\n          jewlery: this.state.jewlery\n        };\n\n        if (this.state.cash == null || this.state.gold == null || this.state.jewlery == null) {\n          Alert.alert(\"Please fill out all fields.\");\n        } else {\n          NavigationService.navigate(\"Loans\", {\n            asset: assetsInput\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      }\n    })));\n  }\n\n}\nAssetsScreen.navigationOptions = {\n  title: \"Enter your Assets\"\n};\nvar styles = StyleSheet.create({\n  mainView: {\n    flex: 2,\n    alignItems: \"center\",\n    width: width\n  },\n  btn: {\n    alignSelf: \"center\",\n    color: \"#860101\"\n  },\n  title: {\n    alignItems: \"center\",\n    fontSize: 25\n  },\n  header: {\n    textAlign: \"center\"\n  },\n  input: {\n    alignSelf: \"flex-end\"\n  },\n  inputText: {\n    textAlign: \"center\",\n    paddingTop: 20\n  },\n  modalView: {\n    flex: 1\n  },\n  modalTitle: {\n    fontSize: 25,\n    color: \"#045484\",\n    alignSelf: \"center\"\n  },\n  modalSection: {\n    padding: 25\n  },\n  modalSubtitle: {\n    fontSize: 25\n  },\n  modalBody: {},\n  modalButton: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0\n  }\n});","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\screens\\AssetsScreen.js"],"names":["React","NavigationService","Divider","Overlay","MKTextField","TextInputMask","Dimensions","require","width","get","height","modalHeight","cashText","textfield","withPlaceholder","build","AssetsScreen","Component","constructor","props","state","isVisible","render","styles","mainView","setState","modalView","modalTitle","backgroundColor","flex","alignContent","modalSection","modalSubtitle","modalBody","modalButton","inputText","style","placeholder","precision","separator","delimiter","unit","suffixUnit","cash","money","gold","jewlery","btnView","btn","assetsInput","Alert","alert","navigate","asset","navigationOptions","title","StyleSheet","create","alignItems","alignSelf","color","fontSize","header","textAlign","input","paddingTop","padding","position","bottom","left","right"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  View,\r\n  Button,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Alert\r\n} from \"react-native\";\r\nimport NavigationService from \"../NavigationService\";\r\nimport { Divider, Overlay } from \"react-native-elements\";\r\nimport { MKTextField } from \"react-native-material-kit\";\r\nimport { TextInputMask } from \"react-native-masked-text\";\r\nconst Dimensions = require(\"Dimensions\");\r\nconst { width } = Dimensions.get(\"window\").width;\r\nconst { height } = Dimensions.get(\"window\").height;\r\nconst { modalHeight } = height - 50;\r\n\r\nconst cashText = MKTextField.textfield()\r\n  .withPlaceholder(\"Cash in hand\")\r\n  .build();\r\n\r\nexport default class AssetsScreen extends React.Component {\r\n  static navigationOptions = {\r\n    title: \"Enter your Assets\"\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isVisible: true };\r\n  }\r\n  render() {\r\n    return (\r\n      <View style={styles.mainView}>\r\n        <Overlay\r\n          isVisible={this.state.isVisible}\r\n          onBackdropPress={() => this.setState({ isVisible: false })}\r\n        >\r\n          <View style={styles.modalView}>\r\n            <Text style={styles.modalTitle}>Evaluating Your Assets</Text>\r\n            <Divider style={{ backgroundColor: \"blue\" }} />\r\n            <ScrollView style={{ flex: 1, alignContent: \"center\" }}>\r\n              <View style={styles.modalSection}>\r\n                <Text style={styles.modalSubtitle}>\r\n                  Cash in Hand & in Bank.\r\n                </Text>\r\n                <Text style={styles.modalBody}>\r\n                  Money stored in your checking account or in cash, as well as\r\n                  any savings readily available to you.\r\n                </Text>\r\n              </View>\r\n              <View style={styles.modalSection}>\r\n                <Text style={styles.modalSubtitle}>The Value of Gold.</Text>\r\n                <Text style={styles.modalBody}>\r\n                  This could include any gold you own that is not in the form of\r\n                  jewlery, such as gold bars or coins.\r\n                </Text>\r\n              </View>\r\n              <View style={styles.modalSection}>\r\n                <Text style={styles.modalSubtitle}>\r\n                  Large Amounts of Jewlery.\r\n                </Text>\r\n                <Text style={styles.modalBody}>\r\n                  While jewlery doesn't count towards the amount of gold you\r\n                  own, large collections of jewlery worth unusually high amounts\r\n                  of money should be counted under this category.\r\n                </Text>\r\n              </View>\r\n            </ScrollView>\r\n            <Divider style={{ backgroundColor: \"blue\" }} />\r\n            <View>\r\n              <Button\r\n                style={styles.modalButton}\r\n                title=\"Get Started\"\r\n                onPress={() => {\r\n                  this.setState({ isVisible: false });\r\n                }}\r\n              />\r\n            </View>\r\n          </View>\r\n        </Overlay>\r\n        <Text style={styles.inputText}>\r\n          Enter the value of cash in your bank account(s) and in your\r\n          posesssion.\r\n        </Text>\r\n        <TextInputMask\r\n          customTextInput={cashText}\r\n          customTextInputProps={{\r\n            style: { width: \"80%\" },\r\n            placeholder: \"$0.00        \"\r\n          }}\r\n          type={\"money\"}\r\n          options={{\r\n            precision: 2,\r\n            separator: \".\",\r\n            delimiter: \",\",\r\n            unit: \"$\",\r\n            suffixUnit: \"\"\r\n          }}\r\n          value={this.state.cash}\r\n          onChangeText={money => {\r\n            this.setState({\r\n              cash: money\r\n            });\r\n          }}\r\n        />\r\n        <Text style={styles.inputText}>\r\n          Enter the value of precious metals such as Gold, Silver, Platinum,\r\n          etc.\r\n        </Text>\r\n        <TextInputMask\r\n          customTextInput={cashText}\r\n          customTextInputProps={{\r\n            style: { width: \"80%\" },\r\n            placeholder: \"$0.00        \"\r\n          }}\r\n          type={\"money\"}\r\n          options={{\r\n            precision: 2,\r\n            separator: \".\",\r\n            delimiter: \",\",\r\n            unit: \"$\",\r\n            suffixUnit: \"\"\r\n          }}\r\n          value={this.state.gold}\r\n          onChangeText={money => {\r\n            this.setState({\r\n              gold: money\r\n            });\r\n          }}\r\n        />\r\n        <Text style={styles.inputText}>\r\n          Enter the value of any jewlery exceeding 85 grams (3 ounces).\r\n        </Text>\r\n        <TextInputMask\r\n          customTextInput={cashText}\r\n          customTextInputProps={{\r\n            style: { width: \"80%\" },\r\n            placeholder: \"$0.00        \"\r\n          }}\r\n          type={\"money\"}\r\n          options={{\r\n            precision: 2,\r\n            separator: \".\",\r\n            delimiter: \",\",\r\n            unit: \"$\",\r\n            suffixUnit: \"\"\r\n          }}\r\n          value={this.state.jewlery}\r\n          onChangeText={money => {\r\n            this.setState({\r\n              jewlery: money\r\n            });\r\n          }}\r\n        />\r\n        <View style={styles.btnView}>\r\n          <Button\r\n            style={styles.btn}\r\n            title=\"Loans >>\"\r\n            onPress={() => {\r\n              let assetsInput = {\r\n                cash: this.state.cash,\r\n                gold: this.state.gold,\r\n                jewlery: this.state.jewlery\r\n              };\r\n              if (\r\n                this.state.cash == null ||\r\n                this.state.gold == null ||\r\n                this.state.jewlery == null\r\n              ) {\r\n                Alert.alert(\"Please fill out all fields.\");\r\n              } else {\r\n                NavigationService.navigate(\"Loans\", {\r\n                  asset: assetsInput\r\n                });\r\n              }\r\n            }}\r\n          />\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  mainView: {\r\n    flex: 2,\r\n    alignItems: \"center\",\r\n    width: width\r\n  },\r\n  btn: {\r\n    alignSelf: \"center\",\r\n    color: \"#860101\"\r\n  },\r\n  title: {\r\n    alignItems: \"center\",\r\n    fontSize: 25\r\n  },\r\n  header: {\r\n    textAlign: \"center\"\r\n  },\r\n  input: {\r\n    alignSelf: \"flex-end\"\r\n  },\r\n  inputText: {\r\n    textAlign: \"center\",\r\n    paddingTop: 20\r\n  },\r\n  modalView: {\r\n    flex: 1\r\n  },\r\n  modalTitle: {\r\n    fontSize: 25,\r\n    color: \"#045484\",\r\n    alignSelf: \"center\"\r\n  },\r\n  modalSection: {\r\n    padding: 25\r\n  },\r\n  modalSubtitle: {\r\n    fontSize: 25\r\n  },\r\n  modalBody: {},\r\n  modalButton: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}