{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\node_modules\\\\react-native-material-kit\\\\lib\\\\mdl\\\\RangeSlider.js\";\n\nfunction _objectSpread2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ViewPropTypes } from \"../utils\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { getTheme } from \"../theme\";\nimport Thumb from \"../internal/Thumb\";\nvar THUMB_SCALE_RATIO = 1.3;\nvar THUMB_BORDER_WIDTH = 2;\nvar TRACK_EXTRA_MARGIN_V = 5;\nvar TRACK_EXTRA_MARGIN_H = 5;\n\nclass RangeSlider extends Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this._onTrackLayout = (_ref) => {\n      var {\n        nativeEvent: {\n          layout: {\n            width\n          }\n        }\n      } = _ref;\n\n      if (this._trackTotalLength !== width) {\n        this._trackTotalLength = width;\n\n        this._setRange({\n          min: this.props.minValue,\n          max: this.props.maxValue\n        });\n\n        this._updateValue(this._range);\n      }\n    };\n\n    this._beginMove = (ref, evt) => {\n      if (this.props.onStart) {\n        this.props.onStart(ref, evt);\n      }\n\n      this._updateValueByTouch(ref, evt);\n    };\n\n    this._endMove = (ref, evt) => {\n      var ovrRef = this._overriddenThumb ? this._overriddenThumb : ref;\n      var dx = evt.nativeEvent.pageX;\n      this.refs.track.measure((fx, fy, width, height, px) => {\n        ovrRef.confirmMoveTo(this._validateMove(dx, px, width));\n        this._overriddenThumb = null;\n      });\n\n      this._emitConfirm();\n    };\n\n    this._updateValueByTouch = (ref, evt) => {\n      var ovrRef = this._overriddenThumb ? this._overriddenThumb : ref;\n      var dx = evt.nativeEvent.pageX;\n      this.refs.track.measure((fx, fy, width, height, px) => {\n        var {\n          newRef,\n          x\n        } = this._validateMove(dx, px, width, ovrRef);\n\n        this._internalSetValue(newRef, x);\n\n        this._moveThumb(newRef, x);\n      });\n    };\n\n    this._snap = function (val) {\n      var inc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this._defaultStepIncrement();\n      var current = Math.round(val);\n      var half = inc * 0.5;\n      var diff = current % inc;\n\n      if (diff >= half) {\n        var multiplier = Math.round(current / inc);\n        return inc * multiplier;\n      }\n\n      return current - diff;\n    };\n\n    this._defaultStepIncrement = () => this._toPixelScale(this.props.max) / ((this.props.max - this.props.min) / this.props.step);\n\n    this.theme = getTheme();\n    this._range = {\n      min: 0,\n      max: 0\n    };\n    this._overriddenThumb = undefined;\n    this._trackTotalLength = 0;\n    this._lowerTrackLength = new Animated.Value(this._range.max - this._range.min);\n    this._lowerTrackMin = new Animated.Value(this._range.min);\n  }\n\n  componentWillMount() {\n    this._onThumbRadiiUpdate(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this._onThumbRadiiUpdate(nextProps);\n\n    this._setRange({\n      min: nextProps.minValue,\n      max: nextProps.maxValue\n    });\n\n    this._updateValue(this._range);\n  }\n\n  _setRange(range) {\n    var min2Scale = this._toPixelScale(range.min);\n\n    var max2Scale = this._toPixelScale(range.max);\n\n    var minBounds = this._toPixelScale(this.props.min);\n\n    var maxBounds = this._toPixelScale(this.props.max);\n\n    if (min2Scale > max2Scale) {\n      throw new Error(\"Minimum slider value: \".concat(range.min, \" is greater than max value: \").concat(range.max));\n    }\n\n    if (min2Scale < minBounds || min2Scale > maxBounds) {\n      throw new Error(\"Minimum slider value: \".concat(range.min, \" exceeds bounds:\\n        \").concat(this.props.min, \" - \").concat(this.props.max));\n    }\n\n    if (max2Scale < minBounds || max2Scale > maxBounds) {\n      throw new Error(\"Maximum slider value: \".concat(range.max, \" exceeds bounds:\\n        \").concat(this.props.min, \" - \").concat(this.props.max));\n    }\n\n    this._range = {\n      min: min2Scale || 0,\n      max: max2Scale || 0\n    };\n    return this._range;\n  }\n\n  _toSliderScale(value) {\n    var trackToRange = (this.props.max - this.props.min) / this._trackTotalLength;\n    return value * trackToRange + this.props.min;\n  }\n\n  _toPixelScale(value) {\n    var rangeToTrack = this._trackTotalLength / (this.props.max - this.props.min);\n    return (value - this.props.min) * rangeToTrack;\n  }\n\n  _internalSetValue(ref, value) {\n    var target = ref === this.refs.minRange ? 'min' : 'max';\n    this._range[target] = value;\n\n    this._emitChange();\n  }\n\n  _emitChange() {\n    if (this.props.onChange) {\n      this.props.onChange({\n        min: this._toSliderScale(this._range.min),\n        max: this._toSliderScale(this._range.max)\n      });\n    }\n  }\n\n  _emitConfirm() {\n    if (this.props.onConfirm) {\n      this.props.onConfirm({\n        min: this._toSliderScale(this._range.min),\n        max: this._toSliderScale(this._range.max)\n      });\n    }\n  }\n\n  _updateValue(values) {\n    if (!this._trackTotalLength) {\n      return;\n    }\n\n    var lthumb = this.refs.minRange;\n    var rthumb = this.refs.maxRange;\n\n    this._moveThumb(lthumb, values.min);\n\n    lthumb.confirmMoveTo(values.min);\n\n    this._moveThumb(rthumb, values.max);\n\n    rthumb.confirmMoveTo(values.max);\n  }\n\n  _validateMove(dx, trackOriginX, trackWidth, ref) {\n    var x = dx - trackOriginX;\n\n    var onTrack = relX => {\n      var upperBound = relX >= trackWidth ? trackWidth : relX;\n      return relX <= 0 ? 0 : upperBound;\n    };\n\n    if (!ref) {\n      return {};\n    }\n\n    var lthumb = this.refs.minRange;\n    var rthumb = this.refs.maxRange;\n    var oRef = ref;\n\n    if (lthumb.x === rthumb.x) {\n      if (x > rthumb.x) {\n        oRef = this._overriddenThumb = rthumb;\n        ref.confirmMoveTo(ref.x);\n      } else if (x < lthumb.x) {\n        oRef = this._overriddenThumb = lthumb;\n        ref.confirmMoveTo(ref.x);\n      }\n    }\n\n    var valX;\n\n    if (oRef === lthumb) {\n      valX = x >= rthumb.x ? rthumb.x : onTrack(x);\n    } else if (oRef === rthumb) {\n      valX = x <= lthumb.x ? lthumb.x : onTrack(x);\n    }\n\n    return {\n      newRef: oRef,\n      x: this._snap(valX)\n    };\n  }\n\n  _moveThumb(ref, x) {\n    ref.moveTo(x);\n    Animated.parallel([Animated.timing(this._lowerTrackMin, {\n      toValue: this._range.min,\n      duration: 0\n    }), Animated.timing(this._lowerTrackLength, {\n      toValue: this._range.max - this._range.min,\n      duration: 0\n    })]).start();\n  }\n\n  _onThumbRadiiUpdate(props) {\n    this._thumbRadii = props.thumbRadius;\n    this._thumbRadiiWithBorder = this._thumbRadii + THUMB_BORDER_WIDTH;\n    this._trackMarginV = this._thumbRadiiWithBorder * THUMB_SCALE_RATIO + TRACK_EXTRA_MARGIN_V - this.props.trackSize / 2;\n    this._trackMarginH = this._thumbRadiiWithBorder * THUMB_SCALE_RATIO + TRACK_EXTRA_MARGIN_H;\n  }\n\n  _verifyStep() {\n    var divisor = (this.props.max - this.props.min) / this.props.step;\n\n    if (divisor % 1 !== 0) {\n      throw new Error(\"Given step ( \".concat(this.props.step, \" ) must be         a divisor of max ( \").concat(this.props.max, \" )\"));\n    }\n  }\n\n  _rollbackSlider(range) {\n    this._setRange({\n      min: range.minValue,\n      max: range.maxValue\n    });\n\n    this._updateValue(this._range);\n  }\n\n  render() {\n    this._verifyStep();\n\n    var trackMargin = {\n      marginLeft: this._trackMarginH,\n      marginRight: this._trackMarginH,\n      marginTop: this._trackMarginV,\n      marginBottom: this._trackMarginV\n    };\n    var sliderStyle = this.theme.sliderStyle;\n    var lowerTrackColor = this.props.lowerTrackColor || sliderStyle.lowerTrackColor;\n    var upperTrackColor = this.props.upperTrackColor || sliderStyle.upperTrackColor;\n    return React.createElement(View, {\n      ref: \"container\",\n      style: [this.props.style, {\n        padding: 0,\n        paddingTop: 0,\n        paddingBottom: 0,\n        paddingLeft: 0,\n        paddingRight: 0\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      }\n    }, React.createElement(View, {\n      ref: \"track\",\n      style: _objectSpread2({\n        height: this.props.trackSize,\n        backgroundColor: upperTrackColor\n      }, trackMargin),\n      onLayout: this._onTrackLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      }\n    }, React.createElement(Animated.View, {\n      ref: \"lowerTrack\",\n      style: {\n        position: 'absolute',\n        left: this._lowerTrackMin,\n        width: this._lowerTrackLength,\n        height: this.props.trackSize,\n        backgroundColor: lowerTrackColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      }\n    })), React.createElement(Thumb, {\n      ref: \"minRange\",\n      radius: this.props.thumbRadius,\n      trackMarginH: this._trackMarginH,\n      enabledColor: lowerTrackColor,\n      disabledColor: upperTrackColor,\n      onGrant: this._beginMove,\n      onMove: this._updateValueByTouch,\n      onEnd: this._endMove,\n      touchPadding: this.props.thumbPadding,\n      style: {\n        top: this._thumbRadiiWithBorder * (THUMB_SCALE_RATIO - 1) + TRACK_EXTRA_MARGIN_V\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      }\n    }), React.createElement(Thumb, {\n      ref: \"maxRange\",\n      radius: this.props.thumbRadius,\n      trackMarginH: this._trackMarginH,\n      enabledColor: lowerTrackColor,\n      disabledColor: upperTrackColor,\n      onGrant: this._beginMove,\n      onMove: this._updateValueByTouch,\n      onEnd: this._endMove,\n      touchPadding: this.props.thumbPadding,\n      style: {\n        top: this._thumbRadiiWithBorder * (THUMB_SCALE_RATIO - 1) + TRACK_EXTRA_MARGIN_V\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      }\n    }));\n  }\n\n}\n\nObject.defineProperty(RangeSlider.prototype, 'minValue', {\n  set(minValue) {\n    var range = this._setRange({\n      min: minValue,\n      max: this._toSliderScale(this._range.max)\n    });\n\n    this._updateValue(range);\n\n    this._emitChange();\n  },\n\n  get() {\n    return this._toSliderScale(this._range.min);\n  },\n\n  enumerable: true\n});\nObject.defineProperty(RangeSlider.prototype, 'maxValue', {\n  set(maxValue) {\n    var range = this._setRange({\n      min: this._toSliderScale(this._range.min),\n      max: maxValue\n    });\n\n    this._updateValue(range);\n\n    this._emitChange();\n  },\n\n  get() {\n    return this._toSliderScale(this._range.max);\n  },\n\n  enumerable: true\n});\nRangeSlider.propTypes = _objectSpread2({}, ViewPropTypes || View.propTypes, {\n  min: PropTypes.number,\n  max: PropTypes.number,\n  minValue: PropTypes.number,\n  maxValue: PropTypes.number,\n  trackSize: PropTypes.number,\n  thumbRadius: PropTypes.number,\n  thumbPadding: PropTypes.number,\n  lowerTrackColor: PropTypes.string,\n  upperTrackColor: PropTypes.string,\n  onStart: PropTypes.func,\n  onChange: PropTypes.func,\n  onConfirm: PropTypes.func,\n  step: PropTypes.number\n});\nRangeSlider.defaultProps = {\n  thumbPadding: 0,\n  thumbRadius: 6,\n  trackSize: 2,\n  min: 0,\n  max: 100,\n  step: 1\n};\nmodule.exports = RangeSlider;","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\node_modules\\react-native-material-kit\\lib\\mdl\\RangeSlider.js"],"names":["React","Component","PropTypes","ViewPropTypes","getTheme","Thumb","THUMB_SCALE_RATIO","THUMB_BORDER_WIDTH","TRACK_EXTRA_MARGIN_V","TRACK_EXTRA_MARGIN_H","RangeSlider","constructor","props","_onTrackLayout","nativeEvent","layout","width","_trackTotalLength","_setRange","min","minValue","max","maxValue","_updateValue","_range","_beginMove","ref","evt","onStart","_updateValueByTouch","_endMove","ovrRef","_overriddenThumb","dx","pageX","refs","track","measure","fx","fy","height","px","confirmMoveTo","_validateMove","_emitConfirm","newRef","x","_internalSetValue","_moveThumb","_snap","val","inc","_defaultStepIncrement","current","Math","round","half","diff","multiplier","_toPixelScale","step","theme","undefined","_lowerTrackLength","Animated","Value","_lowerTrackMin","componentWillMount","_onThumbRadiiUpdate","componentWillReceiveProps","nextProps","range","min2Scale","max2Scale","minBounds","maxBounds","Error","_toSliderScale","value","trackToRange","rangeToTrack","target","minRange","_emitChange","onChange","onConfirm","values","lthumb","rthumb","maxRange","trackOriginX","trackWidth","onTrack","relX","upperBound","oRef","valX","moveTo","parallel","timing","toValue","duration","start","_thumbRadii","thumbRadius","_thumbRadiiWithBorder","_trackMarginV","trackSize","_trackMarginH","_verifyStep","divisor","_rollbackSlider","render","trackMargin","marginLeft","marginRight","marginTop","marginBottom","sliderStyle","lowerTrackColor","upperTrackColor","style","padding","paddingTop","paddingBottom","paddingLeft","paddingRight","backgroundColor","position","left","thumbPadding","top","Object","defineProperty","prototype","set","get","enumerable","propTypes","View","number","string","func","defaultProps","module","exports"],"mappings":"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","sourcesContent":["//\n// RangeSlider component.\n//\n// - [Props](#props)\n// - [Defaults](#defaults)\n//\n// Created by awaidman on 16/1/21.\n//\n\nimport React, {\n  Component,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { ViewPropTypes } from '../utils';\n\nimport {\n  Animated,\n  View,\n} from 'react-native';\n\nimport { getTheme } from '../theme';\nimport Thumb from '../internal/Thumb';\n\n// The max scale of the thumb\nconst THUMB_SCALE_RATIO = 1.3;\n\n// Width of the thumb border\nconst THUMB_BORDER_WIDTH = 2;\n\n// extra spacing enlarging the touchable area\nconst TRACK_EXTRA_MARGIN_V = 5;\nconst TRACK_EXTRA_MARGIN_H = 5;\n\n// ## <section id='Slider'>Slider</section>\nclass RangeSlider extends Component {\n  constructor(props) {\n    super(props);\n    this.theme = getTheme();\n    this._range = {\n      min: 0,\n      max: 0,\n    };\n\n    this._overriddenThumb = undefined;\n    this._trackTotalLength = 0;\n    this._lowerTrackLength = new Animated.Value(this._range.max - this._range.min);\n    this._lowerTrackMin = new Animated.Value(this._range.min);\n  }\n\n  componentWillMount() {\n    this._onThumbRadiiUpdate(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this._onThumbRadiiUpdate(nextProps);\n    this._setRange({ min: nextProps.minValue, max: nextProps.maxValue });\n    this._updateValue(this._range);\n  }\n\n  // region Property initializers\n  _onTrackLayout = ({ nativeEvent: { layout: { width } } }) => {\n    if (this._trackTotalLength !== width) {\n      this._trackTotalLength = width;\n      this._setRange({ min: this.props.minValue, max: this.props.maxValue });\n      this._updateValue(this._range);\n    }\n  };\n\n  // Respond to Grant gestures\n  _beginMove = (ref, evt) => {\n    if (this.props.onStart) {\n      this.props.onStart(ref, evt);\n    }\n\n    this._updateValueByTouch(ref, evt);\n  };\n\n  // Respond to both cancelled and finished gestures\n  _endMove = (ref, evt) => {\n    const ovrRef = this._overriddenThumb ? this._overriddenThumb : ref;\n\n    const dx = evt.nativeEvent.pageX;\n    this.refs.track.measure((fx, fy, width, height, px) => {\n      ovrRef.confirmMoveTo(this._validateMove(dx, px, width));\n      this._overriddenThumb = null;\n    });\n\n    this._emitConfirm();\n  };\n\n  // Respond to Move touch gestures\n  _updateValueByTouch = (ref, evt) => {\n    const ovrRef = this._overriddenThumb ? this._overriddenThumb : ref;\n\n    const dx = evt.nativeEvent.pageX;\n    this.refs.track.measure((fx, fy, width, height, px) => {\n      const { newRef, x } = this._validateMove(dx, px, width, ovrRef);\n      this._internalSetValue(newRef, x);\n      this._moveThumb(newRef, x);\n    });\n  };\n\n  // Snap thumb by step, default step = 1\n  _snap = (val, inc = this._defaultStepIncrement()) => {\n    const current = Math.round(val);\n    const half = inc * 0.5;\n    const diff = current % inc;\n\n    if (diff >= half) {\n      const multiplier = Math.round(current / inc);\n      return (inc * multiplier);\n    }\n\n    return (current - diff);\n  };\n\n  _defaultStepIncrement = () =>\n    this._toPixelScale(this.props.max) / ((this.props.max - this.props.min) / (this.props.step));\n\n  // endregion\n\n  // Throw error if preset ranges are invalid\n  _setRange(range) {\n    const min2Scale = this._toPixelScale(range.min);\n    const max2Scale = this._toPixelScale(range.max);\n\n    const minBounds = this._toPixelScale(this.props.min);\n    const maxBounds = this._toPixelScale(this.props.max);\n\n    if (min2Scale > max2Scale) {\n      throw new Error(`Minimum slider value: ${range.min} is greater than max value: ${range.max}`);\n    }\n    if (min2Scale < minBounds || min2Scale > maxBounds) {\n      throw new Error(`Minimum slider value: ${range.min} exceeds bounds:\n        ${this.props.min} - ${this.props.max}`);\n    }\n    if (max2Scale < minBounds || max2Scale > maxBounds) {\n      throw new Error(`Maximum slider value: ${range.max} exceeds bounds:\n        ${this.props.min} - ${this.props.max}`);\n    }\n\n    this._range = {\n      min: min2Scale || 0,\n      max: max2Scale || 0,\n    };\n\n    return this._range;\n  }\n\n  // Scale global xy coordinate values to track values\n  _toSliderScale(value) {\n    const trackToRange = (this.props.max - this.props.min) / this._trackTotalLength;\n    return (value * trackToRange) + this.props.min;\n  }\n\n  // Scale track values to global xy coordinate system\n  _toPixelScale(value) {\n    const rangeToTrack = this._trackTotalLength / (this.props.max - this.props.min);\n    return (value - this.props.min) * rangeToTrack;\n  }\n\n  // Set values for thumb components for user touch events\n  _internalSetValue(ref, value) {\n    const target = ref === this.refs.minRange ? 'min' : 'max';\n    this._range[target] = value;\n    this._emitChange();\n  }\n\n  // Send changed values to onChange callback\n  _emitChange() {\n    if (this.props.onChange) {\n      this.props.onChange({\n        min: this._toSliderScale(this._range.min),\n        max: this._toSliderScale(this._range.max),\n      });\n    }\n  }\n\n  _emitConfirm() {\n    if (this.props.onConfirm) {\n      this.props.onConfirm({\n        min: this._toSliderScale(this._range.min),\n        max: this._toSliderScale(this._range.max),\n      });\n    }\n  }\n\n  // Internal update of ranges. Values should be to \"Pixel Scale\"\n  _updateValue(values) {\n    if (!this._trackTotalLength) {\n      return;\n    }\n\n    const lthumb = this.refs.minRange;\n    const rthumb = this.refs.maxRange;\n\n    this._moveThumb(lthumb, values.min);\n    lthumb.confirmMoveTo(values.min);\n\n    this._moveThumb(rthumb, values.max);\n    rthumb.confirmMoveTo(values.max);\n  }\n\n  // Ensure thumbs do not cross each other or track boundaries\n  _validateMove(dx, trackOriginX, trackWidth, ref) {\n    const x = dx - trackOriginX;\n\n    const onTrack = (relX) => {\n      const upperBound = relX >= trackWidth ? trackWidth : relX;\n      return relX <= 0 ? 0 : upperBound;\n    };\n\n    if (!ref) {\n      return {};\n    }\n\n    const lthumb = this.refs.minRange;\n    const rthumb = this.refs.maxRange;\n\n    let oRef = ref;\n    if (lthumb.x === rthumb.x) {\n      if (x > rthumb.x) {\n        oRef = this._overriddenThumb = rthumb;\n        ref.confirmMoveTo(ref.x);\n      } else if (x < lthumb.x) {\n        oRef = this._overriddenThumb = lthumb;\n        ref.confirmMoveTo(ref.x);\n      }\n    }\n\n    let valX;\n    if (oRef === lthumb) {\n      valX = x >= rthumb.x ? rthumb.x : onTrack(x);\n    } else if (oRef === rthumb) {\n      valX = x <= lthumb.x ? lthumb.x : onTrack(x);\n    }\n\n    return { newRef: oRef, x: this._snap(valX) };\n  }\n\n  // Induce smooth animation to move each thumb component\n  _moveThumb(ref, x) {\n    ref.moveTo(x);\n\n    Animated.parallel([\n      Animated.timing(this._lowerTrackMin, {\n        toValue: this._range.min,\n        duration: 0,\n      }),\n      Animated.timing(this._lowerTrackLength, {\n        toValue: this._range.max - this._range.min,\n        duration: 0,\n      }),\n    ]).start();\n  }\n\n  // when thumb radii updated, re-calc the dimens\n  _onThumbRadiiUpdate(props) {\n    this._thumbRadii = props.thumbRadius;\n    this._thumbRadiiWithBorder = this._thumbRadii + THUMB_BORDER_WIDTH;\n    this._trackMarginV = this._thumbRadiiWithBorder * THUMB_SCALE_RATIO +\n      TRACK_EXTRA_MARGIN_V - this.props.trackSize / 2;\n    this._trackMarginH = this._thumbRadiiWithBorder * THUMB_SCALE_RATIO +\n      TRACK_EXTRA_MARGIN_H;\n  }\n\n  // Step must be a divisor of max\n  _verifyStep() {\n    const divisor = (this.props.max - this.props.min) / this.props.step;\n    if (divisor % 1 !== 0) {\n      throw new Error(`Given step ( ${this.props.step} ) must be \\\n        a divisor of max ( ${this.props.max} )`);\n    }\n  }\n\n  _rollbackSlider(range) {\n    this._setRange({ min: range.minValue, max: range.maxValue });\n    this._updateValue(this._range);\n  }\n\n  render() {\n    this._verifyStep();\n    // making room for the Thumb, cause's Android doesn't support `overflow: visible`\n    // - @see http://bit.ly/1Fzr5SE\n    const trackMargin = {\n      marginLeft: this._trackMarginH,\n      marginRight: this._trackMarginH,\n      marginTop: this._trackMarginV,\n      marginBottom: this._trackMarginV,\n    };\n\n    const sliderStyle = this.theme.sliderStyle;\n    const lowerTrackColor = this.props.lowerTrackColor || sliderStyle.lowerTrackColor;\n    const upperTrackColor = this.props.upperTrackColor || sliderStyle.upperTrackColor;\n\n    return (\n      <View ref=\"container\"\n        style={[this.props.style, {\n          padding: 0,\n          paddingTop: 0,\n          paddingBottom: 0,\n          paddingLeft: 0,\n          paddingRight: 0,\n        }]}\n      >\n        <View ref=\"track\"\n          style={{\n            height: this.props.trackSize,\n            backgroundColor: upperTrackColor,\n            ...trackMargin,\n          }}\n          onLayout={this._onTrackLayout}\n        >\n          <Animated.View\n            ref=\"lowerTrack\"\n            style={{\n              position: 'absolute',\n              left: this._lowerTrackMin,\n              width: this._lowerTrackLength,\n              height: this.props.trackSize,\n              backgroundColor: lowerTrackColor,\n            }}\n          />\n        </View>\n        <Thumb\n          ref=\"minRange\"\n          radius={this.props.thumbRadius}\n          trackMarginH={this._trackMarginH}\n          enabledColor={lowerTrackColor}\n          disabledColor={upperTrackColor}\n          onGrant={this._beginMove}\n          onMove={this._updateValueByTouch}\n          onEnd={this._endMove}\n          touchPadding={this.props.thumbPadding}\n          style={{\n            top: this._thumbRadiiWithBorder * (THUMB_SCALE_RATIO - 1) + TRACK_EXTRA_MARGIN_V,\n          }}\n        />\n\n        <Thumb\n          ref=\"maxRange\"\n          radius={this.props.thumbRadius}\n          trackMarginH={this._trackMarginH}\n          enabledColor={lowerTrackColor}\n          disabledColor={upperTrackColor}\n          onGrant={this._beginMove}\n          onMove={this._updateValueByTouch}\n          onEnd={this._endMove}\n          touchPadding={this.props.thumbPadding}\n          style={{\n            top: this._thumbRadiiWithBorder * (THUMB_SCALE_RATIO - 1) + TRACK_EXTRA_MARGIN_V,\n          }}\n        />\n      </View>\n    );\n  }\n}\n\n// Public api to update the current ranges\nObject.defineProperty(RangeSlider.prototype, 'minValue', {\n  set(minValue) {\n    const range = this._setRange({\n      min: minValue,\n      max: this._toSliderScale(this._range.max),\n    });\n    this._updateValue(range);\n    this._emitChange();\n  },\n  get() {\n    return this._toSliderScale(this._range.min);\n  },\n  enumerable: true,\n});\n\nObject.defineProperty(RangeSlider.prototype, 'maxValue', {\n  set(maxValue) {\n    const range = this._setRange({\n      min: this._toSliderScale(this._range.min),\n      max: maxValue,\n    });\n    this._updateValue(range);\n    this._emitChange();\n  },\n  get() {\n    return this._toSliderScale(this._range.max);\n  },\n  enumerable: true,\n});\n\n// ## <section id='props'>Props</section>\nRangeSlider.propTypes = {\n  // [RN.View Props](https://facebook.github.io/react-native/docs/view.html#props)...\n  ...(ViewPropTypes || View.propTypes),\n\n  // Minimum value of the range, default is `0`\n  min: PropTypes.number,\n\n  // Maximum value of the range, default is `100`\n  max: PropTypes.number,\n\n  // Minimum predefined value for left hand thumb\n  minValue: PropTypes.number,\n\n  // Maximum predefined value for right hand thumb\n  maxValue: PropTypes.number,\n\n  // The thickness of the RangeSlider track\n  trackSize: PropTypes.number,\n\n  // Radius of the thumb of the RangeSlider\n  thumbRadius: PropTypes.number,\n\n  // Padding for the hitSlop on the RangeSlider thumb\n  thumbPadding: PropTypes.number,\n\n  // Color of the lower part of the track, it's also the color of the thumb\n  lowerTrackColor: PropTypes.string,\n\n  // Color of the upper part of the track\n  upperTrackColor: PropTypes.string,\n\n  // Callback when drag gesture begins\n  onStart: PropTypes.func,\n\n  // Callback when value changed\n  onChange: PropTypes.func,\n\n  // Callback when the value range is confirmed\n  onConfirm: PropTypes.func,\n\n  // Step value of the RangeSlider, must be a divisor of max\n  step: PropTypes.number,\n};\n\n// ## <section id='defaults'>Defaults</section>\nRangeSlider.defaultProps = {\n  thumbPadding: 0,\n  thumbRadius: 6,\n  trackSize: 2,\n  min: 0,\n  max: 100,\n  step: 1,\n};\n\n\n// ## Public interface\nmodule.exports = RangeSlider;\n"]},"metadata":{},"sourceType":"module"}