{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\node_modules\\\\react-native-material-kit\\\\lib\\\\mdl\\\\Progress.js\";\n\nfunction _objectSpread2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ViewPropTypes } from \"../utils\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { getTheme } from \"../theme\";\n\nclass Progress extends Component {\n  constructor(props) {\n    super(props);\n\n    this._onLayout = (_ref) => {\n      var {\n        nativeEvent: {\n          layout: {\n            width,\n            height\n          }\n        }\n      } = _ref;\n\n      if (width > 0 && this._totalLength !== width) {\n        this._totalLength = width;\n\n        this._height.setValue(height);\n\n        this._aniUpdateProgress(this.progress);\n\n        this._aniUpdateBuffer(this.buffer);\n      }\n    };\n\n    this.theme = getTheme();\n    this._progress = 0;\n    this._buffer = 0;\n    this._totalLength = 0;\n    this._height = new Animated.Value(0);\n    this._animatedLength = new Animated.Value(0);\n    this._animatedBufferLength = new Animated.Value(0);\n  }\n\n  componentWillMount() {\n    this.progress = this.props.progress;\n    this.buffer = this.props.buffer;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.progress = nextProps.progress;\n    this.buffer = nextProps.buffer;\n  }\n\n  _aniUpdateProgress(theProgress) {\n    if (!(this._totalLength > 0 && theProgress >= 0)) {\n      return;\n    }\n\n    Animated.timing(this._animatedLength, {\n      toValue: theProgress * this._totalLength,\n      duration: this.props.progressAniDuration || 300,\n      easing: Easing.out(Easing.quad)\n    }).start();\n  }\n\n  _aniUpdateBuffer(buffer) {\n    if (!(this._totalLength > 0 && buffer >= 0)) {\n      return;\n    }\n\n    Animated.timing(this._animatedBufferLength, {\n      toValue: buffer * this._totalLength,\n      duration: this.props.bufferAniDuration || 200\n    }).start();\n  }\n\n  render() {\n    var progressTheme = this.theme.progressStyle;\n    var style = {\n      backgroundColor: progressTheme.backgroundColor\n    };\n    var bufferColor = this.props.bufferColor || progressTheme.bufferColor;\n    var progressColor = this.props.progressColor || progressTheme.progressColor;\n    return React.createElement(View, {\n      ref: \"bg\",\n      style: [Progress.defaultProps.style, style, this.props.style],\n      onLayout: this._onLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      }\n    }, React.createElement(Animated.View, {\n      ref: \"bufferLayer\",\n      style: {\n        position: 'absolute',\n        backgroundColor: bufferColor,\n        width: this._animatedBufferLength,\n        height: this._height\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      }\n    }), React.createElement(Animated.View, {\n      ref: \"progressLayer\",\n      style: {\n        position: 'absolute',\n        backgroundColor: progressColor,\n        width: this._animatedLength,\n        height: this._height\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      }\n    }));\n  }\n\n}\n\nProgress.propTypes = _objectSpread2({}, ViewPropTypes || View.propTypes, {\n  progress: PropTypes.number,\n  buffer: PropTypes.number,\n  progressColor: PropTypes.string,\n  bufferColor: PropTypes.string,\n  progressAniDuration: PropTypes.number,\n  bufferAniDuration: PropTypes.number\n});\nProgress.defaultProps = {\n  style: {\n    height: 4\n  }\n};\nObject.defineProperty(Progress.prototype, 'progress', {\n  set(value) {\n    if (value >= 0 && value !== this._progress) {\n      this._progress = value;\n\n      this._aniUpdateProgress(value);\n    }\n  },\n\n  get() {\n    return this._progress;\n  },\n\n  enumerable: true\n});\nObject.defineProperty(Progress.prototype, 'buffer', {\n  set(value) {\n    if (value >= 0 && value !== this._buffer) {\n      this._buffer = value;\n\n      this._aniUpdateBuffer(value);\n    }\n  },\n\n  get() {\n    return this._buffer;\n  },\n\n  enumerable: true\n});\nmodule.exports = Progress;","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\node_modules\\react-native-material-kit\\lib\\mdl\\Progress.js"],"names":["React","Component","PropTypes","ViewPropTypes","getTheme","Progress","constructor","props","_onLayout","nativeEvent","layout","width","height","_totalLength","_height","setValue","_aniUpdateProgress","progress","_aniUpdateBuffer","buffer","theme","_progress","_buffer","Animated","Value","_animatedLength","_animatedBufferLength","componentWillMount","componentWillReceiveProps","nextProps","theProgress","timing","toValue","duration","progressAniDuration","easing","Easing","out","quad","start","bufferAniDuration","render","progressTheme","progressStyle","style","backgroundColor","bufferColor","progressColor","defaultProps","position","propTypes","View","number","string","Object","defineProperty","prototype","set","value","get","enumerable","module","exports"],"mappings":"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","sourcesContent":["//\n// MDL style progress bar component.\n//\n// - @see [MDL Progress Bar](http://www.getmdl.io/components/index.html#loading-section/progress)\n// - [Props](#props)\n// - [Defaults](#defaults)\n//\n// Created by ywu on 15/8/7.\n//\n\nimport React, {\n  Component,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { ViewPropTypes } from '../utils';\n\nimport {\n  Animated,\n  Easing,\n  View,\n} from 'react-native';\n\nimport { getTheme } from '../theme';\n\n//\n// ## <section id='Progress'>Progress</section>\n// The default `Progress` component, with a simplified buffering effect.\n//\nclass Progress extends Component {\n\n  // ## <section id='props'>Props</section>\n  static propTypes = {\n    // [View Props](https://facebook.github.io/react-native/docs/view.html#props)...\n    ...(ViewPropTypes || View.propTypes),\n\n    // Initial value of progress, Number: [0, 1.0]\n    progress: PropTypes.number,\n\n    // Initial value of buffering, Number: [0, 1.0]\n    buffer: PropTypes.number,\n\n    // Color of the progress layer\n    progressColor: PropTypes.string,\n\n    // Color of the buffering layer\n    bufferColor: PropTypes.string,\n\n    // Duration of the progress animation, in milliseconds\n    progressAniDuration: PropTypes.number,\n\n    // Duration of the buffering animation, in milliseconds\n    bufferAniDuration: PropTypes.number,\n  };\n\n  // ## <section id='defaults'>Defaults</section>\n  static defaultProps = {\n    style: {\n      height: 4,\n    },\n  };\n\n  constructor(props) {\n    super(props);\n    this.theme = getTheme();\n    this._progress = 0;  // initial progress\n    this._buffer = 0;  // initial buffering\n    this._totalLength = 0;  // line length when progress is 100%\n    this._height = new Animated.Value(0);  // height of the progress or line width\n    this._animatedLength = new Animated.Value(0);\n    this._animatedBufferLength = new Animated.Value(0);\n  }\n\n  componentWillMount() {\n    this.progress = this.props.progress;\n    this.buffer = this.props.buffer;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.progress = nextProps.progress;\n    this.buffer = nextProps.buffer;\n  }\n\n  // property initializers begin\n  _onLayout = ({ nativeEvent: { layout: { width, height } } }) => {\n    if (width > 0 && this._totalLength !== width) {\n      this._totalLength = width;\n      this._height.setValue(height);\n      this._aniUpdateProgress(this.progress);\n      this._aniUpdateBuffer(this.buffer);\n    }\n  };\n  // property initializers end\n\n  _aniUpdateProgress(theProgress) {\n    if (!(this._totalLength > 0 && theProgress >= 0)) {\n      return;\n    }\n\n    Animated.timing(this._animatedLength, {\n      toValue: theProgress * this._totalLength,\n      duration: this.props.progressAniDuration || 300,\n      easing: Easing.out(Easing.quad),\n    }).start();\n  }\n\n  _aniUpdateBuffer(buffer) {\n    if (!(this._totalLength > 0 && buffer >= 0)) {\n      return;\n    }\n\n    Animated.timing(this._animatedBufferLength, {\n      toValue: buffer * this._totalLength,\n      duration: this.props.bufferAniDuration || 200,\n    }).start();\n  }\n\n  render() {\n    const progressTheme = this.theme.progressStyle;\n    const style = {\n      backgroundColor: progressTheme.backgroundColor,\n    };\n    const bufferColor = this.props.bufferColor || progressTheme.bufferColor;\n    const progressColor = this.props.progressColor || progressTheme.progressColor;\n\n    return (\n      <View  // the background layer\n        ref=\"bg\"\n        style={[Progress.defaultProps.style, style, this.props.style]}\n        onLayout={this._onLayout}\n      >\n        <Animated.View  // the buffering layer\n          ref=\"bufferLayer\"\n          style={{\n            position: 'absolute',\n            backgroundColor: bufferColor,\n            width: this._animatedBufferLength,\n            height: this._height,\n          }}\n        />\n        <Animated.View  // the forefront layer showing progress\n          ref=\"progressLayer\"\n          style={{\n            position: 'absolute',\n            backgroundColor: progressColor,\n            width: this._animatedLength,\n            height: this._height,\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nObject.defineProperty(Progress.prototype, 'progress', {\n  // Update the current progress.\n  // {`Number`} `value` the current progress, 0 ~ 1\n  set(value) {\n    if (value >= 0 && value !== this._progress) {\n      this._progress = value;\n      this._aniUpdateProgress(value);\n    }\n  },\n\n  // Retrieve the current progress.\n  get() {\n    return this._progress;\n  },\n\n  enumerable: true,\n});\n\nObject.defineProperty(Progress.prototype, 'buffer', {\n  // Update the current percent of buffering.\n  // {`Number`} `value` current percent of buffering, 0 ~ 1\n  set(value) {\n    if (value >= 0 && value !== this._buffer) {\n      this._buffer = value;\n      this._aniUpdateBuffer(value);\n    }\n  },\n\n  // Retrieve the current progress.\n  get() {\n    return this._buffer;\n  },\n\n  enumerable: true,\n});\n\n\n// ## Public interface\nmodule.exports = Progress;\n"]},"metadata":{},"sourceType":"module"}