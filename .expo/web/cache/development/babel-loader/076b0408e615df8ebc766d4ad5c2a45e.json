{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\node_modules\\\\react-native-calendars\\\\src\\\\agenda\\\\reservation-list\\\\reservation.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { xdateToData } from \"../../interface\";\nimport XDate from 'xdate';\nimport dateutils from \"../../dateutils\";\nimport styleConstructor from \"./style\";\n\nclass ReservationListItem extends Component {\n  constructor(props) {\n    super(props);\n    this.styles = styleConstructor(props.theme);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    var r1 = this.props.item;\n    var r2 = nextProps.item;\n    var changed = true;\n\n    if (!r1 && !r2) {\n      changed = false;\n    } else if (r1 && r2) {\n      if (r1.day.getTime() !== r2.day.getTime()) {\n        changed = true;\n      } else if (!r1.reservation && !r2.reservation) {\n        changed = false;\n      } else if (r1.reservation && r2.reservation) {\n        if (!r1.date && !r2.date || r1.date && r2.date) {\n          changed = this.props.rowHasChanged(r1.reservation, r2.reservation);\n        }\n      }\n    }\n\n    return changed;\n  }\n\n  renderDate(date, item) {\n    if (this.props.renderDay) {\n      return this.props.renderDay(date ? xdateToData(date) : undefined, item);\n    }\n\n    var today = dateutils.sameDate(date, XDate()) ? this.styles.today : undefined;\n\n    if (date) {\n      return React.createElement(View, {\n        style: this.styles.day,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        }\n      }, React.createElement(Text, {\n        allowFontScaling: false,\n        style: [this.styles.dayNum, today],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        }\n      }, date.getDate()), React.createElement(Text, {\n        allowFontScaling: false,\n        style: [this.styles.dayText, today],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        }\n      }, XDate.locales[XDate.defaultLocale].dayNamesShort[date.getDay()]));\n    } else {\n      return React.createElement(View, {\n        style: this.styles.day,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        }\n      });\n    }\n  }\n\n  render() {\n    var {\n      reservation,\n      date\n    } = this.props.item;\n    var content;\n\n    if (reservation) {\n      var firstItem = date ? true : false;\n      content = this.props.renderItem(reservation, firstItem);\n    } else {\n      content = this.props.renderEmptyDate(date);\n    }\n\n    return React.createElement(View, {\n      style: this.styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      }\n    }, this.renderDate(date, reservation), React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      }\n    }, content));\n  }\n\n}\n\nReservationListItem.displayName = 'IGNORE';\nexport default ReservationListItem;","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\node_modules\\react-native-calendars\\src\\agenda\\reservation-list\\reservation.js"],"names":["React","Component","xdateToData","XDate","dateutils","styleConstructor","ReservationListItem","constructor","props","styles","theme","shouldComponentUpdate","nextProps","r1","item","r2","changed","day","getTime","reservation","date","rowHasChanged","renderDate","renderDay","undefined","today","sameDate","dayNum","getDate","dayText","locales","defaultLocale","dayNamesShort","getDay","render","content","firstItem","renderItem","renderEmptyDate","container","flex","displayName"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {View, Text} from 'react-native';\r\nimport {xdateToData} from '../../interface';\r\nimport XDate from 'xdate';\r\nimport dateutils from '../../dateutils';\r\nimport styleConstructor from './style';\r\n\r\nclass ReservationListItem extends Component {\r\n  static displayName = 'IGNORE';\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.styles = styleConstructor(props.theme);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    const r1 = this.props.item;\r\n    const r2 = nextProps.item;\r\n    let changed = true;\r\n    if (!r1 && !r2) {\r\n      changed = false;\r\n    } else if (r1 && r2) {\r\n      if (r1.day.getTime() !== r2.day.getTime()) {\r\n        changed = true;\r\n      } else if (!r1.reservation && !r2.reservation) {\r\n        changed = false;\r\n      } else if (r1.reservation && r2.reservation) {\r\n        if ((!r1.date && !r2.date) || (r1.date && r2.date)) {\r\n          changed = this.props.rowHasChanged(r1.reservation, r2.reservation);\r\n        }\r\n      }\r\n    }\r\n    return changed;\r\n  }\r\n\r\n  renderDate(date, item) {\r\n    if (this.props.renderDay) {\r\n      return this.props.renderDay(date ? xdateToData(date) : undefined, item);\r\n    }\r\n    const today = dateutils.sameDate(date, XDate()) ? this.styles.today : undefined;\r\n    if (date) {\r\n      return (\r\n        <View style={this.styles.day}>\r\n          <Text allowFontScaling={false} style={[this.styles.dayNum, today]}>{date.getDate()}</Text>\r\n          <Text allowFontScaling={false} style={[this.styles.dayText, today]}>{XDate.locales[XDate.defaultLocale].dayNamesShort[date.getDay()]}</Text>\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <View style={this.styles.day}/>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {reservation, date} = this.props.item;\r\n    let content;\r\n    if (reservation) {\r\n      const firstItem = date ? true : false;\r\n      content = this.props.renderItem(reservation, firstItem);\r\n    } else {\r\n      content = this.props.renderEmptyDate(date);\r\n    }\r\n    return (\r\n      <View style={this.styles.container}>\r\n        {this.renderDate(date, reservation)}\r\n        <View style={{flex:1}}>\r\n          {content}\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReservationListItem;\r\n"]},"metadata":{},"sourceType":"module"}