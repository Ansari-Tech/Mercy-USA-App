{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\node_modules\\\\react-native-material-kit\\\\lib\\\\mdl\\\\Textfield.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectSpread2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nvar UIManager = NativeModules.UIManager;\nimport * as MKPropTypes from \"../MKPropTypes\";\nimport MKColor from \"../MKColor\";\nimport * as utils from \"../utils\";\nimport { getTheme } from \"../theme\";\nimport { pick } from 'ramda';\n\nclass FloatingLabel extends Component {\n  constructor(props) {\n    super(props);\n\n    this._onLabelLayout = (_ref) => {\n      var {\n        nativeEvent: {\n          layout\n        }\n      } = _ref;\n      var x = layout.x;\n      var width = layout.width;\n      var height = layout.height;\n\n      if (width && !this.offsetX) {\n        this.offsetX = (width - width * 0.8) / 2 * -1 - x;\n      }\n\n      if (height && !this.placeholderHeight) {\n        this.placeholderHeight = height;\n      }\n\n      if (width !== this.labelDim.width || height !== this.labelDim.height) {\n        this.labelDim = {\n          width,\n          height\n        };\n      }\n    };\n\n    this.labelDim = {};\n    this.offsetX = 0;\n    this.placeholderHeight = 0;\n    this.state = {\n      progress: new Animated.Value(1),\n      opacity: new Animated.Value(0),\n      text: ''\n    };\n  }\n\n  componentWillMount() {\n    this.updateText(this.props.text);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.updateText(nextProps.text);\n  }\n\n  updateText(text) {\n    this.setState({\n      text\n    });\n  }\n\n  measure(cb) {\n    return this.refs.label && UIManager.measure(findNodeHandle(this.refs.label), cb);\n  }\n\n  aniFloatLabel() {\n    if (!this.props.floatingLabelEnabled) {\n      return [];\n    }\n\n    return [Animated.sequence([Animated.timing(this.state.opacity, {\n      toValue: 1,\n      duration: this.props.opacityAniDur\n    }), Animated.timing(this.state.progress, {\n      toValue: 0,\n      duration: this.props.floatingLabelAniDuration\n    })])];\n  }\n\n  aniSinkLabel() {\n    if (!this.props.floatingLabelEnabled) {\n      return [];\n    }\n\n    return [Animated.sequence([Animated.timing(this.state.progress, {\n      toValue: 1,\n      duration: this.props.floatingLabelAniDuration\n    }), Animated.timing(this.state.opacity, {\n      toValue: 0,\n      duration: this.props.opacityAniDur\n    })])];\n  }\n\n  render() {\n    var labelColor = this.state.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [this.props.highlightColor, this.props.tintColor]\n    });\n    var labelScale = this.state.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.8, 1]\n    });\n    var labelY = this.state.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, this.placeholderHeight]\n    });\n    var labelX = this.state.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [this.offsetX, 0]\n    });\n    return React.createElement(Animated.Text, {\n      ref: \"label\",\n      pointerEvents: \"none\",\n      allowFontScaling: this.props.allowFontScaling,\n      style: [{\n        backgroundColor: MKColor.Transparent,\n        position: 'absolute',\n        top: labelY,\n        left: labelX,\n        color: labelColor,\n        opacity: this.state.opacity,\n        fontSize: 16,\n        transform: [{\n          scale: labelScale\n        }],\n        marginBottom: this.props.floatingLabelBottomMargin\n      }, this.props.floatingLabelFont],\n      onLayout: this._onLabelLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      }\n    }, this.state.text);\n  }\n\n}\n\nFloatingLabel.publicPropTypes = {\n  floatingLabelEnabled: PropTypes.bool,\n  floatingLabelAniDuration: PropTypes.number,\n  floatingLabelBottomMargin: PropTypes.number,\n  floatingLabelFont: MKPropTypes.font,\n  allowFontScaling: PropTypes.bool\n};\nFloatingLabel.propTypes = _objectSpread2({}, FloatingLabel.publicPropTypes, {\n  tintColor: PropTypes.string,\n  highlightColor: PropTypes.string,\n  opacityAniDur: PropTypes.number\n});\nFloatingLabel.defaultProps = {\n  floatingLabelAniDuration: 200,\n  opacityAniDur: 0\n};\n\nclass Underline extends Component {\n  constructor(props) {\n    super(props);\n    this.animatedLeft = new Animated.Value(0);\n    this.animatedLineLength = new Animated.Value(0);\n    this.state = {\n      lineLength: 0\n    };\n  }\n\n  updateLineLength(lineLength, cb) {\n    this.setState({\n      lineLength\n    }, cb);\n  }\n\n  aniStretchUnderline(focused) {\n    if (!(this.props.underlineEnabled && focused)) {\n      return [];\n    }\n\n    this.animatedLeft.setValue(this.state.lineLength / 2);\n    return [Animated.timing(this.animatedLeft, {\n      toValue: 0,\n      duration: this.props.underlineAniDur\n    }), Animated.timing(this.animatedLineLength, {\n      toValue: this.state.lineLength,\n      duration: this.props.underlineAniDur\n    })];\n  }\n\n  aniShrinkUnderline() {\n    if (!this.props.underlineEnabled) {\n      return [];\n    }\n\n    return [Animated.timing(this.animatedLeft, {\n      toValue: this.state.lineLength / 2,\n      duration: this.props.underlineAniDur\n    }), Animated.timing(this.animatedLineLength, {\n      toValue: 0,\n      duration: this.props.underlineAniDur\n    })];\n  }\n\n  renderUnderline() {\n    return this.props.underlineEnabled && React.createElement(Animated.View, {\n      style: {\n        position: 'absolute',\n        backgroundColor: this.props.highlightColor,\n        height: this.props.underlineSize,\n        left: this.animatedLeft,\n        width: this.animatedLineLength\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(View, {\n      pointerEvents: \"none\",\n      style: {\n        height: this.props.underlineSize\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      }\n    }, React.createElement(View, {\n      style: {\n        position: 'absolute',\n        backgroundColor: this.props.tintColor,\n        height: this.props.underlineSize,\n        width: this.state.lineLength\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      }\n    }), this.renderUnderline());\n  }\n\n}\n\nUnderline.propTypes = {\n  underlineEnabled: PropTypes.bool,\n  tintColor: PropTypes.string,\n  highlightColor: PropTypes.string,\n  underlineSize: PropTypes.number,\n  underlineAniDur: PropTypes.number\n};\nUnderline.defaultProps = {\n  underlineEnabled: true,\n  underlineAniDur: FloatingLabel.defaultProps.floatingLabelAniDuration,\n  underlineSize: 2\n};\n\nclass Textfield extends Component {\n  constructor(props) {\n    super(props);\n\n    this._onTextChange = text => {\n      this.bufferedValue = text;\n\n      this._callback('onTextChange', text);\n\n      this._callback('onChangeText', text);\n    };\n\n    this._onFocus = e => {\n      this._aniStartHighlight(true);\n\n      this._callback('onFocus', e);\n    };\n\n    this._onBlur = e => {\n      this._aniStopHighlight();\n\n      this._callback('onBlur', e);\n    };\n\n    this.theme = getTheme();\n    this.inputFrame = {};\n    this.anim = null;\n    this.state = {\n      inputMarginTop: 0\n    };\n  }\n\n  set bufferedValue(v) {\n    this._bufferedValue = v;\n\n    if (v) {\n      this._aniFloatLabel();\n    }\n  }\n\n  get bufferedValue() {\n    return (this._bufferedValue || '').trim();\n  }\n\n  focus() {\n    if (this.refs.input) {\n      this.refs.input.focus();\n    }\n  }\n\n  isFocused() {\n    return this.refs.input && this.refs.input.isFocused();\n  }\n\n  blur() {\n    if (this.refs.input) {\n      this.refs.input.blur();\n    }\n  }\n\n  componentWillMount() {\n    this.bufferedValue = this.props.value || this.props.text || this.props.defaultValue;\n    this._originPlaceholder = this.props.placeholder;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    var newText = nextProps.value || nextProps.text || nextProps.defaultValue;\n\n    if (newText) {\n      this.bufferedValue = newText;\n    }\n\n    this._originPlaceholder = nextProps.placeholder;\n  }\n\n  componentDidMount() {\n    requestAnimationFrame(this._doMeasurement.bind(this));\n  }\n\n  startAnimations(animations, cb) {\n    if (this.anim) {\n      this.anim.stop();\n    }\n\n    this.anim = Animated.parallel(animations).start(cb);\n  }\n\n  _doMeasurement() {\n    if (this.refs.input) {\n      this.refs.input.measure(this._onInputMeasured.bind(this));\n\n      if (this.props.floatingLabelEnabled && this.refs.floatingLabel) {\n        this.refs.floatingLabel.measure(this._onLabelMeasured.bind(this));\n      }\n    }\n  }\n\n  _onLabelMeasured(left, top, width, height) {\n    this.setState({\n      inputMarginTop: height\n    });\n  }\n\n  _onInputMeasured(left, top, width, height) {\n    _extends(this.inputFrame, {\n      left,\n      top,\n      width,\n      height\n    });\n\n    this.refs.underline.updateLineLength(width, () => {\n      if (this.bufferedValue || this.isFocused()) {\n        this._aniStartHighlight(this.isFocused());\n      }\n    });\n  }\n\n  _aniFloatLabel() {\n    if (!(this.bufferedValue && this.props.floatingLabelEnabled)) {\n      return;\n    }\n\n    if (this.refs.floatingLabel) {\n      var animations = this.refs.floatingLabel.aniFloatLabel();\n\n      if (animations.length) {\n        this.startAnimations(animations);\n      }\n    }\n  }\n\n  _aniStartHighlight(focused) {\n    if (this.props.floatingLabelEnabled) {\n      this.setPlaceholder('');\n      if (this.refs.floatingLabel) this.refs.floatingLabel.updateText(this._originPlaceholder);\n    }\n\n    var animations = this.refs.underline.aniStretchUnderline(focused);\n\n    if (this.props.floatingLabelEnabled && this.refs.floatingLabel) {\n      animations.push(...this.refs.floatingLabel.aniFloatLabel());\n    }\n\n    if (animations.length) {\n      this.startAnimations(animations);\n    }\n  }\n\n  _aniStopHighlight() {\n    var animations = this.refs.underline.aniShrinkUnderline();\n\n    if (this.props.floatingLabelEnabled && !this.bufferedValue) {\n      animations.push(...this.refs.floatingLabel.aniSinkLabel());\n    }\n\n    if (animations.length) {\n      this.startAnimations(animations, () => {\n        if (this.props.floatingLabelEnabled) {\n          this.setPlaceholder(this._originPlaceholder);\n\n          if (!this.bufferedValue && this.refs.floatingLabel) {\n            this.refs.floatingLabel.updateText('');\n          }\n        }\n      });\n    }\n  }\n\n  setPlaceholder(placeholder) {\n    if (this.refs.input) {\n      this.refs.input.setNativeProps({\n        placeholder\n      });\n    }\n  }\n\n  _callback(name, e) {\n    if (this.props[name]) {\n      this.props[name](e);\n    }\n  }\n\n  render() {\n    var tfTheme = this.theme.textfieldStyle;\n    var floatingLabel;\n\n    if (this.props.floatingLabelEnabled) {\n      var props = _extends(pick(['tintColor', 'highlightColor', 'floatingLabelFont'], tfTheme), utils.extractProps(this, FloatingLabel.propTypes));\n\n      floatingLabel = React.createElement(FloatingLabel, _extends({\n        ref: \"floatingLabel\"\n      }, props, {\n        text: this.props.placeholder,\n        allowFontScaling: this.props.allowFontScaling,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        }\n      }));\n    }\n\n    var underlineProps = _extends(pick(['tintColor', 'highlightColor'], tfTheme), utils.extractProps(this, ['tintColor', 'highlightColor', 'underlineSize', 'underlineEnabled']));\n\n    var inputProps = utils.extractProps(this, _objectSpread2({}, TextInput.propTypes, {\n      password: 1\n    }));\n    return React.createElement(View, {\n      style: this.props.style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      }\n    }, floatingLabel, React.createElement(TextInput, _extends({\n      ref: \"input\"\n    }, inputProps, this.props.additionalInputProps, {\n      style: [{\n        backgroundColor: MKColor.Transparent,\n        alignSelf: 'stretch',\n        paddingTop: 2,\n        paddingBottom: 2,\n        marginTop: this.state.inputMarginTop\n      }, this.theme.textfieldStyle.textInputStyle, this.props.textInputStyle],\n      onChangeText: this._onTextChange,\n      onFocus: this._onFocus,\n      onBlur: this._onBlur,\n      allowFontScaling: this.props.allowFontScaling,\n      secureTextEntry: this.props.password,\n      underlineColorAndroid: \"transparent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      }\n    })), React.createElement(Underline, _extends({\n      ref: \"underline\"\n    }, underlineProps, {\n      underlineAniDur: this.props.floatingLabelAniDuration,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      }\n    })));\n  }\n\n}\n\nTextfield.propTypes = _objectSpread2({}, TextInput.propTypes, {\n  text: PropTypes.string,\n  onTextChange: PropTypes.func,\n  password: PropTypes.bool\n}, FloatingLabel.publicPropTypes, {\n  underlineEnabled: PropTypes.bool,\n  underlineSize: PropTypes.number,\n  highlightColor: PropTypes.string,\n  tintColor: PropTypes.string,\n  textInputStyle: PropTypes.any,\n  allowFontScaling: PropTypes.bool,\n  additionalInputProps: PropTypes.any\n});\nTextfield.defaultProps = {\n  style: {\n    height: 39\n  },\n  underlineEnabled: true\n};\n\nvar {\n  Builder\n} = require(\"../builder\");\n\nclass TextfieldBuilder extends Builder {\n  withDefaultValue(defaultValue) {\n    var propName = Textfield.propTypes.defaultValue ? 'defaultValue' : 'value';\n    this[propName] = defaultValue;\n    return this;\n  }\n\n  mergeStyle() {\n    super.mergeStyle();\n\n    if (!this.highlightColor) {\n      this.highlightColor = this.getThemeColor();\n    }\n  }\n\n  build() {\n    var BuiltTextfield = class extends Textfield {};\n    BuiltTextfield.defaultProps = _extends({}, Textfield.defaultProps, this.toProps());\n    return BuiltTextfield;\n  }\n\n}\n\nTextfieldBuilder.defineProps(Textfield.propTypes);\n\nfunction textfield() {\n  return new TextfieldBuilder();\n}\n\nfunction textfieldWithFloatingLabel() {\n  return textfield().withFloatingLabelEnabled(true);\n}\n\nmodule.exports = Textfield;\nTextfield.Builder = TextfieldBuilder;\nTextfield.textfield = textfield;\nTextfield.textfieldWithFloatingLabel = textfieldWithFloatingLabel;","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\node_modules\\react-native-material-kit\\lib\\mdl\\Textfield.js"],"names":["React","Component","PropTypes","UIManager","NativeModules","MKPropTypes","MKColor","utils","getTheme","pick","FloatingLabel","constructor","props","_onLabelLayout","nativeEvent","layout","x","width","height","offsetX","placeholderHeight","labelDim","state","progress","Animated","Value","opacity","text","componentWillMount","updateText","componentWillReceiveProps","nextProps","setState","measure","cb","refs","label","findNodeHandle","aniFloatLabel","floatingLabelEnabled","sequence","timing","toValue","duration","opacityAniDur","floatingLabelAniDuration","aniSinkLabel","render","labelColor","interpolate","inputRange","outputRange","highlightColor","tintColor","labelScale","labelY","labelX","allowFontScaling","backgroundColor","Transparent","position","top","left","color","fontSize","transform","scale","marginBottom","floatingLabelBottomMargin","floatingLabelFont","publicPropTypes","bool","number","font","propTypes","string","defaultProps","Underline","animatedLeft","animatedLineLength","lineLength","updateLineLength","aniStretchUnderline","focused","underlineEnabled","setValue","underlineAniDur","aniShrinkUnderline","renderUnderline","underlineSize","Textfield","_onTextChange","bufferedValue","_callback","_onFocus","e","_aniStartHighlight","_onBlur","_aniStopHighlight","theme","inputFrame","anim","inputMarginTop","v","_bufferedValue","_aniFloatLabel","trim","focus","input","isFocused","blur","value","defaultValue","_originPlaceholder","placeholder","newText","componentDidMount","requestAnimationFrame","_doMeasurement","bind","startAnimations","animations","stop","parallel","start","_onInputMeasured","floatingLabel","_onLabelMeasured","underline","length","setPlaceholder","push","setNativeProps","name","tfTheme","textfieldStyle","extractProps","underlineProps","inputProps","TextInput","password","style","additionalInputProps","alignSelf","paddingTop","paddingBottom","marginTop","textInputStyle","onTextChange","func","any","Builder","require","TextfieldBuilder","withDefaultValue","propName","mergeStyle","getThemeColor","build","BuiltTextfield","toProps","defineProps","textfield","textfieldWithFloatingLabel","withFloatingLabelEnabled","module","exports"],"mappings":"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","sourcesContent":["/* eslint react/no-multi-comp:0, react/sort-comp:0 */\n//\n// MDL style textfield component.\n//\n// - @see [MDL Textfield](http://www.getmdl.io/components/index.html#textfields-section)\n// - [Props](#props)\n// - [Defaults](#defaults)\n// - [Built-in builders](#builders)\n//\n// Created by ywu on 15/8/3.\n//\n\nimport React, {\n  Component,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Animated,\n  TextInput,\n  View,\n  NativeModules,\n  findNodeHandle,\n} from 'react-native';\nconst UIManager = NativeModules.UIManager;\n\nimport * as MKPropTypes from '../MKPropTypes';\nimport MKColor from '../MKColor';\nimport * as utils from '../utils';\nimport { getTheme } from '../theme';\n\nimport { pick } from 'ramda';\n\n//\n// ## <section id='FloatingLabel'>FloatingLabel</section>\n// `FloatingLabel` component of the [`Textfield`](#Textfield).\n//\nclass FloatingLabel extends Component {\n  constructor(props) {\n    super(props);\n    this.labelDim = {};\n    this.offsetX = 0;\n    this.placeholderHeight = 0;\n    this.state = {\n      progress: new Animated.Value(1),\n      opacity: new Animated.Value(0),\n      text: '',\n    };\n  }\n\n  componentWillMount() {\n    this.updateText(this.props.text);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.updateText(nextProps.text);\n  }\n\n  // property initializers begin\n\n  _onLabelLayout = ({ nativeEvent: { layout } }) => {\n    const x = layout.x;\n    const width = layout.width;\n    const height = layout.height;\n\n    if (width && !this.offsetX) {\n      this.offsetX = ((width - (width * 0.8)) / 2 * -1) - x;\n    }\n\n    if (height && !this.placeholderHeight) {\n      this.placeholderHeight = height;\n    }\n\n    if (width !== this.labelDim.width || height !== this.labelDim.height) {\n      this.labelDim = { width, height };\n    }\n  };\n\n  // property initializers end\n\n  updateText(text) {\n    this.setState({ text });\n  }\n\n  measure(cb) {\n    return this.refs.label && UIManager.measure(findNodeHandle(this.refs.label), cb);\n  }\n\n  aniFloatLabel() {\n    if (!this.props.floatingLabelEnabled) {\n      return [];\n    }\n\n    return [Animated.sequence([\n      Animated.timing(this.state.opacity, {\n        toValue: 1,\n        duration: this.props.opacityAniDur,\n      }),\n      Animated.timing(this.state.progress, {\n        toValue: 0,\n        duration: this.props.floatingLabelAniDuration,\n      }),\n    ])];\n  }\n\n  aniSinkLabel() {\n    if (!this.props.floatingLabelEnabled) {\n      return [];\n    }\n\n    return [Animated.sequence([\n      Animated.timing(this.state.progress, {\n        toValue: 1,\n        duration: this.props.floatingLabelAniDuration,\n      }),\n      Animated.timing(this.state.opacity, {\n        toValue: 0,\n        duration: this.props.opacityAniDur,\n      }),\n    ])];\n  }\n\n  render() {\n    const labelColor = this.state.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [this.props.highlightColor, this.props.tintColor],\n    });\n\n    const labelScale = this.state.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.8, 1],\n    });\n\n    const labelY = this.state.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, this.placeholderHeight],\n    });\n\n    const labelX = this.state.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [this.offsetX, 0],\n    });\n\n    return (\n      <Animated.Text\n        ref=\"label\"\n        pointerEvents=\"none\"\n        allowFontScaling={this.props.allowFontScaling}\n\n        style={[{\n          backgroundColor: MKColor.Transparent,\n          position: 'absolute',\n          top: labelY,\n          left: labelX,\n          color: labelColor,\n          opacity: this.state.opacity,\n          fontSize: 16,\n          transform: [\n            { scale: labelScale },\n          ],\n          marginBottom: this.props.floatingLabelBottomMargin,\n        },\n        this.props.floatingLabelFont,\n        ]}\n        onLayout={this._onLabelLayout}\n      >\n        {this.state.text}\n      </Animated.Text>\n    );\n  }\n}\n\n// ## <section id='floatingLabelProps'>FloatingLabel Props</section>\nFloatingLabel.publicPropTypes = {\n  // Enable floating label effect\n  floatingLabelEnabled: PropTypes.bool,\n\n  // Duration of floating transition, also affect underline animation\n  floatingLabelAniDuration: PropTypes.number,\n\n  // Spacing between floating label and input text\n  floatingLabelBottomMargin: PropTypes.number,\n\n  // [Font](MKPropTypes.html#font) of floating label\n  // FIXME causing warning: `typeChecker is not a function`\n  floatingLabelFont: MKPropTypes.font,\n\n  // Specifies should fonts scale to respect Text Size accessibility setting on iOS.\n  allowFontScaling: PropTypes.bool,\n};\n\nFloatingLabel.propTypes = {\n  ...FloatingLabel.publicPropTypes,\n\n  // internal props\n  tintColor: PropTypes.string,\n  highlightColor: PropTypes.string,\n  opacityAniDur: PropTypes.number,\n};\n\nFloatingLabel.defaultProps = {\n  floatingLabelAniDuration: 200,\n  opacityAniDur: 0,\n};\n\n\n//\n// ## <section id='Underline'>Underline</section>\n// `Underline` component of the [`Textfield`](#Textfield).\n//\nclass Underline extends Component {\n  constructor(props) {\n    super(props);\n    this.animatedLeft = new Animated.Value(0);\n    this.animatedLineLength = new Animated.Value(0);\n    this.state = {\n      lineLength: 0,\n    };\n  }\n\n  // update the length of stretched underline\n  updateLineLength(lineLength, cb) {\n    this.setState({ lineLength }, cb);\n  }\n\n  // stretch the line, from center\n  aniStretchUnderline(focused) {\n    if (!(this.props.underlineEnabled && focused)) {\n      return [];\n    }\n\n    this.animatedLeft.setValue(this.state.lineLength / 2);\n    return [\n      Animated.timing(this.animatedLeft, {\n        toValue: 0,\n        duration: this.props.underlineAniDur,\n      }),\n      Animated.timing(this.animatedLineLength, {\n        toValue: this.state.lineLength,\n        duration: this.props.underlineAniDur,\n      }),\n    ];\n  }\n\n  // collapse the the line to a single point at center\n  aniShrinkUnderline() {\n    if (!this.props.underlineEnabled) {\n      return [];\n    }\n\n    return [\n      Animated.timing(this.animatedLeft, {\n        toValue: this.state.lineLength / 2,\n        duration: this.props.underlineAniDur,\n      }),\n      Animated.timing(this.animatedLineLength, {\n        toValue: 0,\n        duration: this.props.underlineAniDur,\n      }),\n    ];\n  }\n\n  // the colorful forefront line, animation enabled\n  renderUnderline() {\n    return this.props.underlineEnabled && (\n      <Animated.View\n        style={{\n          position: 'absolute',\n          backgroundColor: this.props.highlightColor,\n          height: this.props.underlineSize,\n          left: this.animatedLeft,\n          width: this.animatedLineLength,\n        }}\n      />);\n  }\n\n  render() {\n    return (\n      <View pointerEvents=\"none\"\n        style={{\n          // top: -this.props.underlineSize,\n          height: this.props.underlineSize,\n        }}\n      >\n        <View  // the default silver border\n          style={{\n            position: 'absolute',\n            backgroundColor: this.props.tintColor,\n            height: this.props.underlineSize,\n            width: this.state.lineLength,\n          }}\n        />\n        {this.renderUnderline()}\n      </View>\n    );\n  }\n}\n\nUnderline.propTypes = {\n  // internal props\n  underlineEnabled: PropTypes.bool,\n  tintColor: PropTypes.string,\n  highlightColor: PropTypes.string,\n  underlineSize: PropTypes.number,\n  underlineAniDur: PropTypes.number,\n};\n\nUnderline.defaultProps = {\n  underlineEnabled: true,\n  underlineAniDur: FloatingLabel.defaultProps.floatingLabelAniDuration,\n  underlineSize: 2,\n};\n\n\n//\n// ## <section id='Textfield'>Textfield</section>\n// `Textfield` component,\n// which has floating label and underline effect.\n// - TODO styling read-only & diabled mode\n//\nclass Textfield extends Component {\n  constructor(props) {\n    super(props);\n    this.theme = getTheme();\n    this.inputFrame = {};\n    this.anim = null;\n    this.state = {\n      inputMarginTop: 0,\n    };\n  }\n\n  set bufferedValue(v) {\n    this._bufferedValue = v;\n    if (v) {\n      this._aniFloatLabel();\n    }\n  }\n\n  get bufferedValue() {\n    return (this._bufferedValue || '').trim();\n  }\n\n  focus() {\n    if (this.refs.input) {\n      this.refs.input.focus();\n    }\n  }\n\n  isFocused() {\n    return this.refs.input && this.refs.input.isFocused();\n  }\n\n  blur() {\n    if (this.refs.input) {\n      this.refs.input.blur();\n    }\n  }\n\n  componentWillMount() {\n    this.bufferedValue = this.props.value || this.props.text ||\n    this.props.defaultValue;\n    this._originPlaceholder = this.props.placeholder;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const newText = nextProps.value || nextProps.text || nextProps.defaultValue;\n    if (newText) {\n      this.bufferedValue = newText;\n    }\n    this._originPlaceholder = nextProps.placeholder;\n  }\n\n  componentDidMount() {\n    requestAnimationFrame(this._doMeasurement.bind(this));\n  }\n\n  // property initializers begin\n\n  _onTextChange = (text) => {\n    this.bufferedValue = text;\n    this._callback('onTextChange', text);\n    this._callback('onChangeText', text);\n  };\n\n  _onFocus = (e) => {\n    this._aniStartHighlight(true);\n    this._callback('onFocus', e);\n  };\n\n  _onBlur = (e) => {\n    this._aniStopHighlight();\n    this._callback('onBlur', e);\n  };\n\n  // property initializers end\n\n  startAnimations(animations, cb) {\n    if (this.anim) {\n      this.anim.stop();\n    }\n\n    this.anim = Animated.parallel(animations).start(cb);\n  }\n\n  _doMeasurement() {\n    if (this.refs.input) {\n      this.refs.input.measure(this._onInputMeasured.bind(this));\n      if (this.props.floatingLabelEnabled && this.refs.floatingLabel) {\n        this.refs.floatingLabel.measure(this._onLabelMeasured.bind(this));\n      }\n    }\n  }\n\n  _onLabelMeasured(left, top, width, height) {\n    this.setState({ inputMarginTop: height });\n  }\n\n  _onInputMeasured(left, top, width, height) {\n    Object.assign(this.inputFrame, { left, top, width, height });\n    this.refs.underline.updateLineLength(width, () => {\n      if (this.bufferedValue || this.isFocused()) {\n        this._aniStartHighlight(this.isFocused());  // if input not empty, lift the label\n      }\n    });\n  }\n\n  _aniFloatLabel() {\n    if (!(this.bufferedValue && this.props.floatingLabelEnabled)) {\n      return;\n    }\n\n    if (this.refs.floatingLabel) {\n      const animations = this.refs.floatingLabel.aniFloatLabel();\n      if (animations.length) {\n        this.startAnimations(animations);\n      }\n    }\n  }\n\n  // animation when textfield focused\n  _aniStartHighlight(focused) {\n    if (this.props.floatingLabelEnabled) {\n      // hide fixed placeholder, if floating\n      this.setPlaceholder('');\n\n      // and show floating label\n      // FIXME workaround https://github.com/facebook/react-native/issues/3220\n      if (this.refs.floatingLabel)\n        this.refs.floatingLabel.updateText(this._originPlaceholder);\n    }\n\n    // stretch the underline if enabled\n    const animations = this.refs.underline.aniStretchUnderline(focused);\n\n    // and lift the floating label, if enabled\n    if (this.props.floatingLabelEnabled && this.refs.floatingLabel) {\n      animations.push(...this.refs.floatingLabel.aniFloatLabel());\n    }\n\n    if (animations.length) {\n      this.startAnimations(animations);\n    }\n  }\n\n  // animation when textfield lost focus\n  _aniStopHighlight() {\n    // shrink the underline\n    const animations = this.refs.underline.aniShrinkUnderline();\n\n    // pull down the label, or keep position if input is not empty\n    if (this.props.floatingLabelEnabled && !this.bufferedValue) {\n      // input is empty, label should be pulled down\n      animations.push(...this.refs.floatingLabel.aniSinkLabel());\n    }\n\n    if (animations.length) {\n      this.startAnimations(animations, () => {\n        if (this.props.floatingLabelEnabled) {\n          // then show fixed placeholder\n          this.setPlaceholder(this._originPlaceholder);\n\n          // and hide floating label\n          // FIXME workaround https://github.com/facebook/react-native/issues/3220\n          if (!this.bufferedValue && this.refs.floatingLabel) {\n            this.refs.floatingLabel.updateText('');\n          }\n        }\n      });\n    }\n  }\n\n  setPlaceholder(placeholder) {\n    if (this.refs.input) {\n      this.refs.input.setNativeProps({ placeholder });\n    }\n  }\n\n  _callback(name, e) {\n    if (this.props[name]) {\n      this.props[name](e);\n    }\n  }\n\n  render() {\n    const tfTheme = this.theme.textfieldStyle;\n    let floatingLabel;\n    if (this.props.floatingLabelEnabled) {\n      // the floating label\n      const props = Object.assign(\n        pick(['tintColor', 'highlightColor', 'floatingLabelFont'], tfTheme),\n        utils.extractProps(this, FloatingLabel.propTypes));\n\n      floatingLabel = (\n        <FloatingLabel ref=\"floatingLabel\"\n          {...props}\n          text={this.props.placeholder}\n          allowFontScaling={this.props.allowFontScaling}\n        />\n      );\n    }\n\n    const underlineProps = Object.assign(\n      pick(['tintColor', 'highlightColor'], tfTheme),\n      utils.extractProps(this, ['tintColor',\n        'highlightColor', 'underlineSize', 'underlineEnabled']));\n    const inputProps = utils.extractProps(this, {\n      ...TextInput.propTypes,\n      password: 1,\n    });\n\n    return (\n      <View style={this.props.style} >\n        {floatingLabel}\n        <TextInput  // the input\n          ref=\"input\"\n          {...inputProps}\n          {...this.props.additionalInputProps}\n          style={[{\n            backgroundColor: MKColor.Transparent,\n            alignSelf: 'stretch',\n            paddingTop: 2, paddingBottom: 2,\n            marginTop: this.state.inputMarginTop,\n          },\n          this.theme.textfieldStyle.textInputStyle,\n          this.props.textInputStyle,\n          ]}\n          onChangeText={this._onTextChange}\n          onFocus={this._onFocus}\n          onBlur={this._onBlur}\n          allowFontScaling={this.props.allowFontScaling}\n          secureTextEntry={this.props.password}\n          underlineColorAndroid=\"transparent\"\n        />\n        <Underline ref=\"underline\"  // the underline\n          {...underlineProps}\n          underlineAniDur={this.props.floatingLabelAniDuration}\n        />\n      </View>\n    );\n  }\n}\n\n// ## <section id='props'>Props</section>\nTextfield.propTypes = {\n  // [TextInput Props](https://facebook.github.io/react-native/docs/textinput.html#props)...\n  ...TextInput.propTypes,\n\n  // Alias to `value`\n  text: PropTypes.string,\n\n  // alias to `onChangeText`\n  onTextChange: PropTypes.func,\n\n  // Alias to `secureTextEntry`\n  password: PropTypes.bool,\n\n  // [Floating Label Props](#floatingLabelProps)...\n  ...FloatingLabel.publicPropTypes,\n\n  // The highlighted bottom border effect\n  underlineEnabled: PropTypes.bool,\n\n  // The thickness of the Underline\n  underlineSize: PropTypes.number,\n\n  // Color of the highlighted underline, and also the floating label\n  highlightColor: PropTypes.string,\n\n  // Color of the un-highlighted underline, and the placeholder\n  // - TODO cursor color is not affected for now\n  // @see https://github.com/facebook/react-native/issues/1685\n  tintColor: PropTypes.string,\n\n  // Style applied to the `TextInput` component, ok to use `StyleSheet`\n  textInputStyle: PropTypes.any,\n\n  // Specifies should fonts scale to respect Text Size accessibility setting on iOS.\n  allowFontScaling: PropTypes.bool,\n\n  // Additional props passed directly to the react native `TextInput` component\n  additionalInputProps: PropTypes.any\n};\n\n// ## <section id='defaults'>Defaults</section>\nTextfield.defaultProps = {\n  // tintColor: 'rgba(0,0,0,.12)',\n  // highlightColor: getTheme().primaryColor,\n  // floatingLabelFont: {\n  //   fontSize: getTheme().fontSize - 2,\n  // },\n  style: {\n    height: 39,\n  },\n  // textInputStyle: {\n  //   color: getTheme().fontColor,\n  //   fontSize: getTheme().fontSize + 2,\n  //   paddingLeft: 0,\n  //   paddingRight: 0,\n  // },\n  underlineEnabled: true,\n};\n\n\n// --------------------------\n// Builder\n//\nconst {\n  Builder,\n} = require('../builder');\n\n//\n// ## Textfield builder\n//\nclass TextfieldBuilder extends Builder {\n\n  // For compatibility with RN version older than 0.9.0.\n  // > Since [RN v0.9.0][], `TextInput` became a [controlled component][]\n  // [RN v0.9.0]: https://github.com/facebook/react-native/releases/tag/v0.9.0-rc\n  // [controlled component]: https://facebook.github.io/react/docs/forms.html#controlled-components\n  withDefaultValue(defaultValue) {\n    const propName = Textfield.propTypes.defaultValue ? 'defaultValue' : 'value';\n    this[propName] = defaultValue;\n    return this;\n  }\n\n  mergeStyle() {\n    super.mergeStyle();\n\n    if (!this.highlightColor) {\n      this.highlightColor = this.getThemeColor();\n    }\n  }\n\n  build() {\n    const BuiltTextfield = class extends Textfield {};\n    BuiltTextfield.defaultProps = Object.assign({}, Textfield.defaultProps, this.toProps());\n    return BuiltTextfield;\n  }\n}\n\n// define builder method for each prop\nTextfieldBuilder.defineProps(Textfield.propTypes);\n\n\n// ----------\n// ## <section id=\"builders\">Built-in builders</section>\n//\nfunction textfield() {\n  return new TextfieldBuilder();\n}\n\nfunction textfieldWithFloatingLabel() {\n  return textfield().withFloatingLabelEnabled(true);\n}\n\n\n// ## Public interface\nmodule.exports = Textfield;\n\nTextfield.Builder = TextfieldBuilder;\nTextfield.textfield = textfield;\nTextfield.textfieldWithFloatingLabel = textfieldWithFloatingLabel;\n"]},"metadata":{},"sourceType":"module"}