{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\node_modules\\\\react-native-material-kit\\\\lib\\\\mdl\\\\Button.js\";\n\nfunction _objectSpread2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport MKColor from \"../MKColor\";\nimport Ripple from \"./Ripple\";\nimport * as utils from \"../utils\";\nimport { getTheme } from \"../theme\";\n\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n    this.theme = getTheme();\n    this.state = {\n      width: 0,\n      height: 0\n    };\n  }\n\n  _onLayout(_ref) {\n    var {\n      nativeEvent: {\n        layout: {\n          width,\n          height\n        }\n      }\n    } = _ref;\n\n    if (width !== this.state.width || height !== this.state.height) {\n      this.setState({\n        width,\n        height\n      });\n    }\n  }\n\n  _renderChildren() {\n    return this.props.children;\n  }\n\n  render() {\n    var touchableProps = {};\n\n    if (this.props.enabled) {\n      _extends(touchableProps, utils.extractTouchableProps(this));\n    }\n\n    touchableProps.onLayout = this._onLayout.bind(this);\n    var fabStyle = {};\n    var maskProps = {};\n\n    if (this.props.fab) {\n      maskProps.maskBorderRadiusInPercent = 50;\n\n      if (this.state.width > 0 || this.state.height > 0) {\n        var size = Math.min(this.state.width, this.state.height);\n\n        if (!size || size <= 0) {\n          size = Math.max(this.state.width, this.state.height);\n        }\n\n        fabStyle.width = size;\n        fabStyle.height = size;\n        fabStyle.borderRadius = size / 2;\n      }\n    }\n\n    return React.createElement(TouchableWithoutFeedback, _extends({}, touchableProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      }\n    }), React.createElement(Ripple, _extends({\n      ref: \"container\"\n    }, this.props, maskProps, {\n      style: [this.props.style, fabStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      }\n    }), this._renderChildren()));\n  }\n\n}\n\nButton.propTypes = _objectSpread2({}, Ripple.propTypes, {}, TouchableWithoutFeedback.propTypes, {\n  fab: PropTypes.bool,\n  enabled: PropTypes.bool\n});\nButton.defaultProps = _objectSpread2({}, Ripple.defaultProps, {\n  pointerEvents: 'box-only',\n  enabled: true\n});\n\nvar {\n  TextViewBuilder\n} = require(\"../builder\");\n\nclass ButtonBuilder extends TextViewBuilder {\n  mergeStyle() {\n    this.choseBackgroundColor();\n\n    if (this.fab) {\n      this.styleFab();\n    }\n\n    super.mergeStyle();\n  }\n\n  styleFab() {\n    this.mergeStyleWith({\n      width: 48,\n      height: 48,\n      borderRadius: 24\n    });\n  }\n\n  build() {\n    var theBuilder = this;\n    var props = this.toProps();\n    var BuiltButton = class extends Button {\n      _renderChildren() {\n        return theBuilder.text ? React.createElement(Text, {\n          style: theBuilder.textStyle || {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          }\n        }, theBuilder.text) : this.props.children;\n      }\n\n    };\n    BuiltButton.defaultProps = _extends({}, Button.defaultProps, props);\n    return BuiltButton;\n  }\n\n}\n\nButtonBuilder.defineProps(Button.propTypes);\n\nfunction coloredRaisedButton() {\n  return new ButtonBuilder().withStyle({\n    borderRadius: 2,\n    shadowRadius: 1,\n    shadowOffset: {\n      width: 0,\n      height: 0.5\n    },\n    shadowOpacity: 0.7,\n    shadowColor: 'black',\n    elevation: 4\n  }).withTextStyle({\n    color: 'white',\n    fontWeight: 'bold'\n  });\n}\n\nfunction accentColoredRaisedButton() {\n  return coloredRaisedButton().withAccent(true);\n}\n\nfunction plainRaisedButton() {\n  return coloredRaisedButton().withBackgroundColor(MKColor.Silver).withMaskColor(getTheme().bgPlain).withRippleColor(getTheme().bgPlain).withTextStyle({\n    color: 'black',\n    fontWeight: 'bold'\n  });\n}\n\nfunction flatButton() {\n  return new ButtonBuilder().withBackgroundColor(MKColor.Transparent).withMaskColor(getTheme().bgPlain).withRippleColor(getTheme().bgPlain).withShadowAniEnabled(false).withStyle({\n    borderRadius: 2\n  }).withTextStyle({\n    color: 'black',\n    fontWeight: 'bold'\n  });\n}\n\nfunction coloredFlatButton() {\n  return flatButton().withRippleColor('rgba(255,255,255,0.2)').withTextStyle({\n    color: getTheme().primaryColor,\n    fontWeight: 'bold'\n  });\n}\n\nfunction accentColoredFlatButton() {\n  return flatButton().withRippleColor('rgba(255,255,255,0.2)').withTextStyle({\n    color: getTheme().accentColor,\n    fontWeight: 'bold'\n  });\n}\n\nfunction coloredFab() {\n  return new ButtonBuilder().withStyle({\n    shadowRadius: 1,\n    shadowOffset: {\n      width: 0,\n      height: 0.5\n    },\n    shadowOpacity: 0.4,\n    shadowColor: 'black',\n    elevation: 4\n  }).withFab(true).withRippleLocation('center');\n}\n\nfunction accentColoredFab() {\n  return coloredFab().withAccent(true);\n}\n\nfunction plainFab() {\n  return coloredFab().withMaskColor(getTheme().bgPlain).withRippleColor(getTheme().bgPlain).withBackgroundColor(MKColor.Silver);\n}\n\nmodule.exports = Button;\nButton.Builder = ButtonBuilder;\nButton.button = plainRaisedButton;\nButton.coloredButton = coloredRaisedButton;\nButton.accentColoredButton = accentColoredRaisedButton;\nButton.flatButton = flatButton;\nButton.coloredFlatButton = coloredFlatButton;\nButton.accentColoredFlatButton = accentColoredFlatButton;\nButton.plainFab = plainFab;\nButton.coloredFab = coloredFab;\nButton.accentColoredFab = accentColoredFab;","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\node_modules\\react-native-material-kit\\lib\\mdl\\Button.js"],"names":["React","Component","PropTypes","MKColor","Ripple","utils","getTheme","Button","constructor","props","theme","state","width","height","_onLayout","nativeEvent","layout","setState","_renderChildren","children","render","touchableProps","enabled","extractTouchableProps","onLayout","bind","fabStyle","maskProps","fab","maskBorderRadiusInPercent","size","Math","min","max","borderRadius","style","propTypes","TouchableWithoutFeedback","bool","defaultProps","pointerEvents","TextViewBuilder","require","ButtonBuilder","mergeStyle","choseBackgroundColor","styleFab","mergeStyleWith","build","theBuilder","toProps","BuiltButton","text","textStyle","defineProps","coloredRaisedButton","withStyle","shadowRadius","shadowOffset","shadowOpacity","shadowColor","elevation","withTextStyle","color","fontWeight","accentColoredRaisedButton","withAccent","plainRaisedButton","withBackgroundColor","Silver","withMaskColor","bgPlain","withRippleColor","flatButton","Transparent","withShadowAniEnabled","coloredFlatButton","primaryColor","accentColoredFlatButton","accentColor","coloredFab","withFab","withRippleLocation","accentColoredFab","plainFab","module","exports","Builder","button","coloredButton","accentColoredButton"],"mappings":"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","sourcesContent":["//\n// MDL-style Button component.\n//\n// - @see [MDL Button](http://www.getmdl.io/components/index.html#buttons-section)\n// - [Props](#props)\n// - [Defaults](#defaults)\n// - [Built-in builders](#builders)\n//\n// Created by ywu on 15/7/2.\n//\n\nimport React, {\n  Component,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  TouchableWithoutFeedback,\n  Text,\n} from 'react-native';\n\nimport MKColor from '../MKColor';\nimport Ripple from './Ripple';\nimport * as utils from '../utils';\nimport { getTheme } from '../theme';\n\n//\n// ## <section id='Button'>Button</section>\n// The `Button` component. With configurable shadow, ripple effect, and FAB style.\n//\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n    this.theme = getTheme();\n    this.state = {\n      width: 0,\n      height: 0,\n    };\n  }\n\n  _onLayout({ nativeEvent: { layout: { width, height } } }) {\n    if (width !== this.state.width || height !== this.state.height) {\n      this.setState({\n        width,\n        height,\n      });\n    }\n  }\n\n  _renderChildren() {\n    return this.props.children;\n  }\n\n  render() {\n    const touchableProps = {};\n    if (this.props.enabled) {\n      Object.assign(touchableProps, utils.extractTouchableProps(this));\n    }\n\n    // fix #57 applying `onLayout` to <Ripple>, <TouchableXXX> clones `onLayout` to it's child\n    touchableProps.onLayout = this._onLayout.bind(this);\n\n    const fabStyle = {};\n    const maskProps = {};\n\n    if (this.props.fab) {\n      maskProps.maskBorderRadiusInPercent = 50;\n\n      if (this.state.width > 0 || this.state.height > 0) {\n        let size = Math.min(this.state.width, this.state.height);\n        if (!size || size <= 0) {\n          size = Math.max(this.state.width, this.state.height);\n        }\n\n        fabStyle.width = size;\n        fabStyle.height = size;\n        fabStyle.borderRadius = size / 2;\n      }\n    }\n\n    return (\n      <TouchableWithoutFeedback {...touchableProps}>\n        <Ripple ref=\"container\"\n          {...this.props}\n          {...maskProps}\n          style={[\n            this.props.style,\n            fabStyle,\n          ]}\n        >\n          {this._renderChildren()}\n        </Ripple>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\n// ## <section id='props'>Props</section>\nButton.propTypes = {\n  // [Ripple Props](Ripple.html#props)...\n  ...Ripple.propTypes,\n\n  // [RN.TouchableWithoutFeedback Props](https://facebook.github.io/react-native/docs/touchablewithoutfeedback.html#props)...\n  ...TouchableWithoutFeedback.propTypes,\n\n  // Whether this's a FAB\n  fab: PropTypes.bool,\n\n  // Whether the button is enabled\n  enabled: PropTypes.bool,\n};\n\n// ## <section id='defaults'>Defaults</section>\nButton.defaultProps = {\n  // [Ripple defaults](Ripple.html#defaults)...\n  ...Ripple.defaultProps,\n  pointerEvents: 'box-only',\n  enabled: true,\n};\n\n\n// --------------------------\n// Builder\n//\nconst { TextViewBuilder } = require('../builder');\n\n//\n// ## Button builder\n// - @see [TextViewBuilder](../builder.html#TextViewBuilder)\n//\nclass ButtonBuilder extends TextViewBuilder {\n  mergeStyle() {\n    this.choseBackgroundColor();\n    if (this.fab) {\n      this.styleFab();\n    }\n    super.mergeStyle();\n  }\n\n  // merge default FAB style with custom setting\n  styleFab() {\n    this.mergeStyleWith({\n      width: 48,\n      height: 48,\n      borderRadius: 24,\n    });\n  }\n\n  build() {\n    const theBuilder = this;\n    const props = this.toProps();\n\n    const BuiltButton = class extends Button {\n      _renderChildren() {\n        // use a text or a custom content\n        return theBuilder.text ? (\n          <Text style={theBuilder.textStyle || {}}>\n            {theBuilder.text}\n          </Text>\n        ) : this.props.children;\n      }\n    };\n    BuiltButton.defaultProps = Object.assign({}, Button.defaultProps, props);\n    return BuiltButton;\n  }\n}\n\n// define builder method for each prop\nButtonBuilder.defineProps(Button.propTypes);\n\n\n// ----------\n// ## <section id=\"builders\">Built-in builders</section>\n//\n\n// Colored raised button\n// FIXME shadow not work on Android\n// @see https://facebook.github.io/react-native/docs/known-issues.html#no-support-for-shadows-on-android\nfunction coloredRaisedButton() {\n  return new ButtonBuilder()\n    .withStyle({\n      borderRadius: 2,\n      shadowRadius: 1,\n      shadowOffset: { width: 0, height: 0.5 },\n      shadowOpacity: 0.7,\n      shadowColor: 'black',\n      elevation: 4,\n    })\n    .withTextStyle({\n      color: 'white',\n      fontWeight: 'bold',\n    });\n}\n\n\n// Accent colored raised button\nfunction accentColoredRaisedButton() {\n  return coloredRaisedButton().withAccent(true);\n}\n\n// Plain raised button\nfunction plainRaisedButton() {\n  // FIXME doesn't support translucent bg, has shadow problems\n  return coloredRaisedButton()\n    // .withBackgroundColor(getTheme().bgPlain)\n    .withBackgroundColor(MKColor.Silver)\n    .withMaskColor(getTheme().bgPlain)\n    .withRippleColor(getTheme().bgPlain)\n    // .withStyle({\n    //   shadowOffset: {width: 0.3, height: 0},\n    // })\n    .withTextStyle({\n      color: 'black',\n      fontWeight: 'bold',\n    });\n}\n\n// Plain flat button\nfunction flatButton() {\n  return new ButtonBuilder()\n    .withBackgroundColor(MKColor.Transparent)\n    .withMaskColor(getTheme().bgPlain)\n    .withRippleColor(getTheme().bgPlain)\n    .withShadowAniEnabled(false)\n    .withStyle({\n      borderRadius: 2,\n    })\n    .withTextStyle({\n      color: 'black',\n      fontWeight: 'bold',\n    });\n}\n\n// Colored flat button\nfunction coloredFlatButton() {\n  return flatButton()\n    .withRippleColor('rgba(255,255,255,0.2)')\n    .withTextStyle({\n      color: getTheme().primaryColor,\n      fontWeight: 'bold',\n    });\n}\n\n// Accent colored flat button\nfunction accentColoredFlatButton() {\n  return flatButton()\n    .withRippleColor('rgba(255,255,255,0.2)')\n    .withTextStyle({\n      color: getTheme().accentColor,\n      fontWeight: 'bold',\n    });\n}\n\n// Colored FAB\nfunction coloredFab() {\n  return new ButtonBuilder()\n    .withStyle({\n      shadowRadius: 1,\n      shadowOffset: { width: 0, height: 0.5 },\n      shadowOpacity: 0.4,\n      shadowColor: 'black',\n      elevation: 4,\n    })\n    .withFab(true)\n    .withRippleLocation('center');\n}\n\n// Accent colored FAB\nfunction accentColoredFab() {\n  return coloredFab().withAccent(true);\n}\n\n// Plain FAB\nfunction plainFab() {\n  // FIXME doesn't support translucent bg, has shadow problems\n  return coloredFab()\n    .withMaskColor(getTheme().bgPlain)\n    .withRippleColor(getTheme().bgPlain)\n    .withBackgroundColor(MKColor.Silver);\n}\n\n\n// ## Public interface\nmodule.exports = Button;\n\nButton.Builder = ButtonBuilder;\nButton.button = plainRaisedButton;\nButton.coloredButton = coloredRaisedButton;\nButton.accentColoredButton = accentColoredRaisedButton;\nButton.flatButton = flatButton;\nButton.coloredFlatButton = coloredFlatButton;\nButton.accentColoredFlatButton = accentColoredFlatButton;\nButton.plainFab = plainFab;\nButton.coloredFab = coloredFab;\nButton.accentColoredFab = accentColoredFab;\n"]},"metadata":{},"sourceType":"module"}