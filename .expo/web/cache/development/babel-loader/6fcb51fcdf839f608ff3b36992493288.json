{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar-list\\\\item.js\";\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Calendar from \"../calendar\";\nimport styleConstructor from \"./style\";\n\nclass CalendarListItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onPressArrowLeft = (_, month) => {\n      var monthClone = month.clone();\n\n      if (this.props.onPressArrowLeft) {\n        this.props.onPressArrowLeft(_, monthClone);\n      } else if (this.props.scrollToMonth) {\n        monthClone.addMonths(-1);\n        this.props.scrollToMonth(monthClone);\n      }\n    };\n\n    this.onPressArrowRight = (_, month) => {\n      var monthClone = month.clone();\n\n      if (this.props.onPressArrowRight) {\n        this.props.onPressArrowRight(_, monthClone);\n      } else if (this.props.scrollToMonth) {\n        monthClone.addMonths(1);\n        this.props.scrollToMonth(monthClone);\n      }\n    };\n\n    this.style = styleConstructor(props.theme);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    var r1 = this.props.item;\n    var r2 = nextProps.item;\n    return r1.toString('yyyy MM') !== r2.toString('yyyy MM') || !!(r2.propbump && r2.propbump !== r1.propbump);\n  }\n\n  render() {\n    var row = this.props.item;\n\n    if (row.getTime) {\n      return React.createElement(Calendar, {\n        theme: this.props.theme,\n        style: [{\n          height: this.props.calendarHeight,\n          width: this.props.calendarWidth\n        }, this.style.calendar, this.props.style],\n        current: row,\n        hideArrows: this.props.hideArrows,\n        hideExtraDays: this.props.hideExtraDays,\n        disableMonthChange: true,\n        markedDates: this.props.markedDates,\n        markingType: this.props.markingType,\n        hideDayNames: this.props.hideDayNames,\n        onDayPress: this.props.onDayPress,\n        onDayLongPress: this.props.onDayLongPress,\n        displayLoadingIndicator: this.props.displayLoadingIndicator,\n        minDate: this.props.minDate,\n        maxDate: this.props.maxDate,\n        firstDay: this.props.firstDay,\n        monthFormat: this.props.monthFormat,\n        dayComponent: this.props.dayComponent,\n        disabledByDefault: this.props.disabledByDefault,\n        showWeekNumbers: this.props.showWeekNumbers,\n        renderArrow: this.props.renderArrow,\n        onPressArrowLeft: this.props.horizontal ? this.onPressArrowLeft : this.props.onPressArrowLeft,\n        onPressArrowRight: this.props.horizontal ? this.onPressArrowRight : this.props.onPressArrowRight,\n        headerStyle: this.props.horizontal ? this.props.headerStyle : undefined,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        }\n      });\n    } else {\n      var text = row.toString();\n      return React.createElement(View, {\n        style: [{\n          height: this.props.calendarHeight,\n          width: this.props.calendarWidth\n        }, this.style.placeholder],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        }\n      }, React.createElement(Text, {\n        allowFontScaling: false,\n        style: this.style.placeholderText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        }\n      }, text));\n    }\n  }\n\n}\n\nCalendarListItem.displayName = 'IGNORE';\nCalendarListItem.defaultProps = {\n  hideArrows: true,\n  hideExtraDays: true\n};\nexport default CalendarListItem;","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\node_modules\\react-native-calendars\\src\\calendar-list\\item.js"],"names":["React","Component","Calendar","styleConstructor","CalendarListItem","constructor","props","onPressArrowLeft","_","month","monthClone","clone","scrollToMonth","addMonths","onPressArrowRight","style","theme","shouldComponentUpdate","nextProps","r1","item","r2","toString","propbump","render","row","getTime","height","calendarHeight","width","calendarWidth","calendar","hideArrows","hideExtraDays","markedDates","markingType","hideDayNames","onDayPress","onDayLongPress","displayLoadingIndicator","minDate","maxDate","firstDay","monthFormat","dayComponent","disabledByDefault","showWeekNumbers","renderArrow","horizontal","headerStyle","undefined","text","placeholder","placeholderText","displayName","defaultProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Text, View} from 'react-native';\r\nimport Calendar from '../calendar';\r\nimport styleConstructor from './style';\r\n\r\n\r\nclass CalendarListItem extends Component {\r\n  static displayName = 'IGNORE';\r\n  \r\n  static defaultProps = {\r\n    hideArrows: true,\r\n    hideExtraDays: true\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.style = styleConstructor(props.theme);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    const r1 = this.props.item;\r\n    const r2 = nextProps.item;\r\n    return r1.toString('yyyy MM') !== r2.toString('yyyy MM') || !!(r2.propbump && r2.propbump !== r1.propbump);\r\n  }\r\n\r\n  onPressArrowLeft = (_, month) => {\r\n    const monthClone = month.clone();\r\n\r\n    if (this.props.onPressArrowLeft) {\r\n      this.props.onPressArrowLeft(_, monthClone);\r\n    } else if (this.props.scrollToMonth) {\r\n      monthClone.addMonths(-1);\r\n      this.props.scrollToMonth(monthClone);\r\n    }\r\n  }\r\n\r\n  onPressArrowRight = (_, month) => {\r\n    const monthClone = month.clone();\r\n\r\n    if (this.props.onPressArrowRight) {\r\n      this.props.onPressArrowRight(_, monthClone);\r\n    } else if (this.props.scrollToMonth) {\r\n      monthClone.addMonths(1);\r\n      this.props.scrollToMonth(monthClone);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const row = this.props.item;\r\n\r\n    if (row.getTime) {\r\n      return (\r\n        <Calendar\r\n          theme={this.props.theme}\r\n          style={[{height: this.props.calendarHeight, width: this.props.calendarWidth}, this.style.calendar, this.props.style]}\r\n          current={row}\r\n          hideArrows={this.props.hideArrows}\r\n          hideExtraDays={this.props.hideExtraDays}\r\n          disableMonthChange\r\n          markedDates={this.props.markedDates}\r\n          markingType={this.props.markingType}\r\n          hideDayNames={this.props.hideDayNames}\r\n          onDayPress={this.props.onDayPress}\r\n          onDayLongPress={this.props.onDayLongPress}\r\n          displayLoadingIndicator={this.props.displayLoadingIndicator}\r\n          minDate={this.props.minDate}\r\n          maxDate={this.props.maxDate}\r\n          firstDay={this.props.firstDay}\r\n          monthFormat={this.props.monthFormat}\r\n          dayComponent={this.props.dayComponent}\r\n          disabledByDefault={this.props.disabledByDefault}\r\n          showWeekNumbers={this.props.showWeekNumbers}\r\n          renderArrow={this.props.renderArrow}\r\n          onPressArrowLeft={this.props.horizontal ? this.onPressArrowLeft : this.props.onPressArrowLeft}\r\n          onPressArrowRight={this.props.horizontal ? this.onPressArrowRight : this.props.onPressArrowRight}\r\n          headerStyle={this.props.horizontal ? this.props.headerStyle : undefined}\r\n        />);\r\n    } else {\r\n      const text = row.toString();\r\n\r\n      return (\r\n        <View style={[{height: this.props.calendarHeight, width: this.props.calendarWidth}, this.style.placeholder]}>\r\n          <Text allowFontScaling={false} style={this.style.placeholderText}>{text}</Text>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default CalendarListItem;\r\n"]},"metadata":{},"sourceType":"module"}