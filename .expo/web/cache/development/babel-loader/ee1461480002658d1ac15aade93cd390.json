{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar\\\\day\\\\multi-period\\\\index.js\";\nimport React, { Component } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport { shouldUpdate } from \"../../../component-updater\";\nimport styleConstructor from \"./style\";\n\nclass Day extends Component {\n  constructor(props) {\n    super(props);\n    this.style = styleConstructor(props.theme);\n    this.onDayPress = this.onDayPress.bind(this);\n  }\n\n  onDayPress() {\n    this.props.onPress(this.props.date);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return shouldUpdate(this.props, nextProps, ['state', 'children', 'marking', 'onPress', 'onLongPress']);\n  }\n\n  renderPeriods(marking) {\n    var baseDotStyle = [this.style.dot, this.style.visibleDot];\n\n    if (marking.periods && Array.isArray(marking.periods) && marking.periods.length > 0) {\n      var validPeriods = marking.periods.filter(d => d && d.color);\n      return validPeriods.map((period, index) => {\n        var style = [...baseDotStyle, {\n          backgroundColor: period.color\n        }];\n\n        if (period.startingDay) {\n          style.push({\n            borderTopLeftRadius: 2,\n            borderBottomLeftRadius: 2,\n            marginLeft: 4\n          });\n        }\n\n        if (period.endingDay) {\n          style.push({\n            borderTopRightRadius: 2,\n            borderBottomRightRadius: 2,\n            marginRight: 4\n          });\n        }\n\n        return React.createElement(View, {\n          key: index,\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          }\n        });\n      });\n    }\n\n    return;\n  }\n\n  render() {\n    var containerStyle = [this.style.base];\n    var textStyle = [this.style.text];\n    var marking = this.props.marking || {};\n    var periods = this.renderPeriods(marking);\n\n    if (marking.selected) {\n      containerStyle.push(this.style.selected);\n      textStyle.push(this.style.selectedText);\n    } else if (typeof marking.disabled !== 'undefined' ? marking.disabled : this.props.state === 'disabled') {\n      textStyle.push(this.style.disabledText);\n    } else if (this.props.state === 'today') {\n      containerStyle.push(this.style.today);\n      textStyle.push(this.style.todayText);\n    }\n\n    return React.createElement(View, {\n      style: {\n        alignSelf: 'stretch'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      }\n    }, React.createElement(TouchableOpacity, {\n      testID: this.props.testID,\n      style: containerStyle,\n      onPress: this.onDayPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      }\n    }, React.createElement(Text, {\n      allowFontScaling: false,\n      style: textStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      }\n    }, String(this.props.children))), React.createElement(View, {\n      style: {\n        alignSelf: 'stretch'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      }\n    }, periods));\n  }\n\n}\n\nDay.displayName = 'IGNORE';\nDay.propTypes = {\n  state: PropTypes.oneOf(['disabled', 'today', '']),\n  theme: PropTypes.object,\n  marking: PropTypes.any,\n  onPress: PropTypes.func,\n  date: PropTypes.object\n};\nexport default Day;","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\node_modules\\react-native-calendars\\src\\calendar\\day\\multi-period\\index.js"],"names":["React","Component","PropTypes","shouldUpdate","styleConstructor","Day","constructor","props","style","theme","onDayPress","bind","onPress","date","shouldComponentUpdate","nextProps","renderPeriods","marking","baseDotStyle","dot","visibleDot","periods","Array","isArray","length","validPeriods","filter","d","color","map","period","index","backgroundColor","startingDay","push","borderTopLeftRadius","borderBottomLeftRadius","marginLeft","endingDay","borderTopRightRadius","borderBottomRightRadius","marginRight","render","containerStyle","base","textStyle","text","selected","selectedText","disabled","state","disabledText","today","todayText","alignSelf","testID","String","children","displayName","propTypes","oneOf","object","any","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TouchableOpacity, Text, View } from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport {shouldUpdate} from '../../../component-updater';\r\n\r\nimport styleConstructor from './style';\r\n\r\nclass Day extends Component {\r\n  static displayName = 'IGNORE';\r\n  \r\n  static propTypes = {\r\n    // TODO: disabled props should be removed\r\n    state: PropTypes.oneOf(['disabled', 'today', '']),\r\n\r\n    // Specify theme properties to override specific styles for calendar parts. Default = {}\r\n    theme: PropTypes.object,\r\n    marking: PropTypes.any,\r\n    onPress: PropTypes.func,\r\n    date: PropTypes.object,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.style = styleConstructor(props.theme);\r\n    this.onDayPress = this.onDayPress.bind(this);\r\n  }\r\n\r\n  onDayPress() {\r\n    this.props.onPress(this.props.date);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    return shouldUpdate(this.props, nextProps, ['state', 'children', 'marking', 'onPress', 'onLongPress']);\r\n  }\r\n\r\n  renderPeriods(marking) {\r\n    const baseDotStyle = [this.style.dot, this.style.visibleDot];\r\n    if (\r\n      marking.periods &&\r\n      Array.isArray(marking.periods) &&\r\n      marking.periods.length > 0\r\n    ) {\r\n      // Filter out dots so that we we process only those items which have key and color property\r\n      const validPeriods = marking.periods.filter(d => d && d.color);\r\n      return validPeriods.map((period, index) => {\r\n        const style = [\r\n          ...baseDotStyle,\r\n          {\r\n            backgroundColor: period.color,\r\n          },\r\n        ];\r\n        if (period.startingDay) {\r\n          style.push({\r\n            borderTopLeftRadius: 2,\r\n            borderBottomLeftRadius: 2,\r\n            marginLeft: 4,\r\n          });\r\n        }\r\n        if (period.endingDay) {\r\n          style.push({\r\n            borderTopRightRadius: 2,\r\n            borderBottomRightRadius: 2,\r\n            marginRight: 4,\r\n          });\r\n        }\r\n        return <View key={index} style={style} />;\r\n      });\r\n    }\r\n    return;\r\n  }\r\n\r\n  render() {\r\n    const containerStyle = [this.style.base];\r\n    const textStyle = [this.style.text];\r\n\r\n    const marking = this.props.marking || {};\r\n    const periods = this.renderPeriods(marking);\r\n\r\n    if (marking.selected) {\r\n      containerStyle.push(this.style.selected);\r\n      textStyle.push(this.style.selectedText);\r\n    } else if (\r\n      typeof marking.disabled !== 'undefined'\r\n        ? marking.disabled\r\n        : this.props.state === 'disabled'\r\n    ) {\r\n      textStyle.push(this.style.disabledText);\r\n    } else if (this.props.state === 'today') {\r\n      containerStyle.push(this.style.today);\r\n      textStyle.push(this.style.todayText);\r\n    }\r\n    return (\r\n      <View\r\n        style={{\r\n          alignSelf: 'stretch'\r\n        }}>\r\n        <TouchableOpacity testID={this.props.testID} style={containerStyle} onPress={this.onDayPress}>\r\n          <Text allowFontScaling={false} style={textStyle}>\r\n            {String(this.props.children)}\r\n          </Text>\r\n        </TouchableOpacity>\r\n        <View\r\n          style={{\r\n            alignSelf: 'stretch',\r\n          }}>\r\n          {periods}\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Day;\r\n"]},"metadata":{},"sourceType":"module"}