{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar\\\\index.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport dateutils from \"../dateutils\";\nimport { xdateToData, parseDate } from \"../interface\";\nimport styleConstructor from \"./style\";\nimport Day from \"./day/basic\";\nimport UnitDay from \"./day/period\";\nimport MultiDotDay from \"./day/multi-dot\";\nimport MultiPeriodDay from \"./day/multi-period\";\nimport SingleDay from \"./day/custom\";\nimport CalendarHeader from \"./header\";\nimport shouldComponentUpdate from \"./updater\";\nimport { SELECT_DATE_SLOT } from \"../testIDs\";\nvar viewPropTypes = ViewPropTypes || View.propTypes;\nvar EmptyArray = [];\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.style = styleConstructor(this.props.theme);\n    this.state = {\n      currentMonth: props.current ? parseDate(props.current) : XDate()\n    };\n    this.updateMonth = this.updateMonth.bind(this);\n    this.addMonth = this.addMonth.bind(this);\n    this.pressDay = this.pressDay.bind(this);\n    this.longPressDay = this.longPressDay.bind(this);\n    this.shouldComponentUpdate = shouldComponentUpdate;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    var current = parseDate(nextProps.current);\n\n    if (current && current.toString('yyyy MM') !== this.state.currentMonth.toString('yyyy MM')) {\n      this.setState({\n        currentMonth: current.clone()\n      });\n    }\n  }\n\n  updateMonth(day, doNotTriggerListeners) {\n    if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\n      return;\n    }\n\n    this.setState({\n      currentMonth: day.clone()\n    }, () => {\n      if (!doNotTriggerListeners) {\n        var currMont = this.state.currentMonth.clone();\n\n        if (this.props.onMonthChange) {\n          this.props.onMonthChange(xdateToData(currMont));\n        }\n\n        if (this.props.onVisibleMonthsChange) {\n          this.props.onVisibleMonthsChange([xdateToData(currMont)]);\n        }\n      }\n    });\n  }\n\n  _handleDayInteraction(date, interaction) {\n    var day = parseDate(date);\n    var minDate = parseDate(this.props.minDate);\n    var maxDate = parseDate(this.props.maxDate);\n\n    if (!(minDate && !dateutils.isGTE(day, minDate)) && !(maxDate && !dateutils.isLTE(day, maxDate))) {\n      var shouldUpdateMonth = this.props.disableMonthChange === undefined || !this.props.disableMonthChange;\n\n      if (shouldUpdateMonth) {\n        this.updateMonth(day);\n      }\n\n      if (interaction) {\n        interaction(xdateToData(day));\n      }\n    }\n  }\n\n  pressDay(date) {\n    this._handleDayInteraction(date, this.props.onDayPress);\n  }\n\n  longPressDay(date) {\n    this._handleDayInteraction(date, this.props.onDayLongPress);\n  }\n\n  addMonth(count) {\n    this.updateMonth(this.state.currentMonth.clone().addMonths(count, true));\n  }\n\n  renderDay(day, id) {\n    var minDate = parseDate(this.props.minDate);\n    var maxDate = parseDate(this.props.maxDate);\n    var state = '';\n\n    if (this.props.disabledByDefault) {\n      state = 'disabled';\n    } else if (minDate && !dateutils.isGTE(day, minDate) || maxDate && !dateutils.isLTE(day, maxDate)) {\n      state = 'disabled';\n    } else if (!dateutils.sameMonth(day, this.state.currentMonth)) {\n      state = 'disabled';\n    } else if (dateutils.sameDate(day, XDate())) {\n      state = 'today';\n    }\n\n    if (!dateutils.sameMonth(day, this.state.currentMonth) && this.props.hideExtraDays) {\n      return React.createElement(View, {\n        key: id,\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        }\n      });\n    }\n\n    var DayComp = this.getDayComponent();\n    var date = day.getDate();\n    var dateAsObject = xdateToData(day);\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center'\n      },\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      }\n    }, React.createElement(DayComp, {\n      testID: \"\".concat(SELECT_DATE_SLOT, \"-\").concat(dateAsObject.dateString),\n      state: state,\n      theme: this.props.theme,\n      onPress: this.pressDay,\n      onLongPress: this.longPressDay,\n      date: dateAsObject,\n      marking: this.getDateMarking(day),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      }\n    }, date));\n  }\n\n  getDayComponent() {\n    if (this.props.dayComponent) {\n      return this.props.dayComponent;\n    }\n\n    switch (this.props.markingType) {\n      case 'period':\n        return UnitDay;\n\n      case 'multi-dot':\n        return MultiDotDay;\n\n      case 'multi-period':\n        return MultiPeriodDay;\n\n      case 'custom':\n        return SingleDay;\n\n      default:\n        return Day;\n    }\n  }\n\n  getDateMarking(day) {\n    if (!this.props.markedDates) {\n      return false;\n    }\n\n    var dates = this.props.markedDates[day.toString('yyyy-MM-dd')] || EmptyArray;\n\n    if (dates.length || dates) {\n      return dates;\n    } else {\n      return false;\n    }\n  }\n\n  renderWeekNumber(weekNumber) {\n    return React.createElement(Day, {\n      key: \"week-\".concat(weekNumber),\n      theme: this.props.theme,\n      marking: {\n        disableTouchEvent: true\n      },\n      state: \"disabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      }\n    }, weekNumber);\n  }\n\n  renderWeek(days, id) {\n    var week = [];\n    days.forEach((day, id2) => {\n      week.push(this.renderDay(day, id2));\n    }, this);\n\n    if (this.props.showWeekNumbers) {\n      week.unshift(this.renderWeekNumber(days[days.length - 1].getWeek()));\n    }\n\n    return React.createElement(View, {\n      style: this.style.week,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      }\n    }, week);\n  }\n\n  render() {\n    var days = dateutils.page(this.state.currentMonth, this.props.firstDay);\n    var weeks = [];\n\n    while (days.length) {\n      weeks.push(this.renderWeek(days.splice(0, 7), weeks.length));\n    }\n\n    var indicator;\n    var current = parseDate(this.props.current);\n\n    if (current) {\n      var lastMonthOfDay = current.clone().addMonths(1, true).setDate(1).addDays(-1).toString('yyyy-MM-dd');\n\n      if (this.props.displayLoadingIndicator && !(this.props.markedDates && this.props.markedDates[lastMonthOfDay])) {\n        indicator = true;\n      }\n    }\n\n    return React.createElement(View, {\n      style: [this.style.container, this.props.style],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      }\n    }, React.createElement(CalendarHeader, {\n      style: this.props.headerStyle,\n      theme: this.props.theme,\n      hideArrows: this.props.hideArrows,\n      month: this.state.currentMonth,\n      addMonth: this.addMonth,\n      showIndicator: indicator,\n      firstDay: this.props.firstDay,\n      renderArrow: this.props.renderArrow,\n      monthFormat: this.props.monthFormat,\n      hideDayNames: this.props.hideDayNames,\n      weekNumbers: this.props.showWeekNumbers,\n      onPressArrowLeft: this.props.onPressArrowLeft,\n      onPressArrowRight: this.props.onPressArrowRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      }\n    }), React.createElement(View, {\n      style: this.style.monthView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      }\n    }, weeks));\n  }\n\n}\n\nCalendar.displayName = 'Calendar';\nCalendar.propTypes = {\n  theme: PropTypes.object,\n  markedDates: PropTypes.object,\n  style: viewPropTypes.style,\n  current: PropTypes.any,\n  minDate: PropTypes.any,\n  maxDate: PropTypes.any,\n  firstDay: PropTypes.number,\n  markingType: PropTypes.string,\n  hideArrows: PropTypes.bool,\n  displayLoadingIndicator: PropTypes.bool,\n  hideExtraDays: PropTypes.bool,\n  onDayPress: PropTypes.func,\n  onDayLongPress: PropTypes.func,\n  onMonthChange: PropTypes.func,\n  onVisibleMonthsChange: PropTypes.func,\n  renderArrow: PropTypes.func,\n  dayComponent: PropTypes.any,\n  monthFormat: PropTypes.string,\n  disableMonthChange: PropTypes.bool,\n  hideDayNames: PropTypes.bool,\n  disabledByDefault: PropTypes.bool,\n  showWeekNumbers: PropTypes.bool,\n  onPressArrowLeft: PropTypes.func,\n  onPressArrowRight: PropTypes.func,\n  headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array])\n};\nexport default Calendar;","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\node_modules\\react-native-calendars\\src\\calendar\\index.js"],"names":["React","Component","PropTypes","XDate","dateutils","xdateToData","parseDate","styleConstructor","Day","UnitDay","MultiDotDay","MultiPeriodDay","SingleDay","CalendarHeader","shouldComponentUpdate","SELECT_DATE_SLOT","viewPropTypes","ViewPropTypes","View","propTypes","EmptyArray","Calendar","constructor","props","style","theme","state","currentMonth","current","updateMonth","bind","addMonth","pressDay","longPressDay","componentWillReceiveProps","nextProps","toString","setState","clone","day","doNotTriggerListeners","currMont","onMonthChange","onVisibleMonthsChange","_handleDayInteraction","date","interaction","minDate","maxDate","isGTE","isLTE","shouldUpdateMonth","disableMonthChange","undefined","onDayPress","onDayLongPress","count","addMonths","renderDay","id","disabledByDefault","sameMonth","sameDate","hideExtraDays","flex","DayComp","getDayComponent","getDate","dateAsObject","alignItems","dateString","getDateMarking","dayComponent","markingType","markedDates","dates","length","renderWeekNumber","weekNumber","disableTouchEvent","renderWeek","days","week","forEach","id2","push","showWeekNumbers","unshift","getWeek","render","page","firstDay","weeks","splice","indicator","lastMonthOfDay","setDate","addDays","displayLoadingIndicator","container","headerStyle","hideArrows","renderArrow","monthFormat","hideDayNames","onPressArrowLeft","onPressArrowRight","monthView","displayName","object","any","number","string","bool","func","oneOfType","array"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {View, ViewPropTypes} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport XDate from 'xdate';\r\n\r\nimport dateutils from '../dateutils';\r\nimport {xdateToData, parseDate} from '../interface';\r\nimport styleConstructor from './style';\r\nimport Day from './day/basic';\r\nimport UnitDay from './day/period';\r\nimport MultiDotDay from './day/multi-dot';\r\nimport MultiPeriodDay from './day/multi-period';\r\nimport SingleDay from './day/custom';\r\nimport CalendarHeader from './header';\r\nimport shouldComponentUpdate from './updater';\r\nimport {SELECT_DATE_SLOT} from '../testIDs';\r\n\r\n\r\n//Fallback when RN version is < 0.44\r\nconst viewPropTypes = ViewPropTypes || View.propTypes;\r\nconst EmptyArray = [];\r\n\r\n/**\r\n * @description: Calendar component\r\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendars.js\r\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/calendar.gif\r\n */\r\nclass Calendar extends Component {\r\n  static displayName = 'Calendar';\r\n\r\n  static propTypes = {\r\n    /** Specify theme properties to override specific styles for calendar parts. Default = {} */\r\n    theme: PropTypes.object,\r\n    /** Collection of dates that have to be marked. Default = {} */\r\n    markedDates: PropTypes.object,\r\n    /** Specify style for calendar container element. Default = {} */\r\n    style: viewPropTypes.style,\r\n    /** Initially visible month. Default = Date() */\r\n    current: PropTypes.any,\r\n    /** Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined */\r\n    minDate: PropTypes.any,\r\n    /** Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined */\r\n    maxDate: PropTypes.any,\r\n    /** If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday. */\r\n    firstDay: PropTypes.number,\r\n    /** Date marking style [simple/period/multi-dot/multi-period]. Default = 'simple' */\r\n    markingType: PropTypes.string,\r\n    /** Hide month navigation arrows. Default = false */\r\n    hideArrows: PropTypes.bool,\r\n    /** Display loading indicador. Default = false */\r\n    displayLoadingIndicator: PropTypes.bool,\r\n    /** Do not show days of other months in month page. Default = false */\r\n    hideExtraDays: PropTypes.bool,\r\n    /** Handler which gets executed on day press. Default = undefined */\r\n    onDayPress: PropTypes.func,\r\n    /** Handler which gets executed on day long press. Default = undefined */\r\n    onDayLongPress: PropTypes.func,\r\n    /** Handler which gets executed when visible month changes in calendar. Default = undefined */\r\n    onMonthChange: PropTypes.func,\r\n    onVisibleMonthsChange: PropTypes.func,\r\n    /** Replace default arrows with custom ones (direction can be 'left' or 'right') */\r\n    renderArrow: PropTypes.func,\r\n    /** Provide custom day rendering component */\r\n    dayComponent: PropTypes.any,\r\n    /** Month format in calendar title. Formatting values: http://arshaw.com/xdate/#Formatting */\r\n    monthFormat: PropTypes.string,\r\n    /** Disables changing month when click on days of other months (when hideExtraDays is false). Default = false */\r\n    disableMonthChange: PropTypes.bool,\r\n    /**  Hide day names. Default = false */\r\n    hideDayNames: PropTypes.bool,\r\n    /** Disable days by default. Default = false */\r\n    disabledByDefault: PropTypes.bool,\r\n    /** Show week numbers. Default = false */\r\n    showWeekNumbers: PropTypes.bool,\r\n    /** Handler which gets executed when press arrow icon left. It receive a callback can go back month */\r\n    onPressArrowLeft: PropTypes.func,\r\n    /** Handler which gets executed when press arrow icon left. It receive a callback can go next month */\r\n    onPressArrowRight: PropTypes.func,\r\n    /** Style passed to the header */\r\n    headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array])\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.style = styleConstructor(this.props.theme);\r\n    \r\n    this.state = {\r\n      currentMonth: props.current ? parseDate(props.current) : XDate()\r\n    };\r\n\r\n    this.updateMonth = this.updateMonth.bind(this);\r\n    this.addMonth = this.addMonth.bind(this);\r\n    this.pressDay = this.pressDay.bind(this);\r\n    this.longPressDay = this.longPressDay.bind(this);\r\n    this.shouldComponentUpdate = shouldComponentUpdate;\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const current = parseDate(nextProps.current);\r\n    if (current && current.toString('yyyy MM') !== this.state.currentMonth.toString('yyyy MM')) {\r\n      this.setState({\r\n        currentMonth: current.clone()\r\n      });\r\n    }\r\n  }\r\n\r\n  updateMonth(day, doNotTriggerListeners) {\r\n    if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      currentMonth: day.clone()\r\n    }, () => {\r\n      if (!doNotTriggerListeners) {\r\n        const currMont = this.state.currentMonth.clone();\r\n        if (this.props.onMonthChange) {\r\n          this.props.onMonthChange(xdateToData(currMont));\r\n        }\r\n        if (this.props.onVisibleMonthsChange) {\r\n          this.props.onVisibleMonthsChange([xdateToData(currMont)]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  _handleDayInteraction(date, interaction) {\r\n    const day = parseDate(date);\r\n    const minDate = parseDate(this.props.minDate);\r\n    const maxDate = parseDate(this.props.maxDate);\r\n    if (!(minDate && !dateutils.isGTE(day, minDate)) && !(maxDate && !dateutils.isLTE(day, maxDate))) {\r\n      const shouldUpdateMonth = this.props.disableMonthChange === undefined || !this.props.disableMonthChange;\r\n      if (shouldUpdateMonth) {\r\n        this.updateMonth(day);\r\n      }\r\n      if (interaction) {\r\n        interaction(xdateToData(day));\r\n      }\r\n    }\r\n  }\r\n\r\n  pressDay(date) {\r\n    this._handleDayInteraction(date, this.props.onDayPress);\r\n  }\r\n\r\n  longPressDay(date) {\r\n    this._handleDayInteraction(date, this.props.onDayLongPress);\r\n  }\r\n\r\n  addMonth(count) {\r\n    this.updateMonth(this.state.currentMonth.clone().addMonths(count, true));\r\n  }\r\n\r\n  renderDay(day, id) {\r\n    const minDate = parseDate(this.props.minDate);\r\n    const maxDate = parseDate(this.props.maxDate);\r\n    let state = '';\r\n    if (this.props.disabledByDefault) {\r\n      state = 'disabled';\r\n    } else if ((minDate && !dateutils.isGTE(day, minDate)) || (maxDate && !dateutils.isLTE(day, maxDate))) {\r\n      state = 'disabled';\r\n    } else if (!dateutils.sameMonth(day, this.state.currentMonth)) {\r\n      state = 'disabled';\r\n    } else if (dateutils.sameDate(day, XDate())) {\r\n      state = 'today';\r\n    }\r\n\r\n    if (!dateutils.sameMonth(day, this.state.currentMonth) && this.props.hideExtraDays) {\r\n      return (<View key={id} style={{flex: 1}}/>);\r\n    }\r\n\r\n    const DayComp = this.getDayComponent();\r\n    const date = day.getDate();\r\n    const dateAsObject = xdateToData(day);\r\n\r\n    return (\r\n      <View style={{flex: 1, alignItems: 'center'}} key={id}>\r\n        <DayComp\r\n          testID={`${SELECT_DATE_SLOT}-${dateAsObject.dateString}`}\r\n          state={state}\r\n          theme={this.props.theme}\r\n          onPress={this.pressDay}\r\n          onLongPress={this.longPressDay}\r\n          date={dateAsObject}\r\n          marking={this.getDateMarking(day)}\r\n        >\r\n          {date}\r\n        </DayComp>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  getDayComponent() {\r\n    if (this.props.dayComponent) {\r\n      return this.props.dayComponent;\r\n    }\r\n\r\n    switch (this.props.markingType) {\r\n    case 'period':\r\n      return UnitDay;\r\n    case 'multi-dot':\r\n      return MultiDotDay;\r\n    case 'multi-period':\r\n      return MultiPeriodDay;\r\n    case 'custom':\r\n      return SingleDay;\r\n    default:\r\n      return Day;\r\n    }\r\n  }\r\n\r\n  getDateMarking(day) {\r\n    if (!this.props.markedDates) {\r\n      return false;\r\n    }\r\n\r\n    const dates = this.props.markedDates[day.toString('yyyy-MM-dd')] || EmptyArray;\r\n    if (dates.length || dates) {\r\n      return dates;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  renderWeekNumber (weekNumber) {\r\n    return <Day key={`week-${weekNumber}`} theme={this.props.theme} marking={{disableTouchEvent: true}} state='disabled'>{weekNumber}</Day>;\r\n  }\r\n\r\n  renderWeek(days, id) {\r\n    const week = [];\r\n    days.forEach((day, id2) => {\r\n      week.push(this.renderDay(day, id2));\r\n    }, this);\r\n\r\n    if (this.props.showWeekNumbers) {\r\n      week.unshift(this.renderWeekNumber(days[days.length - 1].getWeek()));\r\n    }\r\n\r\n    return (<View style={this.style.week} key={id}>{week}</View>);\r\n  }\r\n\r\n  render() {\r\n    const days = dateutils.page(this.state.currentMonth, this.props.firstDay);\r\n    const weeks = [];\r\n    while (days.length) {\r\n      weeks.push(this.renderWeek(days.splice(0, 7), weeks.length));\r\n    }\r\n    \r\n    let indicator;\r\n    const current = parseDate(this.props.current);\r\n    if (current) {\r\n      const lastMonthOfDay = current.clone().addMonths(1, true).setDate(1).addDays(-1).toString('yyyy-MM-dd');\r\n      if (this.props.displayLoadingIndicator &&\r\n          !(this.props.markedDates && this.props.markedDates[lastMonthOfDay])) {\r\n        indicator = true;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <View style={[this.style.container, this.props.style]}>\r\n        <CalendarHeader\r\n          style={this.props.headerStyle}\r\n          theme={this.props.theme}\r\n          hideArrows={this.props.hideArrows}\r\n          month={this.state.currentMonth}\r\n          addMonth={this.addMonth}\r\n          showIndicator={indicator}\r\n          firstDay={this.props.firstDay}\r\n          renderArrow={this.props.renderArrow}\r\n          monthFormat={this.props.monthFormat}\r\n          hideDayNames={this.props.hideDayNames}\r\n          weekNumbers={this.props.showWeekNumbers}\r\n          onPressArrowLeft={this.props.onPressArrowLeft}\r\n          onPressArrowRight={this.props.onPressArrowRight}\r\n        />\r\n        <View style={this.style.monthView}>{weeks}</View>\r\n      </View>);\r\n  }\r\n}\r\n\r\nexport default Calendar;\r\n"]},"metadata":{},"sourceType":"module"}