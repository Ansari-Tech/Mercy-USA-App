{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar\\\\day\\\\multi-dot\\\\index.js\";\nimport React, { Component } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport { shouldUpdate } from \"../../../component-updater\";\nimport styleConstructor from \"./style\";\n\nclass Day extends Component {\n  constructor(props) {\n    super(props);\n    this.style = styleConstructor(props.theme);\n    this.onDayPress = this.onDayPress.bind(this);\n    this.onDayLongPress = this.onDayLongPress.bind(this);\n  }\n\n  onDayPress() {\n    this.props.onPress(this.props.date);\n  }\n\n  onDayLongPress() {\n    this.props.onLongPress(this.props.date);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return shouldUpdate(this.props, nextProps, ['state', 'children', 'marking', 'onPress', 'onLongPress']);\n  }\n\n  renderDots(marking) {\n    var baseDotStyle = [this.style.dot, this.style.visibleDot];\n\n    if (marking.dots && Array.isArray(marking.dots) && marking.dots.length > 0) {\n      var validDots = marking.dots.filter(d => d && d.color);\n      return validDots.map((dot, index) => {\n        return React.createElement(View, {\n          key: dot.key ? dot.key : index,\n          style: [baseDotStyle, {\n            backgroundColor: marking.selected && dot.selectedDotColor ? dot.selectedDotColor : dot.color\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          }\n        });\n      });\n    }\n\n    return;\n  }\n\n  render() {\n    var containerStyle = [this.style.base];\n    var textStyle = [this.style.text];\n    var marking = this.props.marking || {};\n    var dot = this.renderDots(marking);\n\n    if (marking.selected) {\n      containerStyle.push(this.style.selected);\n      textStyle.push(this.style.selectedText);\n\n      if (marking.selectedColor) {\n        containerStyle.push({\n          backgroundColor: marking.selectedColor\n        });\n      }\n    } else if (typeof marking.disabled !== 'undefined' ? marking.disabled : this.props.state === 'disabled') {\n      textStyle.push(this.style.disabledText);\n    } else if (this.props.state === 'today') {\n      containerStyle.push(this.style.today);\n      textStyle.push(this.style.todayText);\n    }\n\n    return React.createElement(TouchableOpacity, {\n      testID: this.props.testID,\n      style: containerStyle,\n      onPress: this.onDayPress,\n      onLongPress: this.onDayLongPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      }\n    }, React.createElement(Text, {\n      allowFontScaling: false,\n      style: textStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      }\n    }, String(this.props.children)), React.createElement(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      }\n    }, dot));\n  }\n\n}\n\nDay.displayName = 'IGNORE';\nDay.propTypes = {\n  state: PropTypes.oneOf(['disabled', 'today', '']),\n  theme: PropTypes.object,\n  marking: PropTypes.any,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  date: PropTypes.object\n};\nexport default Day;","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\node_modules\\react-native-calendars\\src\\calendar\\day\\multi-dot\\index.js"],"names":["React","Component","PropTypes","shouldUpdate","styleConstructor","Day","constructor","props","style","theme","onDayPress","bind","onDayLongPress","onPress","date","onLongPress","shouldComponentUpdate","nextProps","renderDots","marking","baseDotStyle","dot","visibleDot","dots","Array","isArray","length","validDots","filter","d","color","map","index","key","backgroundColor","selected","selectedDotColor","render","containerStyle","base","textStyle","text","push","selectedText","selectedColor","disabled","state","disabledText","today","todayText","testID","String","children","flexDirection","displayName","propTypes","oneOf","object","any","func"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n  TouchableOpacity,\r\n  Text,\r\n  View\r\n} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {shouldUpdate} from '../../../component-updater';\r\n\r\nimport styleConstructor from './style';\r\n\r\nclass Day extends Component {\r\n  static displayName = 'IGNORE';\r\n  \r\n  static propTypes = {\r\n    // TODO: disabled props should be removed\r\n    state: PropTypes.oneOf(['disabled', 'today', '']),\r\n\r\n    // Specify theme properties to override specific styles for calendar parts. Default = {}\r\n    theme: PropTypes.object,\r\n    marking: PropTypes.any,\r\n    onPress: PropTypes.func,\r\n    onLongPress: PropTypes.func,\r\n    date: PropTypes.object\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.style = styleConstructor(props.theme);\r\n    this.onDayPress = this.onDayPress.bind(this);\r\n    this.onDayLongPress = this.onDayLongPress.bind(this);\r\n  }\r\n\r\n  onDayPress() {\r\n    this.props.onPress(this.props.date);\r\n  }\r\n\r\n  onDayLongPress() {\r\n    this.props.onLongPress(this.props.date);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    return shouldUpdate(this.props, nextProps, ['state', 'children', 'marking', 'onPress', 'onLongPress']);\r\n  }\r\n\r\n  renderDots(marking) {\r\n    const baseDotStyle = [this.style.dot, this.style.visibleDot];\r\n    if (marking.dots && Array.isArray(marking.dots) && marking.dots.length > 0) {\r\n      // Filter out dots so that we we process only those items which have key and color property\r\n      const validDots = marking.dots.filter(d => (d && d.color));\r\n      return validDots.map((dot, index) => {\r\n        return (\r\n          <View key={dot.key ? dot.key : index} style={[baseDotStyle,\r\n            { backgroundColor: marking.selected && dot.selectedDotColor ? dot.selectedDotColor : dot.color}]}/>\r\n        );\r\n      });\r\n    }\r\n    return;\r\n  }\r\n\r\n  render() {\r\n    const containerStyle = [this.style.base];\r\n    const textStyle = [this.style.text];\r\n\r\n    const marking = this.props.marking || {};\r\n    const dot = this.renderDots(marking);\r\n\r\n    if (marking.selected) {\r\n      containerStyle.push(this.style.selected);\r\n      textStyle.push(this.style.selectedText);\r\n      if (marking.selectedColor) {\r\n        containerStyle.push({backgroundColor: marking.selectedColor});\r\n      }\r\n    } else if (typeof marking.disabled !== 'undefined' ? marking.disabled : this.props.state === 'disabled') {\r\n      textStyle.push(this.style.disabledText);\r\n    } else if (this.props.state === 'today') {\r\n      containerStyle.push(this.style.today);\r\n      textStyle.push(this.style.todayText);\r\n    }\r\n    return (\r\n      <TouchableOpacity\r\n        testID={this.props.testID}\r\n        style={containerStyle}\r\n        onPress={this.onDayPress}\r\n        onLongPress={this.onDayLongPress}>\r\n        <Text allowFontScaling={false} style={textStyle}>{String(this.props.children)}</Text>\r\n        <View style={{flexDirection: 'row'}}>{dot}</View>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Day;\r\n"]},"metadata":{},"sourceType":"module"}