{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\screens\\\\ZakatResults.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport NavigationService from \"../NavigationService\";\nimport { Input, Overlay } from \"react-native-elements\";\n\nvar Dimensions = require(\"Dimensions\");\n\nvar {\n  width\n} = Dimensions.get(\"window\");\nexport default class ZakatResults extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: true,\n      isLoading: true,\n      isNoInternet: false,\n      fadeAnim: new Animated.Value(0)\n    };\n    this.params = this.props.navigation.state.params;\n  }\n\n  componentDidMount() {\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 1,\n      duration: 1000000\n    }).start();\n    var URL = \"https://www.quandl.com/api/v3/datasets/WGC/GOLD_DAILY_USD.json?limit=1&api_key=gPxV2UWAz3weZ2UTAzUr\";\n    return fetch(URL).then(response => response.json()).then(responseJson => {\n      this.setState({\n        isLoading: false,\n        goldValue: responseJson.dataset.data[0][1]\n      }, function () {});\n    }).catch(error => {\n      this.state.isNoInternet = true;\n    });\n  }\n\n  render() {\n    var {\n      fadeAnim\n    } = this.state.fadeAnim;\n\n    if (this.state.isLoading) {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          padding: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        }\n      }, React.createElement(ActivityIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        }\n      }));\n    }\n\n    if (this.state.isNoInternet) {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        }\n      }, React.createElement(Overlay, {\n        isVisible: this.state.isVisible,\n        height: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        }\n      }, \"Unable to fetch the current price of gold. This might be because your internet is turned off or unavailable.\"), React.createElement(Input, {\n        placeholder: \"Current Value of Gold in USD\",\n        keyboardType: \"numeric\",\n        leftIcon: {\n          type: \"material-community\",\n          name: \"cash-multiple\"\n        },\n        onChangeText: goldValue => this.setState({\n          goldValue\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        }\n      }), React.createElement(Button, {\n        title: \"Continue\",\n        onPress: () => {\n          this.setState({\n            isVisible: false,\n            isLoading: false,\n            isNoInternet: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        }\n      }))));\n    }\n\n    var nisab = this.state.goldValue * 3;\n    var total = parseFloat(this.params.asset.cash.replace(\"$\", \"\").replace(\",\", \"\")) + parseFloat(this.params.asset.gold.replace(\"$\", \"\").replace(\",\", \"\")) + parseFloat(this.params.asset.jewlery.replace(\"$\", \"\").replace(\",\", \"\")) + parseFloat(this.params.loan.ndLoans.replace(\"$\", \"\").replace(\",\", \"\")) + parseFloat(this.params.loan.loans.replace(\"$\", \"\").replace(\",\", \"\")) + parseFloat(this.params.loan.stock.replace(\"$\", \"\").replace(\",\", \"\")) + parseFloat(this.params.business.inventory.replace(\"$\", \"\").replace(\",\", \"\")) + parseFloat(this.params.business.realEstate.replace(\"$\", \"\").replace(\",\", \"\")) + parseFloat(this.params.business.profit.replace(\"$\", \"\").replace(\",\", \"\"));\n    var owed = Math.ceil((total < nisab ? 0 : total * 0.025) * 100) / 100;\n\n    if (owed > 0) {\n      return React.createElement(View, {\n        style: styles.mainResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        }\n      }, React.createElement(Text, {\n        style: styles.subTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        }\n      }, \"Your calculated zakat is...\"), React.createElement(Animated.View, {\n        style: {\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          opacity: fadeAnim\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        }\n      }), React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        }\n      }, \"$\", owed, \"!\"), React.createElement(Button, {\n        title: \"Donate now\",\n        onPress: () => {\n          NavigationService.navigate(\"Donate\", {\n            isVisible: true,\n            amount: owed.toString(),\n            designation: \"Zakat Fund\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        }\n      }));\n    } else {\n      return React.createElement(View, {\n        style: styles.mainResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        }\n      }, React.createElement(Text, {\n        style: styles.subTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        }\n      }, \"Your calculated zakat is...\"), React.createElement(Animated.View, {\n        style: {\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          opacity: fadeAnim\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        }\n      }), React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        }\n      }, \"$\", owed, \"!\"));\n    }\n  }\n\n}\nZakatResults.navigationOptions = {\n  title: \"Your Zakat\"\n};\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 35,\n    color: \"green\"\n  },\n  subTitle: {\n    fontSize: 20,\n    paddingTop: 10\n  },\n  mainResult: {\n    paddingTop: 15,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\screens\\ZakatResults.js"],"names":["React","NavigationService","Input","Overlay","Dimensions","require","width","get","ZakatResults","Component","constructor","props","state","isVisible","isLoading","isNoInternet","fadeAnim","Animated","Value","params","navigation","componentDidMount","timing","toValue","duration","start","URL","fetch","then","response","json","responseJson","setState","goldValue","dataset","data","catch","error","render","flex","padding","type","name","nisab","total","parseFloat","asset","cash","replace","gold","jewlery","loan","ndLoans","loans","stock","business","inventory","realEstate","profit","owed","Math","ceil","styles","mainResult","subTitle","justifyContent","alignItems","opacity","title","navigate","amount","toString","designation","navigationOptions","StyleSheet","create","fontSize","color","paddingTop"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  View,\r\n  Button,\r\n  Text,\r\n  StyleSheet,\r\n  Animated,\r\n  ActivityIndicator\r\n} from \"react-native\";\r\nimport NavigationService from \"../NavigationService\";\r\nimport { Input, Overlay } from \"react-native-elements\";\r\nconst Dimensions = require(\"Dimensions\");\r\nconst { width } = Dimensions.get(\"window\");\r\n\r\n//api call: https://www.quandl.com/api/v3/datasets/WGC/GOLD_DAILY_USD.json?limit=1&api_key=gPxV2UWAz3weZ2UTAzUr\r\nexport default class ZakatResults extends React.Component {\r\n  static navigationOptions = {\r\n    title: \"Your Zakat\"\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isVisible: true,\r\n      isLoading: true,\r\n      isNoInternet: false,\r\n      fadeAnim: new Animated.Value(0)\r\n    };\r\n    this.params = this.props.navigation.state.params;\r\n  }\r\n\r\n  componentDidMount() {\r\n    Animated.timing(this.state.fadeAnim, {\r\n      toValue: 1,\r\n      duration: 1000000\r\n    }).start();\r\n    const URL =\r\n      \"https://www.quandl.com/api/v3/datasets/WGC/GOLD_DAILY_USD.json?limit=1&api_key=gPxV2UWAz3weZ2UTAzUr\";\r\n    return fetch(URL)\r\n      .then(response => response.json())\r\n      .then(responseJson => {\r\n        this.setState(\r\n          {\r\n            isLoading: false,\r\n            goldValue: responseJson.dataset.data[0][1]\r\n          },\r\n          function() {}\r\n        );\r\n      })\r\n      .catch(error => {\r\n        this.state.isNoInternet = true;\r\n      });\r\n  }\r\n  render() {\r\n    let { fadeAnim } = this.state.fadeAnim;\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            padding: 20\r\n          }}\r\n        >\r\n          <ActivityIndicator />\r\n        </View>\r\n      );\r\n    }\r\n    if (this.state.isNoInternet) {\r\n      return (\r\n        <View>\r\n          <Overlay isVisible={this.state.isVisible} height=\"auto\">\r\n            <View>\r\n              <Text>\r\n                Unable to fetch the current price of gold. This might be because\r\n                your internet is turned off or unavailable.\r\n              </Text>\r\n              <Input\r\n                placeholder=\"Current Value of Gold in USD\"\r\n                keyboardType=\"numeric\"\r\n                leftIcon={{\r\n                  type: \"material-community\",\r\n                  name: \"cash-multiple\"\r\n                }}\r\n                onChangeText={goldValue =>\r\n                  this.setState({\r\n                    goldValue\r\n                  })\r\n                }\r\n              />\r\n              <Button\r\n                title=\"Continue\"\r\n                onPress={() => {\r\n                  this.setState({\r\n                    isVisible: false,\r\n                    isLoading: false,\r\n                    isNoInternet: false\r\n                  });\r\n                }}\r\n              />\r\n            </View>\r\n          </Overlay>\r\n        </View>\r\n      );\r\n    }\r\n    let nisab = this.state.goldValue * 3;\r\n    let total =\r\n      parseFloat(this.params.asset.cash.replace(\"$\", \"\").replace(\",\", \"\")) +\r\n      parseFloat(this.params.asset.gold.replace(\"$\", \"\").replace(\",\", \"\")) +\r\n      parseFloat(this.params.asset.jewlery.replace(\"$\", \"\").replace(\",\", \"\")) +\r\n      parseFloat(this.params.loan.ndLoans.replace(\"$\", \"\").replace(\",\", \"\")) +\r\n      parseFloat(this.params.loan.loans.replace(\"$\", \"\").replace(\",\", \"\")) +\r\n      parseFloat(this.params.loan.stock.replace(\"$\", \"\").replace(\",\", \"\")) +\r\n      parseFloat(\r\n        this.params.business.inventory.replace(\"$\", \"\").replace(\",\", \"\")\r\n      ) +\r\n      parseFloat(\r\n        this.params.business.realEstate.replace(\"$\", \"\").replace(\",\", \"\")\r\n      ) +\r\n      parseFloat(this.params.business.profit.replace(\"$\", \"\").replace(\",\", \"\"));\r\n\r\n    let owed = Math.ceil((total < nisab ? 0 : total * 0.025) * 100) / 100;\r\n\r\n    if (owed > 0) {\r\n      return (\r\n        <View style={styles.mainResult}>\r\n          <Text style={styles.subTitle}>Your calculated zakat is...</Text>\r\n          <Animated.View\r\n            style={{\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              opacity: fadeAnim\r\n            }}\r\n          />\r\n          <Text style={styles.title}>${owed}!</Text>\r\n          <Button\r\n            title=\"Donate now\"\r\n            onPress={() => {\r\n              NavigationService.navigate(\"Donate\", {\r\n                isVisible: true,\r\n                amount: owed.toString(),\r\n                designation: \"Zakat Fund\"\r\n              });\r\n            }}\r\n          />\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <View style={styles.mainResult}>\r\n          <Text style={styles.subTitle}>Your calculated zakat is...</Text>\r\n          <Animated.View\r\n            style={{\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              opacity: fadeAnim\r\n            }}\r\n          />\r\n          <Text style={styles.title}>${owed}!</Text>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    fontSize: 35,\r\n    color: \"green\"\r\n  },\r\n  subTitle: {\r\n    fontSize: 20,\r\n    paddingTop: 10\r\n  },\r\n  mainResult: {\r\n    paddingTop: 15,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}