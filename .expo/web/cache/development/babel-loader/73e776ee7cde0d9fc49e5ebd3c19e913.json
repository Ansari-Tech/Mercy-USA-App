{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\node_modules\\\\react-native-maps\\\\lib\\\\components\\\\MapOverlay.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectSpread2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport decorateMapComponent, { SUPPORTED, USES_DEFAULT_IMPLEMENTATION } from \"./decorateMapComponent\";\nvar viewConfig = {\n  uiViewClassName: 'AIR<provider>MapOverlay',\n  validAttributes: {\n    image: true\n  }\n};\n\nvar propTypes = _objectSpread2({}, View.propTypes, {\n  image: PropTypes.any.isRequired,\n  bounds: PropTypes.arrayOf(PropTypes.array.isRequired).isRequired,\n  tappable: PropTypes.bool,\n  onPress: PropTypes.func,\n  opacity: PropTypes.number\n});\n\nclass MapOverlay extends Component {\n  render() {\n    var image;\n\n    if (this.props.image) {\n      if (typeof this.props.image.startsWith === 'function' && this.props.image.startsWith('http')) {\n        image = this.props.image;\n      } else {\n        image = Image.resolveAssetSource(this.props.image) || {};\n        image = image.uri;\n      }\n    }\n\n    var AIRMapOverlay = this.getAirComponent();\n    return React.createElement(AIRMapOverlay, _extends({}, this.props, {\n      image: image,\n      style: [styles.overlay, this.props.style],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      }\n    }));\n  }\n\n}\n\nMapOverlay.propTypes = propTypes;\nMapOverlay.viewConfig = viewConfig;\nMapOverlay.defaultProps = {\n  opacity: 1.0\n};\nvar styles = StyleSheet.create({\n  overlay: {\n    position: 'absolute',\n    backgroundColor: 'transparent'\n  }\n});\nMapOverlay.Animated = Animated.createAnimatedComponent(MapOverlay);\nexport default decorateMapComponent(MapOverlay, {\n  componentType: 'Overlay',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION\n    }\n  }\n});","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\node_modules\\react-native-maps\\lib\\components\\MapOverlay.js"],"names":["React","Component","PropTypes","decorateMapComponent","SUPPORTED","USES_DEFAULT_IMPLEMENTATION","viewConfig","uiViewClassName","validAttributes","image","propTypes","View","any","isRequired","bounds","arrayOf","array","tappable","bool","onPress","func","opacity","number","MapOverlay","render","props","startsWith","Image","resolveAssetSource","uri","AIRMapOverlay","getAirComponent","styles","overlay","style","defaultProps","StyleSheet","create","position","backgroundColor","Animated","createAnimatedComponent","componentType","providers","google","ios","android"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;AAGA,OAAOC,oBAAP,IACEC,SADF,EAEEC,2BAFF;AAKA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,eAAe,EAAE,yBADA;AAEjBC,EAAAA,eAAe,EAAE;AACfC,IAAAA,KAAK,EAAE;AADQ;AAFA,CAAnB;;AAOA,IAAMC,SAAS,sBACVC,IAAI,CAACD,SADK;AAGbD,EAAAA,KAAK,EAAEP,SAAS,CAACU,GAAV,CAAcC,UAHR;AAKbC,EAAAA,MAAM,EAAEZ,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACc,KAAV,CAAgBH,UAAlC,EAA8CA,UALzC;AASbI,EAAAA,QAAQ,EAAEf,SAAS,CAACgB,IATP;AAWbC,EAAAA,OAAO,EAAEjB,SAAS,CAACkB,IAXN;AAabC,EAAAA,OAAO,EAAEnB,SAAS,CAACoB;AAbN,EAAf;;AAgBA,MAAMC,UAAN,SAAyBtB,SAAzB,CAAmC;AACjCuB,EAAAA,MAAM,GAAG;AACP,QAAIf,KAAJ;;AACA,QAAI,KAAKgB,KAAL,CAAWhB,KAAf,EAAsB;AACpB,UACE,OAAO,KAAKgB,KAAL,CAAWhB,KAAX,CAAiBiB,UAAxB,KAAuC,UAAvC,IACA,KAAKD,KAAL,CAAWhB,KAAX,CAAiBiB,UAAjB,CAA4B,MAA5B,CAFF,EAGE;AACAjB,QAAAA,KAAK,GAAG,KAAKgB,KAAL,CAAWhB,KAAnB;AACD,OALD,MAKO;AACLA,QAAAA,KAAK,GAAGkB,KAAK,CAACC,kBAAN,CAAyB,KAAKH,KAAL,CAAWhB,KAApC,KAA8C,EAAtD;AACAA,QAAAA,KAAK,GAAGA,KAAK,CAACoB,GAAd;AACD;AACF;;AAED,QAAMC,aAAa,GAAG,KAAKC,eAAL,EAAtB;AAEA,WACE,oBAAC,aAAD,eACM,KAAKN,KADX;AAEE,MAAA,KAAK,EAAEhB,KAFT;AAGE,MAAA,KAAK,EAAE,CAACuB,MAAM,CAACC,OAAR,EAAiB,KAAKR,KAAL,CAAWS,KAA5B,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAOD;;AAxBgC;;AA2BnCX,UAAU,CAACb,SAAX,GAAuBA,SAAvB;AACAa,UAAU,CAACjB,UAAX,GAAwBA,UAAxB;AACAiB,UAAU,CAACY,YAAX,GAA0B;AACxBd,EAAAA,OAAO,EAAE;AADe,CAA1B;AAIA,IAAMW,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,OAAO,EAAE;AACPK,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,eAAe,EAAE;AAFV;AADsB,CAAlB,CAAf;AAOAhB,UAAU,CAACiB,QAAX,GAAsBA,QAAQ,CAACC,uBAAT,CAAiClB,UAAjC,CAAtB;AAEA,eAAepB,oBAAoB,CAACoB,UAAD,EAAa;AAC9CmB,EAAAA,aAAa,EAAE,SAD+B;AAE9CC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAEzC,SADC;AAEN0C,MAAAA,OAAO,EAAEzC;AAFH;AADC;AAFmC,CAAb,CAAnC","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { View, StyleSheet, Image, Animated } from 'react-native';\r\n\r\nimport decorateMapComponent, {\r\n  SUPPORTED,\r\n  USES_DEFAULT_IMPLEMENTATION,\r\n} from './decorateMapComponent';\r\n\r\nconst viewConfig = {\r\n  uiViewClassName: 'AIR<provider>MapOverlay',\r\n  validAttributes: {\r\n    image: true,\r\n  },\r\n};\r\n\r\nconst propTypes = {\r\n  ...View.propTypes,\r\n  // A custom image to be used as overlay.\r\n  image: PropTypes.any.isRequired,\r\n  // Top left and bottom right coordinates for the overlay\r\n  bounds: PropTypes.arrayOf(PropTypes.array.isRequired).isRequired,\r\n  /* Boolean to allow an overlay to be tappable and use the\r\n   * onPress function\r\n   */\r\n  tappable: PropTypes.bool,\r\n  // Callback that is called when the user presses on the overlay\r\n  onPress: PropTypes.func,\r\n  // The opacity of the overlay.\r\n  opacity: PropTypes.number,\r\n};\r\n\r\nclass MapOverlay extends Component {\r\n  render() {\r\n    let image;\r\n    if (this.props.image) {\r\n      if (\r\n        typeof this.props.image.startsWith === 'function' &&\r\n        this.props.image.startsWith('http')\r\n      ) {\r\n        image = this.props.image;\r\n      } else {\r\n        image = Image.resolveAssetSource(this.props.image) || {};\r\n        image = image.uri;\r\n      }\r\n    }\r\n\r\n    const AIRMapOverlay = this.getAirComponent();\r\n\r\n    return (\r\n      <AIRMapOverlay\r\n        {...this.props}\r\n        image={image}\r\n        style={[styles.overlay, this.props.style]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nMapOverlay.propTypes = propTypes;\r\nMapOverlay.viewConfig = viewConfig;\r\nMapOverlay.defaultProps = {\r\n  opacity: 1.0,\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  overlay: {\r\n    position: 'absolute',\r\n    backgroundColor: 'transparent',\r\n  },\r\n});\r\n\r\nMapOverlay.Animated = Animated.createAnimatedComponent(MapOverlay);\r\n\r\nexport default decorateMapComponent(MapOverlay, {\r\n  componentType: 'Overlay',\r\n  providers: {\r\n    google: {\r\n      ios: SUPPORTED,\r\n      android: USES_DEFAULT_IMPLEMENTATION,\r\n    },\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}