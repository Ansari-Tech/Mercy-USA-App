{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\node_modules\\\\react-native-calendars\\\\src\\\\agenda\\\\index.js\";\n\nfunction _objectSpread2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport { parseDate, xdateToData } from \"../interface\";\nimport dateutils from \"../dateutils\";\nimport CalendarList from \"../calendar-list\";\nimport ReservationsList from \"./reservation-list\";\nimport styleConstructor from \"./style\";\nimport { VelocityTracker } from \"../input\";\nvar HEADER_HEIGHT = 104;\nvar KNOB_HEIGHT = 24;\nvar viewPropTypes = ViewPropTypes || View.propTypes;\nexport default class AgendaView extends Component {\n  constructor(props) {\n    super(props);\n    this.styles = styleConstructor(props.theme);\n    var windowSize = Dimensions.get('window');\n    this.viewHeight = windowSize.height;\n    this.viewWidth = windowSize.width;\n    this.scrollTimeout = undefined;\n    this.headerState = 'idle';\n    this.state = {\n      scrollY: new Animated.Value(0),\n      calendarIsReady: false,\n      calendarScrollable: false,\n      firstResevationLoad: false,\n      selectedDay: parseDate(this.props.selected) || XDate(true),\n      topDay: parseDate(this.props.selected) || XDate(true)\n    };\n    this.currentMonth = this.state.selectedDay.clone();\n    this.onLayout = this.onLayout.bind(this);\n    this.onScrollPadLayout = this.onScrollPadLayout.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onStartDrag = this.onStartDrag.bind(this);\n    this.onSnapAfterDrag = this.onSnapAfterDrag.bind(this);\n    this.generateMarkings = this.generateMarkings.bind(this);\n    this.knobTracker = new VelocityTracker();\n    this.state.scrollY.addListener((_ref) => {\n      var {\n        value\n      } = _ref;\n      return this.knobTracker.add(value);\n    });\n  }\n\n  calendarOffset() {\n    return 90 - this.viewHeight / 2;\n  }\n\n  initialScrollPadPosition() {\n    return Math.max(0, this.viewHeight - HEADER_HEIGHT);\n  }\n\n  setScrollPadPosition(y, animated) {\n    this.scrollPad._component.scrollTo({\n      x: 0,\n      y,\n      animated\n    });\n  }\n\n  onScrollPadLayout() {\n    this.setScrollPadPosition(this.initialScrollPadPosition(), false);\n    setTimeout(() => this.setState({\n      calendarIsReady: true\n    }), 0);\n  }\n\n  onLayout(event) {\n    this.viewHeight = event.nativeEvent.layout.height;\n    this.viewWidth = event.nativeEvent.layout.width;\n    this.forceUpdate();\n  }\n\n  onTouchStart() {\n    this.headerState = 'touched';\n\n    if (this.knob) {\n      this.knob.setNativeProps({\n        style: {\n          opacity: 0.5\n        }\n      });\n    }\n  }\n\n  onTouchEnd() {\n    if (this.knob) {\n      this.knob.setNativeProps({\n        style: {\n          opacity: 1\n        }\n      });\n    }\n\n    if (this.headerState === 'touched') {\n      this.setScrollPadPosition(0, true);\n      this.enableCalendarScrolling();\n    }\n\n    this.headerState = 'idle';\n  }\n\n  onStartDrag() {\n    this.headerState = 'dragged';\n    this.knobTracker.reset();\n  }\n\n  onSnapAfterDrag(e) {\n    this.onTouchEnd();\n    var currentY = e.nativeEvent.contentOffset.y;\n    this.knobTracker.add(currentY);\n    var projectedY = currentY + this.knobTracker.estimateSpeed() * 250;\n    var maxY = this.initialScrollPadPosition();\n    var snapY = projectedY > maxY / 2 ? maxY : 0;\n    this.setScrollPadPosition(snapY, true);\n\n    if (snapY === 0) {\n      this.enableCalendarScrolling();\n    }\n  }\n\n  onVisibleMonthsChange(months) {\n    if (this.props.items && !this.state.firstResevationLoad) {\n      clearTimeout(this.scrollTimeout);\n      this.scrollTimeout = setTimeout(() => {\n        if (this.props.loadItemsForMonth && this._isMounted) {\n          this.props.loadItemsForMonth(months[0]);\n        }\n      }, 200);\n    }\n  }\n\n  loadReservations(props) {\n    if ((!props.items || !Object.keys(props.items).length) && !this.state.firstResevationLoad) {\n      this.setState({\n        firstResevationLoad: true\n      }, () => {\n        if (this.props.loadItemsForMonth) {\n          this.props.loadItemsForMonth(xdateToData(this.state.selectedDay));\n        }\n      });\n    }\n  }\n\n  componentWillMount() {\n    this._isMounted = true;\n    this.loadReservations(this.props);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentWillReceiveProps(props) {\n    if (props.items) {\n      this.setState({\n        firstResevationLoad: false\n      });\n    } else {\n      this.loadReservations(props);\n    }\n  }\n\n  enableCalendarScrolling() {\n    this.setState({\n      calendarScrollable: true\n    });\n\n    if (this.props.onCalendarToggled) {\n      this.props.onCalendarToggled(true);\n    }\n\n    this.calendar.scrollToDay(this.state.selectedDay, this.calendarOffset() + 1, true);\n  }\n\n  _chooseDayFromCalendar(d) {\n    this.chooseDay(d, !this.state.calendarScrollable);\n  }\n\n  chooseDay(d, optimisticScroll) {\n    var day = parseDate(d);\n    this.setState({\n      calendarScrollable: false,\n      selectedDay: day.clone()\n    });\n\n    if (this.props.onCalendarToggled) {\n      this.props.onCalendarToggled(false);\n    }\n\n    if (!optimisticScroll) {\n      this.setState({\n        topDay: day.clone()\n      });\n    }\n\n    this.setScrollPadPosition(this.initialScrollPadPosition(), true);\n    this.calendar.scrollToDay(day, this.calendarOffset(), true);\n\n    if (this.props.loadItemsForMonth) {\n      this.props.loadItemsForMonth(xdateToData(day));\n    }\n\n    if (this.props.onDayPress) {\n      this.props.onDayPress(xdateToData(day));\n    }\n  }\n\n  renderReservations() {\n    return React.createElement(ReservationsList, {\n      refreshControl: this.props.refreshControl,\n      refreshing: this.props.refreshing,\n      onRefresh: this.props.onRefresh,\n      rowHasChanged: this.props.rowHasChanged,\n      renderItem: this.props.renderItem,\n      renderDay: this.props.renderDay,\n      renderEmptyDate: this.props.renderEmptyDate,\n      reservations: this.props.items,\n      selectedDay: this.state.selectedDay,\n      renderEmptyData: this.props.renderEmptyData,\n      topDay: this.state.topDay,\n      onDayChange: this.onDayChange.bind(this),\n      onScroll: () => {},\n      ref: c => this.list = c,\n      theme: this.props.theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      }\n    });\n  }\n\n  onDayChange(day) {\n    var newDate = parseDate(day);\n    var withAnimation = dateutils.sameMonth(newDate, this.state.selectedDay);\n    this.calendar.scrollToDay(day, this.calendarOffset(), withAnimation);\n    this.setState({\n      selectedDay: parseDate(day)\n    });\n\n    if (this.props.onDayChange) {\n      this.props.onDayChange(xdateToData(newDate));\n    }\n  }\n\n  generateMarkings() {\n    var markings = this.props.markedDates;\n\n    if (!markings) {\n      markings = {};\n      Object.keys(this.props.items || {}).forEach(key => {\n        if (this.props.items[key] && this.props.items[key].length) {\n          markings[key] = {\n            marked: true\n          };\n        }\n      });\n    }\n\n    var key = this.state.selectedDay.toString('yyyy-MM-dd');\n    return _objectSpread2({}, markings, {\n      [key]: _objectSpread2({}, markings[key] || {}, {}, {\n        selected: true\n      })\n    });\n  }\n\n  render() {\n    var agendaHeight = Math.max(0, this.viewHeight - HEADER_HEIGHT);\n    var weekDaysNames = dateutils.weekDayNames(this.props.firstDay);\n    var weekdaysStyle = [this.styles.weekdays, {\n      opacity: this.state.scrollY.interpolate({\n        inputRange: [agendaHeight - HEADER_HEIGHT, agendaHeight],\n        outputRange: [0, 1],\n        extrapolate: 'clamp'\n      }),\n      transform: [{\n        translateY: this.state.scrollY.interpolate({\n          inputRange: [Math.max(0, agendaHeight - HEADER_HEIGHT), agendaHeight],\n          outputRange: [-HEADER_HEIGHT, 0],\n          extrapolate: 'clamp'\n        })\n      }]\n    }];\n    var headerTranslate = this.state.scrollY.interpolate({\n      inputRange: [0, agendaHeight],\n      outputRange: [agendaHeight, 0],\n      extrapolate: 'clamp'\n    });\n    var contentTranslate = this.state.scrollY.interpolate({\n      inputRange: [0, agendaHeight],\n      outputRange: [0, agendaHeight / 2],\n      extrapolate: 'clamp'\n    });\n    var headerStyle = [this.styles.header, {\n      bottom: agendaHeight,\n      transform: [{\n        translateY: headerTranslate\n      }]\n    }];\n\n    if (!this.state.calendarIsReady) {\n      headerStyle.push({\n        height: 0\n      });\n      weekdaysStyle.push({\n        height: HEADER_HEIGHT\n      });\n    }\n\n    var shouldAllowDragging = !this.props.hideKnob && !this.state.calendarScrollable;\n    var scrollPadPosition = (shouldAllowDragging ? HEADER_HEIGHT : 0) - KNOB_HEIGHT;\n    var scrollPadStyle = {\n      position: 'absolute',\n      width: 80,\n      height: KNOB_HEIGHT,\n      top: scrollPadPosition,\n      left: (this.viewWidth - 80) / 2\n    };\n    var knob = React.createElement(View, {\n      style: this.styles.knobContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      }\n    });\n\n    if (!this.props.hideKnob) {\n      var knobView = this.props.renderKnob ? this.props.renderKnob() : React.createElement(View, {\n        style: this.styles.knob,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        }\n      });\n      knob = this.state.calendarScrollable ? null : React.createElement(View, {\n        style: this.styles.knobContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        }\n      }, React.createElement(View, {\n        ref: c => this.knob = c,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        }\n      }, knobView));\n    }\n\n    return React.createElement(View, {\n      onLayout: this.onLayout,\n      style: [this.props.style, {\n        flex: 1,\n        overflow: 'hidden'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      }\n    }, React.createElement(View, {\n      style: this.styles.reservations,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      }\n    }, this.renderReservations()), React.createElement(Animated.View, {\n      style: headerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      }\n    }, React.createElement(Animated.View, {\n      style: {\n        flex: 1,\n        transform: [{\n          translateY: contentTranslate\n        }]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      }\n    }, React.createElement(CalendarList, {\n      onLayout: () => {\n        this.calendar.scrollToDay(this.state.selectedDay.clone(), this.calendarOffset(), false);\n      },\n      calendarWidth: this.viewWidth,\n      theme: this.props.theme,\n      onVisibleMonthsChange: this.onVisibleMonthsChange.bind(this),\n      ref: c => this.calendar = c,\n      minDate: this.props.minDate,\n      maxDate: this.props.maxDate,\n      current: this.currentMonth,\n      markedDates: this.generateMarkings(),\n      markingType: this.props.markingType,\n      removeClippedSubviews: this.props.removeClippedSubviews,\n      onDayPress: this._chooseDayFromCalendar.bind(this),\n      scrollingEnabled: this.state.calendarScrollable,\n      hideExtraDays: this.state.calendarScrollable,\n      firstDay: this.props.firstDay,\n      monthFormat: this.props.monthFormat,\n      pastScrollRange: this.props.pastScrollRange,\n      futureScrollRange: this.props.futureScrollRange,\n      dayComponent: this.props.dayComponent,\n      disabledByDefault: this.props.disabledByDefault,\n      displayLoadingIndicator: this.props.displayLoadingIndicator,\n      showWeekNumbers: this.props.showWeekNumbers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      }\n    })), knob), React.createElement(Animated.View, {\n      style: weekdaysStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      }\n    }, this.props.showWeekNumbers && React.createElement(Text, {\n      allowFontScaling: false,\n      style: this.styles.weekday,\n      numberOfLines: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      }\n    }), weekDaysNames.map((day, index) => React.createElement(Text, {\n      allowFontScaling: false,\n      key: day + index,\n      style: this.styles.weekday,\n      numberOfLines: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      }\n    }, day))), React.createElement(Animated.ScrollView, {\n      ref: c => this.scrollPad = c,\n      overScrollMode: \"never\",\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      style: scrollPadStyle,\n      scrollEventThrottle: 1,\n      scrollsToTop: false,\n      onTouchStart: this.onTouchStart,\n      onTouchEnd: this.onTouchEnd,\n      onScrollBeginDrag: this.onStartDrag,\n      onScrollEndDrag: this.onSnapAfterDrag,\n      onScroll: Animated.event([{\n        nativeEvent: {\n          contentOffset: {\n            y: this.state.scrollY\n          }\n        }\n      }], {\n        useNativeDriver: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      }\n    }, React.createElement(View, {\n      style: {\n        height: agendaHeight + KNOB_HEIGHT\n      },\n      onLayout: this.onScrollPadLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      }\n    })));\n  }\n\n}\nAgendaView.displayName = 'Agenda';\nAgendaView.propTypes = {\n  theme: PropTypes.object,\n  style: viewPropTypes.style,\n  items: PropTypes.object,\n  loadItemsForMonth: PropTypes.func,\n  onCalendarToggled: PropTypes.func,\n  onDayPress: PropTypes.func,\n  onDaychange: PropTypes.func,\n  renderItem: PropTypes.func,\n  renderDay: PropTypes.func,\n  renderKnob: PropTypes.func,\n  renderEmptyDay: PropTypes.func,\n  renderEmptyData: PropTypes.func,\n  rowHasChanged: PropTypes.func,\n  pastScrollRange: PropTypes.number,\n  futureScrollRange: PropTypes.number,\n  selected: PropTypes.any,\n  minDate: PropTypes.any,\n  maxDate: PropTypes.any,\n  firstDay: PropTypes.number,\n  markedDates: PropTypes.object,\n  markingType: PropTypes.string,\n  hideKnob: PropTypes.bool,\n  monthFormat: PropTypes.string,\n  refreshControl: PropTypes.element,\n  onRefresh: PropTypes.func,\n  refreshing: PropTypes.bool,\n  displayLoadingIndicator: PropTypes.bool\n};","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\node_modules\\react-native-calendars\\src\\agenda\\index.js"],"names":["React","Component","PropTypes","XDate","parseDate","xdateToData","dateutils","CalendarList","ReservationsList","styleConstructor","VelocityTracker","HEADER_HEIGHT","KNOB_HEIGHT","viewPropTypes","ViewPropTypes","View","propTypes","AgendaView","constructor","props","styles","theme","windowSize","Dimensions","get","viewHeight","height","viewWidth","width","scrollTimeout","undefined","headerState","state","scrollY","Animated","Value","calendarIsReady","calendarScrollable","firstResevationLoad","selectedDay","selected","topDay","currentMonth","clone","onLayout","bind","onScrollPadLayout","onTouchStart","onTouchEnd","onStartDrag","onSnapAfterDrag","generateMarkings","knobTracker","addListener","value","add","calendarOffset","initialScrollPadPosition","Math","max","setScrollPadPosition","y","animated","scrollPad","_component","scrollTo","x","setTimeout","setState","event","nativeEvent","layout","forceUpdate","knob","setNativeProps","style","opacity","enableCalendarScrolling","reset","e","currentY","contentOffset","projectedY","estimateSpeed","maxY","snapY","onVisibleMonthsChange","months","items","clearTimeout","loadItemsForMonth","_isMounted","loadReservations","Object","keys","length","componentWillMount","componentWillUnmount","componentWillReceiveProps","onCalendarToggled","calendar","scrollToDay","_chooseDayFromCalendar","d","chooseDay","optimisticScroll","day","onDayPress","renderReservations","refreshControl","refreshing","onRefresh","rowHasChanged","renderItem","renderDay","renderEmptyDate","renderEmptyData","onDayChange","c","list","newDate","withAnimation","sameMonth","markings","markedDates","forEach","key","marked","toString","render","agendaHeight","weekDaysNames","weekDayNames","firstDay","weekdaysStyle","weekdays","interpolate","inputRange","outputRange","extrapolate","transform","translateY","headerTranslate","contentTranslate","headerStyle","header","bottom","push","shouldAllowDragging","hideKnob","scrollPadPosition","scrollPadStyle","position","top","left","knobContainer","knobView","renderKnob","flex","overflow","reservations","minDate","maxDate","markingType","removeClippedSubviews","monthFormat","pastScrollRange","futureScrollRange","dayComponent","disabledByDefault","displayLoadingIndicator","showWeekNumbers","weekday","map","index","useNativeDriver","displayName","object","func","onDaychange","renderEmptyDay","number","any","string","bool","element"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Text, View, Dimensions, Animated, ViewPropTypes} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport XDate from 'xdate';\r\n\r\nimport {parseDate, xdateToData} from '../interface';\r\nimport dateutils from '../dateutils';\r\nimport CalendarList from '../calendar-list';\r\nimport ReservationsList from './reservation-list';\r\nimport styleConstructor from './style';\r\nimport {VelocityTracker} from '../input';\r\n\r\n\r\nconst HEADER_HEIGHT = 104;\r\nconst KNOB_HEIGHT = 24;\r\n//Fallback when RN version is < 0.44\r\nconst viewPropTypes = ViewPropTypes || View.propTypes;\r\n\r\n/**\r\n * @description: Agenda component\r\n * @extends: CalendarList\r\n * @extendslink: docs/CalendarList\r\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/agenda.js\r\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/agenda.gif\r\n */\r\nexport default class AgendaView extends Component {\r\n  static displayName = 'Agenda';\r\n\r\n  static propTypes = {\r\n    /** Specify theme properties to override specific styles for calendar parts. Default = {} */\r\n    theme: PropTypes.object,\r\n    /** agenda container style */\r\n    style: viewPropTypes.style,\r\n    /** the list of items that have to be displayed in agenda. If you want to render item as empty date\r\n    the value of date key has to be an empty array []. If there exists no value for date key it is\r\n    considered that the date in question is not yet loaded */\r\n    items: PropTypes.object,\r\n    /** callback that gets called when items for a certain month should be loaded (month became visible) */\r\n    loadItemsForMonth: PropTypes.func,\r\n    /** callback that fires when the calendar is opened or closed */\r\n    onCalendarToggled: PropTypes.func,\r\n    /** callback that gets called on day press */\r\n    onDayPress: PropTypes.func,\r\n    /** callback that gets called when day changes while scrolling agenda list */\r\n    onDaychange: PropTypes.func,\r\n    /** specify how each item should be rendered in agenda */\r\n    renderItem: PropTypes.func,\r\n    /** specify how each date should be rendered. day can be undefined if the item is not first in that day. */\r\n    renderDay: PropTypes.func,\r\n    /** specify how agenda knob should look like */\r\n    renderKnob: PropTypes.func,\r\n    /** specify how empty date content with no items should be rendered */\r\n    renderEmptyDay: PropTypes.func,\r\n    /** specify what should be rendered instead of ActivityIndicator */\r\n    renderEmptyData: PropTypes.func,\r\n    /** specify your item comparison function for increased performance */\r\n    rowHasChanged: PropTypes.func,\r\n    /** Max amount of months allowed to scroll to the past. Default = 50 */\r\n    pastScrollRange: PropTypes.number,\r\n    /** Max amount of months allowed to scroll to the future. Default = 50 */\r\n    futureScrollRange: PropTypes.number,\r\n    /** initially selected day */\r\n    selected: PropTypes.any,\r\n    /** Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined */\r\n    minDate: PropTypes.any,\r\n    /** Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined */\r\n    maxDate: PropTypes.any,\r\n    /** If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday. */\r\n    firstDay: PropTypes.number,\r\n    /** Collection of dates that have to be marked. Default = items */\r\n    markedDates: PropTypes.object,\r\n    /** Optional marking type if custom markedDates are provided */\r\n    markingType: PropTypes.string,/* \r\n    /** Hide knob button. Default = false */\r\n    hideKnob: PropTypes.bool,\r\n    /** Month format in calendar title. Formatting values: http://arshaw.com/xdate/#Formatting */\r\n    monthFormat: PropTypes.string,\r\n    /** A RefreshControl component, used to provide pull-to-refresh functionality for the ScrollView. */\r\n    refreshControl: PropTypes.element,\r\n    /** If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make sure to also set the refreshing prop correctly. */\r\n    onRefresh: PropTypes.func,\r\n    /** Set this true while waiting for new data from a refresh. */\r\n    refreshing: PropTypes.bool,\r\n    /** Display loading indicador. Default = false */\r\n    displayLoadingIndicator: PropTypes.bool\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.styles = styleConstructor(props.theme);\r\n\r\n    const windowSize = Dimensions.get('window');\r\n    this.viewHeight = windowSize.height;\r\n    this.viewWidth = windowSize.width;\r\n    this.scrollTimeout = undefined;\r\n    this.headerState = 'idle';\r\n\r\n    this.state = {\r\n      scrollY: new Animated.Value(0),\r\n      calendarIsReady: false,\r\n      calendarScrollable: false,\r\n      firstResevationLoad: false,\r\n      selectedDay: parseDate(this.props.selected) || XDate(true),\r\n      topDay: parseDate(this.props.selected) || XDate(true),\r\n    };\r\n\r\n    this.currentMonth = this.state.selectedDay.clone();\r\n    this.onLayout = this.onLayout.bind(this);\r\n    this.onScrollPadLayout = this.onScrollPadLayout.bind(this);\r\n    this.onTouchStart = this.onTouchStart.bind(this);\r\n    this.onTouchEnd = this.onTouchEnd.bind(this);\r\n    this.onStartDrag = this.onStartDrag.bind(this);\r\n    this.onSnapAfterDrag = this.onSnapAfterDrag.bind(this);\r\n    this.generateMarkings = this.generateMarkings.bind(this);\r\n    this.knobTracker = new VelocityTracker();\r\n    this.state.scrollY.addListener(({value}) => this.knobTracker.add(value));\r\n  }\r\n\r\n  calendarOffset() {\r\n    return 90 - (this.viewHeight / 2);\r\n  }\r\n\r\n  initialScrollPadPosition() {\r\n    return Math.max(0, this.viewHeight - HEADER_HEIGHT);\r\n  }\r\n\r\n  setScrollPadPosition(y, animated) {\r\n    this.scrollPad._component.scrollTo({x: 0, y, animated});\r\n  }\r\n\r\n  onScrollPadLayout() {\r\n    // When user touches knob, the actual component that receives touch events is a ScrollView.\r\n    // It needs to be scrolled to the bottom, so that when user moves finger downwards,\r\n    // scroll position actually changes (it would stay at 0, when scrolled to the top).\r\n    this.setScrollPadPosition(this.initialScrollPadPosition(), false);\r\n    // delay rendering calendar in full height because otherwise it still flickers sometimes\r\n    setTimeout(() => this.setState({calendarIsReady: true}), 0);\r\n  }\r\n\r\n  onLayout(event) {\r\n    this.viewHeight = event.nativeEvent.layout.height;\r\n    this.viewWidth = event.nativeEvent.layout.width;\r\n    this.forceUpdate();\r\n  }\r\n\r\n  onTouchStart() {\r\n    this.headerState = 'touched';\r\n    if (this.knob) {\r\n      this.knob.setNativeProps({style: {opacity: 0.5}});\r\n    }\r\n  }\r\n\r\n  onTouchEnd() {\r\n    if (this.knob) {\r\n      this.knob.setNativeProps({style: {opacity: 1}});\r\n    }\r\n\r\n    if (this.headerState === 'touched') {\r\n      this.setScrollPadPosition(0, true);\r\n      this.enableCalendarScrolling();\r\n    }\r\n\r\n    this.headerState = 'idle';\r\n  }\r\n\r\n  onStartDrag() {\r\n    this.headerState = 'dragged';\r\n    this.knobTracker.reset();\r\n  }\r\n\r\n  onSnapAfterDrag(e) {\r\n    // on Android onTouchEnd is not called if dragging was started\r\n    this.onTouchEnd();\r\n    const currentY = e.nativeEvent.contentOffset.y;\r\n    this.knobTracker.add(currentY);\r\n    const projectedY = currentY + this.knobTracker.estimateSpeed() * 250/*ms*/;\r\n    const maxY = this.initialScrollPadPosition();\r\n    const snapY = (projectedY > maxY / 2) ? maxY : 0;\r\n    this.setScrollPadPosition(snapY, true);\r\n    \r\n    if (snapY === 0) {\r\n      this.enableCalendarScrolling();\r\n    }\r\n  }\r\n\r\n  onVisibleMonthsChange(months) {\r\n    if (this.props.items && !this.state.firstResevationLoad) {\r\n      clearTimeout(this.scrollTimeout);\r\n      this.scrollTimeout = setTimeout(() => {\r\n        if (this.props.loadItemsForMonth && this._isMounted) {\r\n          this.props.loadItemsForMonth(months[0]);\r\n        }\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  loadReservations(props) {\r\n    if ((!props.items || !Object.keys(props.items).length) && !this.state.firstResevationLoad) {\r\n      this.setState({\r\n        firstResevationLoad: true\r\n      }, () => {\r\n        if (this.props.loadItemsForMonth) {\r\n          this.props.loadItemsForMonth(xdateToData(this.state.selectedDay));\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this._isMounted = true;\r\n    this.loadReservations(this.props);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (props.items) {\r\n      this.setState({\r\n        firstResevationLoad: false\r\n      });\r\n    } else {\r\n      this.loadReservations(props);\r\n    }\r\n  }\r\n\r\n  enableCalendarScrolling() {\r\n    this.setState({\r\n      calendarScrollable: true\r\n    });\r\n\r\n    if (this.props.onCalendarToggled) {\r\n      this.props.onCalendarToggled(true);\r\n    }\r\n    // Enlarge calendarOffset here as a workaround on iOS to force repaint.\r\n    // Otherwise the month after current one or before current one remains invisible.\r\n    // The problem is caused by overflow: 'hidden' style, which we need for dragging\r\n    // to be performant.\r\n    // Another working solution for this bug would be to set removeClippedSubviews={false}\r\n    // in CalendarList listView, but that might impact performance when scrolling\r\n    // month list in expanded CalendarList.\r\n    // Further info https://github.com/facebook/react-native/issues/1831\r\n    this.calendar.scrollToDay(this.state.selectedDay, this.calendarOffset() + 1, true);\r\n  }\r\n\r\n  _chooseDayFromCalendar(d) {\r\n    this.chooseDay(d, !this.state.calendarScrollable);\r\n  }\r\n\r\n  chooseDay(d, optimisticScroll) {\r\n    const day = parseDate(d);\r\n    \r\n    this.setState({\r\n      calendarScrollable: false,\r\n      selectedDay: day.clone()\r\n    });\r\n\r\n    if (this.props.onCalendarToggled) {\r\n      this.props.onCalendarToggled(false);\r\n    }\r\n\r\n    if (!optimisticScroll) {\r\n      this.setState({\r\n        topDay: day.clone()\r\n      });\r\n    }\r\n\r\n    this.setScrollPadPosition(this.initialScrollPadPosition(), true);\r\n    this.calendar.scrollToDay(day, this.calendarOffset(), true);\r\n    \r\n    if (this.props.loadItemsForMonth) {\r\n      this.props.loadItemsForMonth(xdateToData(day));\r\n    }\r\n\r\n    if (this.props.onDayPress) {\r\n      this.props.onDayPress(xdateToData(day));\r\n    }\r\n  }\r\n\r\n  renderReservations() {\r\n    return (\r\n      <ReservationsList\r\n        refreshControl={this.props.refreshControl}\r\n        refreshing={this.props.refreshing}\r\n        onRefresh={this.props.onRefresh}\r\n        rowHasChanged={this.props.rowHasChanged}\r\n        renderItem={this.props.renderItem}\r\n        renderDay={this.props.renderDay}\r\n        renderEmptyDate={this.props.renderEmptyDate}\r\n        reservations={this.props.items}\r\n        selectedDay={this.state.selectedDay}\r\n        renderEmptyData={this.props.renderEmptyData}\r\n        topDay={this.state.topDay}\r\n        onDayChange={this.onDayChange.bind(this)}\r\n        onScroll={() => {}}\r\n        ref={(c) => this.list = c}\r\n        theme={this.props.theme}\r\n      />\r\n    );\r\n  }\r\n\r\n  onDayChange(day) {\r\n    const newDate = parseDate(day);\r\n    const withAnimation = dateutils.sameMonth(newDate, this.state.selectedDay);\r\n    \r\n    this.calendar.scrollToDay(day, this.calendarOffset(), withAnimation);\r\n    this.setState({\r\n      selectedDay: parseDate(day)\r\n    });\r\n\r\n    if (this.props.onDayChange) {\r\n      this.props.onDayChange(xdateToData(newDate));\r\n    }\r\n  }\r\n\r\n  generateMarkings() {\r\n    let markings = this.props.markedDates;\r\n    \r\n    if (!markings) {\r\n      markings = {};\r\n      Object.keys(this.props.items  || {}).forEach(key => {\r\n        if (this.props.items[key] && this.props.items[key].length) {\r\n          markings[key] = {marked: true};\r\n        }\r\n      });\r\n    }\r\n\r\n    const key = this.state.selectedDay.toString('yyyy-MM-dd');\r\n    return {...markings, [key]: {...(markings[key] || {}), ...{selected: true}}};\r\n  }\r\n\r\n  render() {\r\n    const agendaHeight = Math.max(0, this.viewHeight - HEADER_HEIGHT);\r\n    const weekDaysNames = dateutils.weekDayNames(this.props.firstDay);\r\n    \r\n    const weekdaysStyle = [this.styles.weekdays, {\r\n      opacity: this.state.scrollY.interpolate({\r\n        inputRange: [agendaHeight - HEADER_HEIGHT, agendaHeight],\r\n        outputRange: [0, 1],\r\n        extrapolate: 'clamp'\r\n      }),\r\n      transform: [{ translateY: this.state.scrollY.interpolate({\r\n        inputRange: [Math.max(0, agendaHeight - HEADER_HEIGHT), agendaHeight],\r\n        outputRange: [-HEADER_HEIGHT, 0],\r\n        extrapolate: 'clamp'\r\n      })}]\r\n    }];\r\n\r\n    const headerTranslate = this.state.scrollY.interpolate({\r\n      inputRange: [0, agendaHeight],\r\n      outputRange: [agendaHeight, 0],\r\n      extrapolate: 'clamp'\r\n    });\r\n\r\n    const contentTranslate = this.state.scrollY.interpolate({\r\n      inputRange: [0, agendaHeight],\r\n      outputRange: [0, agendaHeight/2],\r\n      extrapolate: 'clamp'\r\n    });\r\n\r\n    const headerStyle = [\r\n      this.styles.header,\r\n      {bottom: agendaHeight, transform: [{ translateY: headerTranslate }]}\r\n    ];\r\n\r\n    if (!this.state.calendarIsReady) {\r\n      // limit header height until everything is setup for calendar dragging\r\n      headerStyle.push({height: 0});\r\n      // fill header with appStyle.calendarBackground background to reduce flickering\r\n      weekdaysStyle.push({height: HEADER_HEIGHT});\r\n    }\r\n\r\n    const shouldAllowDragging = !this.props.hideKnob && !this.state.calendarScrollable;\r\n    const scrollPadPosition = (shouldAllowDragging ? HEADER_HEIGHT  : 0) - KNOB_HEIGHT;\r\n\r\n    const scrollPadStyle = {\r\n      position: 'absolute',\r\n      width: 80,\r\n      height: KNOB_HEIGHT,\r\n      top: scrollPadPosition,\r\n      left: (this.viewWidth - 80) / 2\r\n    };\r\n\r\n    let knob = (<View style={this.styles.knobContainer}/>);\r\n\r\n    if (!this.props.hideKnob) {\r\n      const knobView = this.props.renderKnob ? this.props.renderKnob() : (<View style={this.styles.knob}/>);\r\n      knob = this.state.calendarScrollable ? null : (\r\n        <View style={this.styles.knobContainer}>\r\n          <View ref={(c) => this.knob = c}>{knobView}</View>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <View onLayout={this.onLayout} style={[this.props.style, {flex: 1, overflow: 'hidden'}]}>\r\n        <View style={this.styles.reservations}>\r\n          {this.renderReservations()}\r\n        </View>\r\n        <Animated.View style={headerStyle}>\r\n          <Animated.View style={{flex:1, transform: [{translateY: contentTranslate}]}}>\r\n            <CalendarList\r\n              onLayout={() => {\r\n                this.calendar.scrollToDay(this.state.selectedDay.clone(), this.calendarOffset(), false);\r\n              }}\r\n              calendarWidth={this.viewWidth}\r\n              theme={this.props.theme}\r\n              onVisibleMonthsChange={this.onVisibleMonthsChange.bind(this)}\r\n              ref={(c) => this.calendar = c}\r\n              minDate={this.props.minDate}\r\n              maxDate={this.props.maxDate}\r\n              current={this.currentMonth}\r\n              markedDates={this.generateMarkings()}\r\n              markingType={this.props.markingType}\r\n              removeClippedSubviews={this.props.removeClippedSubviews}\r\n              onDayPress={this._chooseDayFromCalendar.bind(this)}\r\n              scrollingEnabled={this.state.calendarScrollable}\r\n              hideExtraDays={this.state.calendarScrollable}\r\n              firstDay={this.props.firstDay}\r\n              monthFormat={this.props.monthFormat}\r\n              pastScrollRange={this.props.pastScrollRange}\r\n              futureScrollRange={this.props.futureScrollRange}\r\n              dayComponent={this.props.dayComponent}\r\n              disabledByDefault={this.props.disabledByDefault}\r\n              displayLoadingIndicator={this.props.displayLoadingIndicator}\r\n              showWeekNumbers={this.props.showWeekNumbers}\r\n            />\r\n          </Animated.View>\r\n          {knob}\r\n        </Animated.View>\r\n        <Animated.View style={weekdaysStyle}>\r\n          {this.props.showWeekNumbers && <Text allowFontScaling={false} style={this.styles.weekday} numberOfLines={1}></Text>}\r\n          {weekDaysNames.map((day, index) => (\r\n            <Text allowFontScaling={false} key={day+index} style={this.styles.weekday} numberOfLines={1}>{day}</Text>\r\n          ))}\r\n        </Animated.View>\r\n        <Animated.ScrollView\r\n          ref={c => this.scrollPad = c}\r\n          overScrollMode='never'\r\n          showsHorizontalScrollIndicator={false}\r\n          showsVerticalScrollIndicator={false}\r\n          style={scrollPadStyle}\r\n          scrollEventThrottle={1}\r\n          scrollsToTop={false}\r\n          onTouchStart={this.onTouchStart}\r\n          onTouchEnd={this.onTouchEnd}\r\n          onScrollBeginDrag={this.onStartDrag}\r\n          onScrollEndDrag={this.onSnapAfterDrag}\r\n          onScroll={Animated.event(\r\n            [{nativeEvent: {contentOffset: {y: this.state.scrollY}}}],\r\n            {useNativeDriver: true},\r\n          )}\r\n        >\r\n          <View style={{height: agendaHeight + KNOB_HEIGHT}} onLayout={this.onScrollPadLayout}/>\r\n        </Animated.ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}