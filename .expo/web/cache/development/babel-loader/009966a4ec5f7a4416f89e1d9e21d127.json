{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\node_modules\\\\react-native-calendars\\\\src\\\\agenda\\\\reservation-list\\\\index.js\";\nimport React, { Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Reservation from \"./reservation\";\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport dateutils from \"../../dateutils\";\nimport styleConstructor from \"./style\";\n\nclass ReactComp extends Component {\n  constructor(props) {\n    super(props);\n    this.styles = styleConstructor(props.theme);\n    this.state = {\n      reservations: []\n    };\n    this.heights = [];\n    this.selectedDay = this.props.selectedDay;\n    this.scrollOver = true;\n  }\n\n  componentWillMount() {\n    this.updateDataSource(this.getReservations(this.props).reservations);\n  }\n\n  updateDataSource(reservations) {\n    this.setState({\n      reservations\n    });\n  }\n\n  updateReservations(props) {\n    var reservations = this.getReservations(props);\n\n    if (this.list && !dateutils.sameDate(props.selectedDay, this.selectedDay)) {\n      var scrollPosition = 0;\n\n      for (var i = 0; i < reservations.scrollPosition; i++) {\n        scrollPosition += this.heights[i] || 0;\n      }\n\n      this.scrollOver = false;\n      this.list.scrollToOffset({\n        offset: scrollPosition,\n        animated: true\n      });\n    }\n\n    this.selectedDay = props.selectedDay;\n    this.updateDataSource(reservations.reservations);\n  }\n\n  componentWillReceiveProps(props) {\n    if (!dateutils.sameDate(props.topDay, this.props.topDay)) {\n      this.setState({\n        reservations: []\n      }, () => {\n        this.updateReservations(props);\n      });\n    } else {\n      this.updateReservations(props);\n    }\n  }\n\n  onScroll(event) {\n    var yOffset = event.nativeEvent.contentOffset.y;\n    this.props.onScroll(yOffset);\n    var topRowOffset = 0;\n    var topRow;\n\n    for (topRow = 0; topRow < this.heights.length; topRow++) {\n      if (topRowOffset + this.heights[topRow] / 2 >= yOffset) {\n        break;\n      }\n\n      topRowOffset += this.heights[topRow];\n    }\n\n    var row = this.state.reservations[topRow];\n    if (!row) return;\n    var day = row.day;\n    var sameDate = dateutils.sameDate(day, this.selectedDay);\n\n    if (!sameDate && this.scrollOver) {\n      this.selectedDay = day.clone();\n      this.props.onDayChange(day.clone());\n    }\n  }\n\n  onRowLayoutChange(ind, event) {\n    this.heights[ind] = event.nativeEvent.layout.height;\n  }\n\n  renderRow(_ref) {\n    var {\n      item,\n      index\n    } = _ref;\n    return React.createElement(View, {\n      onLayout: this.onRowLayoutChange.bind(this, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      }\n    }, React.createElement(Reservation, {\n      item: item,\n      renderItem: this.props.renderItem,\n      renderDay: this.props.renderDay,\n      renderEmptyDate: this.props.renderEmptyDate,\n      theme: this.props.theme,\n      rowHasChanged: this.props.rowHasChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      }\n    }));\n  }\n\n  getReservationsForDay(iterator, props) {\n    var day = iterator.clone();\n    var res = props.reservations[day.toString('yyyy-MM-dd')];\n\n    if (res && res.length) {\n      return res.map((reservation, i) => {\n        return {\n          reservation,\n          date: i ? false : day,\n          day\n        };\n      });\n    } else if (res) {\n      return [{\n        date: iterator.clone(),\n        day\n      }];\n    } else {\n      return false;\n    }\n  }\n\n  onListTouch() {\n    this.scrollOver = true;\n  }\n\n  getReservations(props) {\n    if (!props.reservations || !props.selectedDay) {\n      return {\n        reservations: [],\n        scrollPosition: 0\n      };\n    }\n\n    var reservations = [];\n\n    if (this.state.reservations && this.state.reservations.length) {\n      var _iterator = this.state.reservations[0].day.clone();\n\n      while (_iterator.getTime() < props.selectedDay.getTime()) {\n        var res = this.getReservationsForDay(_iterator, props);\n\n        if (!res) {\n          reservations = [];\n          break;\n        } else {\n          reservations = reservations.concat(res);\n        }\n\n        _iterator.addDays(1);\n      }\n    }\n\n    var scrollPosition = reservations.length;\n    var iterator = props.selectedDay.clone();\n\n    for (var i = 0; i < 31; i++) {\n      var _res = this.getReservationsForDay(iterator, props);\n\n      if (_res) {\n        reservations = reservations.concat(_res);\n      }\n\n      iterator.addDays(1);\n    }\n\n    return {\n      reservations,\n      scrollPosition\n    };\n  }\n\n  render() {\n    if (!this.props.reservations || !this.props.reservations[this.props.selectedDay.toString('yyyy-MM-dd')]) {\n      if (this.props.renderEmptyData) {\n        return this.props.renderEmptyData();\n      }\n\n      return React.createElement(ActivityIndicator, {\n        style: {\n          marginTop: 80\n        },\n        color: this.props.theme && this.props.theme.indicatorColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        }\n      });\n    }\n\n    return React.createElement(FlatList, {\n      ref: c => this.list = c,\n      style: this.props.style,\n      contentContainerStyle: this.styles.content,\n      renderItem: this.renderRow.bind(this),\n      data: this.state.reservations,\n      onScroll: this.onScroll.bind(this),\n      showsVerticalScrollIndicator: false,\n      scrollEventThrottle: 200,\n      onMoveShouldSetResponderCapture: () => {\n        this.onListTouch();\n        return false;\n      },\n      keyExtractor: (item, index) => String(index),\n      refreshControl: this.props.refreshControl,\n      refreshing: this.props.refreshing || false,\n      onRefresh: this.props.onRefresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      }\n    });\n  }\n\n}\n\nReactComp.displayName = 'IGNORE';\nReactComp.propTypes = {\n  rowHasChanged: PropTypes.func,\n  renderItem: PropTypes.func,\n  renderDay: PropTypes.func,\n  renderEmptyDate: PropTypes.func,\n  onDayChange: PropTypes.func,\n  onScroll: PropTypes.func,\n  reservations: PropTypes.object,\n  selectedDay: PropTypes.instanceOf(XDate),\n  topDay: PropTypes.instanceOf(XDate),\n  refreshControl: PropTypes.element,\n  refreshing: PropTypes.bool,\n  onRefresh: PropTypes.func\n};\nexport default ReactComp;","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\node_modules\\react-native-calendars\\src\\agenda\\reservation-list\\index.js"],"names":["React","Component","Reservation","PropTypes","XDate","dateutils","styleConstructor","ReactComp","constructor","props","styles","theme","state","reservations","heights","selectedDay","scrollOver","componentWillMount","updateDataSource","getReservations","setState","updateReservations","list","sameDate","scrollPosition","i","scrollToOffset","offset","animated","componentWillReceiveProps","topDay","onScroll","event","yOffset","nativeEvent","contentOffset","y","topRowOffset","topRow","length","row","day","clone","onDayChange","onRowLayoutChange","ind","layout","height","renderRow","item","index","bind","renderItem","renderDay","renderEmptyDate","rowHasChanged","getReservationsForDay","iterator","res","toString","map","reservation","date","onListTouch","getTime","concat","addDays","render","renderEmptyData","marginTop","indicatorColor","c","style","content","String","refreshControl","refreshing","onRefresh","displayName","propTypes","func","object","instanceOf","element","bool"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n  FlatList,\r\n  ActivityIndicator,\r\n  View\r\n} from 'react-native';\r\nimport Reservation from './reservation';\r\nimport PropTypes from 'prop-types';\r\nimport XDate from 'xdate';\r\n\r\nimport dateutils from '../../dateutils';\r\nimport styleConstructor from './style';\r\n\r\nclass ReactComp extends Component {\r\n  static displayName = 'IGNORE';\r\n  \r\n  static propTypes = {\r\n    // specify your item comparison function for increased performance\r\n    rowHasChanged: PropTypes.func,\r\n    // specify how each item should be rendered in agenda\r\n    renderItem: PropTypes.func,\r\n    // specify how each date should be rendered. day can be undefined if the item is not first in that day.\r\n    renderDay: PropTypes.func,\r\n    // specify how empty date content with no items should be rendered\r\n    renderEmptyDate: PropTypes.func,\r\n    // callback that gets called when day changes while scrolling agenda list\r\n    onDayChange: PropTypes.func,\r\n    // onScroll ListView event\r\n    onScroll: PropTypes.func,\r\n    // the list of items that have to be displayed in agenda. If you want to render item as empty date\r\n    // the value of date key kas to be an empty array []. If there exists no value for date key it is\r\n    // considered that the date in question is not yet loaded\r\n    reservations: PropTypes.object,\r\n\r\n    selectedDay: PropTypes.instanceOf(XDate),\r\n    topDay: PropTypes.instanceOf(XDate),\r\n    refreshControl: PropTypes.element,\r\n    refreshing: PropTypes.bool,\r\n    onRefresh: PropTypes.func,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.styles = styleConstructor(props.theme);\r\n    this.state = {\r\n      reservations: []\r\n    };\r\n    this.heights=[];\r\n    this.selectedDay = this.props.selectedDay;\r\n    this.scrollOver = true;\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.updateDataSource(this.getReservations(this.props).reservations);\r\n  }\r\n\r\n  updateDataSource(reservations) {\r\n    this.setState({\r\n      reservations\r\n    });\r\n  }\r\n\r\n  updateReservations(props) {\r\n    const reservations = this.getReservations(props);\r\n    if (this.list && !dateutils.sameDate(props.selectedDay, this.selectedDay)) {\r\n      let scrollPosition = 0;\r\n      for (let i = 0; i < reservations.scrollPosition; i++) {\r\n        scrollPosition += this.heights[i] || 0;\r\n      }\r\n      this.scrollOver = false;\r\n      this.list.scrollToOffset({offset: scrollPosition, animated: true});\r\n    }\r\n    this.selectedDay = props.selectedDay;\r\n    this.updateDataSource(reservations.reservations);\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (!dateutils.sameDate(props.topDay, this.props.topDay)) {\r\n      this.setState({\r\n        reservations: []\r\n      }, () => {\r\n        this.updateReservations(props);\r\n      });\r\n    } else {\r\n      this.updateReservations(props);\r\n    }\r\n  }\r\n\r\n  onScroll(event) {\r\n    const yOffset = event.nativeEvent.contentOffset.y;\r\n    this.props.onScroll(yOffset);\r\n    let topRowOffset = 0;\r\n    let topRow;\r\n    for (topRow = 0; topRow < this.heights.length; topRow++) {\r\n      if (topRowOffset + this.heights[topRow] / 2 >= yOffset) {\r\n        break;\r\n      }\r\n      topRowOffset += this.heights[topRow];\r\n    }\r\n    const row = this.state.reservations[topRow];\r\n    if (!row) return;\r\n    const day = row.day;\r\n    const sameDate = dateutils.sameDate(day, this.selectedDay);\r\n    if (!sameDate && this.scrollOver) {\r\n      this.selectedDay = day.clone();\r\n      this.props.onDayChange(day.clone());\r\n    }\r\n  }\r\n\r\n  onRowLayoutChange(ind, event) {\r\n    this.heights[ind] = event.nativeEvent.layout.height;\r\n  }\r\n\r\n  renderRow({item, index}) {\r\n    return (\r\n      <View onLayout={this.onRowLayoutChange.bind(this, index)}>\r\n        <Reservation\r\n          item={item}\r\n          renderItem={this.props.renderItem}\r\n          renderDay={this.props.renderDay}\r\n          renderEmptyDate={this.props.renderEmptyDate}\r\n          theme={this.props.theme}\r\n          rowHasChanged={this.props.rowHasChanged}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  getReservationsForDay(iterator, props) {\r\n    const day = iterator.clone();\r\n    const res = props.reservations[day.toString('yyyy-MM-dd')];\r\n    if (res && res.length) {\r\n      return res.map((reservation, i) => {\r\n        return {\r\n          reservation,\r\n          date: i ? false : day,\r\n          day\r\n        };\r\n      });\r\n    } else if (res) {\r\n      return [{\r\n        date: iterator.clone(),\r\n        day\r\n      }];\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  onListTouch() {\r\n    this.scrollOver = true;\r\n  }\r\n\r\n  getReservations(props) {\r\n    if (!props.reservations || !props.selectedDay) {\r\n      return {reservations: [], scrollPosition: 0};\r\n    }\r\n    let reservations = [];\r\n    if (this.state.reservations && this.state.reservations.length) {\r\n      const iterator = this.state.reservations[0].day.clone();\r\n      while (iterator.getTime() < props.selectedDay.getTime()) {\r\n        const res = this.getReservationsForDay(iterator, props);\r\n        if (!res) {\r\n          reservations = [];\r\n          break;\r\n        } else {\r\n          reservations = reservations.concat(res);\r\n        }\r\n        iterator.addDays(1);\r\n      }\r\n    }\r\n    const scrollPosition = reservations.length;\r\n    const iterator = props.selectedDay.clone();\r\n    for (let i = 0; i < 31; i++) {\r\n      const res = this.getReservationsForDay(iterator, props);\r\n      if (res) {\r\n        reservations = reservations.concat(res);\r\n      }\r\n      iterator.addDays(1);\r\n    }\r\n\r\n    return {reservations, scrollPosition};\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.reservations || !this.props.reservations[this.props.selectedDay.toString('yyyy-MM-dd')]) {\r\n      if (this.props.renderEmptyData) {\r\n        return this.props.renderEmptyData();\r\n      }\r\n      return (\r\n        <ActivityIndicator style={{marginTop: 80}} color={this.props.theme && this.props.theme.indicatorColor} />\r\n      );\r\n    }\r\n    return (\r\n      <FlatList\r\n        ref={(c) => this.list = c}\r\n        style={this.props.style}\r\n        contentContainerStyle={this.styles.content}\r\n        renderItem={this.renderRow.bind(this)}\r\n        data={this.state.reservations}\r\n        onScroll={this.onScroll.bind(this)}\r\n        showsVerticalScrollIndicator={false}\r\n        scrollEventThrottle={200}\r\n        onMoveShouldSetResponderCapture={() => {this.onListTouch(); return false;}}\r\n        keyExtractor={(item, index) => String(index)}\r\n        refreshControl={this.props.refreshControl}\r\n        refreshing={this.props.refreshing || false}\r\n        onRefresh={this.props.onRefresh}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReactComp;\r\n"]},"metadata":{},"sourceType":"module"}