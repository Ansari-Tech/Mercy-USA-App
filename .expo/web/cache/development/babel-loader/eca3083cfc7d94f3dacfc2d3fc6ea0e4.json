{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar\\\\header\\\\index.js\";\nimport React, { Component } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport HijriDate, { toHijri } from 'hijri-date/lib/safe';\nimport XDate from 'xdate';\nimport PropTypes from 'prop-types';\nimport styleConstructor from \"./style\";\nimport { weekDayNames } from \"../../dateutils\";\nimport { CHANGE_MONTH_LEFT_ARROW, CHANGE_MONTH_RIGHT_ARROW } from \"../../testIDs\";\nvar monthNames = [\"Muharram\", \"Safar\", \"Rabi' al-awwal\", \"Rabi' al-thani\", \"Jumada al-awwal\", \"Jumada al-thani\", \"Rajab\", \"Sha'ban\", \"Ramadan\", \"Shawwal\", \"Dhu al-Qi'dah\", \"Dhu al-Hijjah\"];\n\nclass CalendarHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.style = styleConstructor(props.theme);\n    this.addMonth = this.addMonth.bind(this);\n    this.substractMonth = this.substractMonth.bind(this);\n    this.onPressLeft = this.onPressLeft.bind(this);\n    this.onPressRight = this.onPressRight.bind(this);\n  }\n\n  addMonth() {\n    this.props.addMonth(1);\n  }\n\n  substractMonth() {\n    this.props.addMonth(-1);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.month.toString('yyyy MM') !== this.props.month.toString('yyyy MM')) {\n      return true;\n    }\n\n    if (nextProps.showIndicator !== this.props.showIndicator) {\n      return true;\n    }\n\n    if (nextProps.hideDayNames !== this.props.hideDayNames) {\n      return true;\n    }\n\n    if (nextProps.firstDay !== this.props.firstDay) {\n      return true;\n    }\n\n    if (nextProps.weekNumbers !== this.props.weekNumbers) {\n      return true;\n    }\n\n    if (nextProps.monthFormat !== this.props.monthFormat) {\n      return true;\n    }\n\n    return false;\n  }\n\n  onPressLeft() {\n    console.log(this.props.month.toDate());\n    var {\n      onPressArrowLeft\n    } = this.props;\n\n    if (typeof onPressArrowLeft === 'function') {\n      return onPressArrowLeft(this.substractMonth, this.props.month);\n    }\n\n    return this.substractMonth();\n  }\n\n  onPressRight() {\n    var {\n      onPressArrowRight\n    } = this.props;\n\n    if (typeof onPressArrowRight === 'function') {\n      return onPressArrowRight(this.addMonth, this.props.month);\n    }\n\n    return this.addMonth();\n  }\n\n  render() {\n    var leftArrow = React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      }\n    });\n    var rightArrow = React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      }\n    });\n    var weekDaysNames = weekDayNames(this.props.firstDay);\n    var {\n      testID\n    } = this.props;\n\n    if (!this.props.hideArrows) {\n      leftArrow = React.createElement(TouchableOpacity, {\n        onPress: this.onPressLeft,\n        style: this.style.arrow,\n        hitSlop: {\n          left: 20,\n          right: 20,\n          top: 20,\n          bottom: 20\n        },\n        testID: testID ? \"\".concat(CHANGE_MONTH_LEFT_ARROW, \"-\").concat(testID) : CHANGE_MONTH_LEFT_ARROW,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        }\n      }, this.props.renderArrow ? this.props.renderArrow('left') : React.createElement(Image, {\n        source: require(\"../img/previous.png\"),\n        style: this.style.arrowImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        }\n      }));\n      rightArrow = React.createElement(TouchableOpacity, {\n        onPress: this.onPressRight,\n        style: this.style.arrow,\n        hitSlop: {\n          left: 20,\n          right: 20,\n          top: 20,\n          bottom: 20\n        },\n        testID: testID ? \"\".concat(CHANGE_MONTH_RIGHT_ARROW, \"-\").concat(testID) : CHANGE_MONTH_RIGHT_ARROW,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        }\n      }, this.props.renderArrow ? this.props.renderArrow('right') : React.createElement(Image, {\n        source: require(\"../img/next.png\"),\n        style: this.style.arrowImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        }\n      }));\n    }\n\n    var indicator;\n\n    if (this.props.showIndicator) {\n      indicator = React.createElement(ActivityIndicator, {\n        color: this.props.theme && this.props.theme.indicatorColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        }\n      });\n    }\n\n    return React.createElement(View, {\n      style: this.props.style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      }\n    }, React.createElement(View, {\n      style: this.style.header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      }\n    }, leftArrow, React.createElement(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      }\n    }, React.createElement(Text, {\n      allowFontScaling: false,\n      style: this.style.monthText,\n      accessibilityTraits: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      }\n    }, monthNames[toHijri(this.props.month.toDate()).month - 1], \" \", toHijri(this.props.month.toDate()).year, \" (\", this.props.month.getFullYear(), \")\"), indicator), rightArrow), !this.props.hideDayNames && React.createElement(View, {\n      style: this.style.week,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      }\n    }, this.props.weekNumbers && React.createElement(Text, {\n      allowFontScaling: false,\n      style: this.style.dayHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      }\n    }), weekDaysNames.map((day, idx) => React.createElement(Text, {\n      allowFontScaling: false,\n      key: idx,\n      accessible: false,\n      style: this.style.dayHeader,\n      numberOfLines: 1,\n      importantForAccessibility: \"no\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      }\n    }, day))));\n  }\n\n}\n\nCalendarHeader.displayName = 'IGNORE';\nCalendarHeader.propTypes = {\n  theme: PropTypes.object,\n  hideArrows: PropTypes.bool,\n  month: PropTypes.instanceOf(XDate),\n  addMonth: PropTypes.func,\n  showIndicator: PropTypes.bool,\n  firstDay: PropTypes.number,\n  renderArrow: PropTypes.func,\n  hideDayNames: PropTypes.bool,\n  weekNumbers: PropTypes.bool,\n  onPressArrowLeft: PropTypes.func,\n  onPressArrowRight: PropTypes.func\n};\nCalendarHeader.defaultProps = {\n  monthFormat: 'MMMM yyyy'\n};\nexport default CalendarHeader;","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\node_modules\\react-native-calendars\\src\\calendar\\header\\index.js"],"names":["React","Component","HijriDate","toHijri","XDate","PropTypes","styleConstructor","weekDayNames","CHANGE_MONTH_LEFT_ARROW","CHANGE_MONTH_RIGHT_ARROW","monthNames","CalendarHeader","constructor","props","style","theme","addMonth","bind","substractMonth","onPressLeft","onPressRight","shouldComponentUpdate","nextProps","month","toString","showIndicator","hideDayNames","firstDay","weekNumbers","monthFormat","console","log","toDate","onPressArrowLeft","onPressArrowRight","render","leftArrow","rightArrow","weekDaysNames","testID","hideArrows","arrow","left","right","top","bottom","renderArrow","require","arrowImage","indicator","indicatorColor","header","flexDirection","monthText","year","getFullYear","week","dayHeader","map","day","idx","displayName","propTypes","object","bool","instanceOf","func","number","defaultProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {ActivityIndicator} from 'react-native';\r\nimport {View, Text, TouchableOpacity, Image} from 'react-native';\r\nimport HijriDate, {toHijri} from 'hijri-date/lib/safe';\r\nimport XDate from 'xdate';\r\nimport PropTypes from 'prop-types';\r\nimport styleConstructor from './style';\r\nimport {weekDayNames} from '../../dateutils';\r\nimport {CHANGE_MONTH_LEFT_ARROW, CHANGE_MONTH_RIGHT_ARROW} from '../../testIDs';\r\n\r\nconst   monthNames = [\r\n  \"Muharram\",\r\n  \"Safar\",\r\n  \"Rabi' al-awwal\",\r\n  \"Rabi' al-thani\",\r\n  \"Jumada al-awwal\",\r\n  \"Jumada al-thani\",\r\n  \"Rajab\",\r\n  \"Sha'ban\",\r\n  \"Ramadan\",\r\n  \"Shawwal\",\r\n  \"Dhu al-Qi'dah\",\r\n  \"Dhu al-Hijjah\"\r\n]\r\nclass CalendarHeader extends Component {\r\n  static displayName = 'IGNORE';\r\n  \r\n  static propTypes = {\r\n    theme: PropTypes.object,\r\n    hideArrows: PropTypes.bool,\r\n    month: PropTypes.instanceOf(XDate),\r\n    addMonth: PropTypes.func,\r\n    showIndicator: PropTypes.bool,\r\n    firstDay: PropTypes.number,\r\n    renderArrow: PropTypes.func,\r\n    hideDayNames: PropTypes.bool,\r\n    weekNumbers: PropTypes.bool,\r\n    onPressArrowLeft: PropTypes.func,\r\n    onPressArrowRight: PropTypes.func\r\n  };\r\n\r\n  static defaultProps = {\r\n    monthFormat: 'MMMM yyyy'\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.style = styleConstructor(props.theme);\r\n    this.addMonth = this.addMonth.bind(this);\r\n    this.substractMonth = this.substractMonth.bind(this);\r\n    this.onPressLeft = this.onPressLeft.bind(this);\r\n    this.onPressRight = this.onPressRight.bind(this);\r\n  }\r\n\r\n  addMonth() {\r\n    this.props.addMonth(1);\r\n  }\r\n\r\n  substractMonth() {\r\n    this.props.addMonth(-1);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.month.toString('yyyy MM') !== this.props.month.toString('yyyy MM')) {\r\n      return true;\r\n    }\r\n    if (nextProps.showIndicator !== this.props.showIndicator) {\r\n      return true;\r\n    }\r\n    if (nextProps.hideDayNames !== this.props.hideDayNames) {\r\n      return true;\r\n    }\r\n    if (nextProps.firstDay !== this.props.firstDay) {\r\n      return true;\r\n    }\r\n    if (nextProps.weekNumbers !== this.props.weekNumbers) {\r\n      return true;\r\n    }\r\n    if (nextProps.monthFormat !== this.props.monthFormat) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onPressLeft() {\r\n    console.log(this.props.month.toDate());\r\n    const {onPressArrowLeft} = this.props;\r\n    if (typeof onPressArrowLeft === 'function') {\r\n      return onPressArrowLeft(this.substractMonth, this.props.month);\r\n    }\r\n    return this.substractMonth();\r\n  }\r\n\r\n  onPressRight() {\r\n    const {onPressArrowRight} = this.props;\r\n    if (typeof onPressArrowRight === 'function') {\r\n      return onPressArrowRight(this.addMonth, this.props.month);\r\n    }\r\n    return this.addMonth();\r\n  }\r\n\r\n  render() {\r\n    let leftArrow = <View />;\r\n    let rightArrow = <View />;\r\n    let weekDaysNames = weekDayNames(this.props.firstDay);\r\n    const {testID} = this.props;\r\n\r\n    if (!this.props.hideArrows) {\r\n      leftArrow = (\r\n        <TouchableOpacity\r\n          onPress={this.onPressLeft}\r\n          style={this.style.arrow}\r\n          hitSlop={{left: 20, right: 20, top: 20, bottom: 20}}\r\n          testID={testID ? `${CHANGE_MONTH_LEFT_ARROW}-${testID}`: CHANGE_MONTH_LEFT_ARROW}\r\n        >\r\n          {this.props.renderArrow\r\n            ? this.props.renderArrow('left')\r\n            : <Image\r\n              source={require('../img/previous.png')}\r\n              style={this.style.arrowImage}\r\n            />}\r\n        </TouchableOpacity>\r\n      );\r\n      rightArrow = (\r\n        <TouchableOpacity\r\n          onPress={this.onPressRight}\r\n          style={this.style.arrow}\r\n          hitSlop={{left: 20, right: 20, top: 20, bottom: 20}}\r\n          testID={testID ? `${CHANGE_MONTH_RIGHT_ARROW}-${testID}`: CHANGE_MONTH_RIGHT_ARROW}\r\n        >\r\n          {this.props.renderArrow\r\n            ? this.props.renderArrow('right')\r\n            : <Image\r\n              source={require('../img/next.png')}\r\n              style={this.style.arrowImage}\r\n            />}\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n\r\n    let indicator;\r\n    if (this.props.showIndicator) {\r\n      indicator = <ActivityIndicator color={this.props.theme && this.props.theme.indicatorColor}/>;\r\n    }\r\n\r\n    return (\r\n      <View style={this.props.style}>\r\n        <View style={this.style.header}>\r\n          {leftArrow}\r\n          <View style={{ flexDirection: 'row' }}>\r\n            <Text allowFontScaling={false} style={this.style.monthText} accessibilityTraits='header'>\r\n            {monthNames[toHijri(this.props.month.toDate()).month -1]} {toHijri(this.props.month.toDate()).year} ({this.props.month.getFullYear()})   \r\n            </Text>\r\n            {indicator}\r\n          </View>\r\n          {rightArrow}\r\n        </View>\r\n        {\r\n          !this.props.hideDayNames &&\r\n          <View style={this.style.week}>\r\n            {this.props.weekNumbers && <Text allowFontScaling={false} style={this.style.dayHeader}></Text>}\r\n            {weekDaysNames.map((day, idx) => (\r\n              <Text \r\n                allowFontScaling={false} \r\n                key={idx} \r\n                accessible={false} \r\n                style={this.style.dayHeader} \r\n                numberOfLines={1} \r\n                importantForAccessibility='no'\r\n              >\r\n                {day}\r\n              </Text>\r\n            ))}\r\n          </View>\r\n        }\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CalendarHeader;\r\n"]},"metadata":{},"sourceType":"module"}