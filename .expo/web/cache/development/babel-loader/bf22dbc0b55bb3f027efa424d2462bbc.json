{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\node_modules\\\\react-native-material-kit\\\\lib\\\\internal\\\\Tick.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectSpread2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ViewPropTypes } from \"../utils\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\n\nvar PROP_TYPES = _objectSpread2({}, ViewPropTypes, {\n  fillColor: PropTypes.any,\n  inset: PropTypes.number\n});\n\nvar NativeTick = requireNativeComponent('TickView', {\n  name: 'TickView',\n  propTypes: PROP_TYPES\n});\n\nclass Tick extends Component {\n  render() {\n    return React.createElement(NativeTick, _extends({}, this.props, {\n      fillColor: processColor(this.props.fillColor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      }\n    }));\n  }\n\n}\n\nTick.propTypes = PROP_TYPES;\nmodule.exports = Tick;\nTick.animated = Animated.createAnimatedComponent(Tick);","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\node_modules\\react-native-material-kit\\lib\\internal\\Tick.js"],"names":["React","Component","PropTypes","ViewPropTypes","requireNativeComponent","PROP_TYPES","fillColor","any","inset","number","NativeTick","name","propTypes","Tick","render","props","processColor","module","exports","animated","Animated","createAnimatedComponent"],"mappings":";;;;;;;;AAOA,OAAOA,KAAP,IACEC,SADF,QAEO,OAFP;AAGA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT;SAGEC,sB;;;;AAMF,IAAMC,UAAU,sBAEXF,aAFW;AAKdG,EAAAA,SAAS,EAAEJ,SAAS,CAACK,GALP;AAQdC,EAAAA,KAAK,EAAEN,SAAS,CAACO;AARH,EAAhB;;AAWA,IAAMC,UAAU,GAAGN,sBAAsB,CAAC,UAAD,EAAa;AACpDO,EAAAA,IAAI,EAAE,UAD8C;AAEpDC,EAAAA,SAAS,EAAEP;AAFyC,CAAb,CAAzC;;AASA,MAAMQ,IAAN,SAAmBZ,SAAnB,CAA6B;AAG3Ba,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,UAAD,eACM,KAAKC,KADX;AAEE,MAAA,SAAS,EAAEC,YAAY,CAAC,KAAKD,KAAL,CAAWT,SAAZ,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAMD;;AAV0B;;AAAvBO,I,CACGD,S,GAAYP,U;AAcrBY,MAAM,CAACC,OAAP,GAAiBL,IAAjB;AACAA,IAAI,CAACM,QAAL,GAAgBC,QAAQ,CAACC,uBAAT,CAAiCR,IAAjC,CAAhB","sourcesContent":["/* eslint react/prefer-stateless-function:0 */\n//\n// The `tick` used in `Checkbox`, for internal use only\n//\n// - [Props](#props)\n//\n\nimport React, {\n  Component,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { ViewPropTypes } from '../utils';\n\nimport {\n  requireNativeComponent,\n  Animated,\n  processColor,\n} from 'react-native';\n\n// ## <section id='props'>Props</section>\nconst PROP_TYPES = {\n  // [View Props](https://facebook.github.io/react-native/docs/view.html#props)...\n  ...ViewPropTypes,\n\n  // Background color of the tick\n  fillColor: PropTypes.any,\n\n  // Insets of the tick\n  inset: PropTypes.number,\n};\n\nconst NativeTick = requireNativeComponent('TickView', {\n  name: 'TickView',\n  propTypes: PROP_TYPES,\n});\n\n//\n// ## <section id='Tick'>Tick</section>\n// The `Tick` used in `Checkbox` component.\n//\nclass Tick extends Component {\n  static propTypes = PROP_TYPES;\n\n  render() {\n    return (\n      <NativeTick\n        {...this.props}\n        fillColor={processColor(this.props.fillColor)}\n      />\n    );\n  }\n}\n\n\n// ## Public interface\nmodule.exports = Tick;\nTick.animated = Animated.createAnimatedComponent(Tick);\n"]},"metadata":{},"sourceType":"module"}