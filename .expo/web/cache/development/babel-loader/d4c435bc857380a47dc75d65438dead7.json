{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\screens\\\\Weather.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport NavigationService from \"../NavigationService\";\nimport { FlatGrid } from \"react-native-super-grid\";\nimport * as Permissions from \"expo-permissions\";\nimport * as Location from \"expo-location\";\nvar {\n  width,\n  height\n} = Dimensions.get(\"window\");\nexport default class Weather extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.generateURL = callback => {\n      return fetch(\"https://api.weather.gov/points/\" + this.state.latitude + \",\" + this.state.longitude).then(response => response.json()).then(responseJson => {\n        callback(\"https://api.weather.gov/gridpoints/TOP/\" + responseJson.properties.gridX + \",\" + responseJson.properties.gridY);\n      });\n    };\n\n    this.setWeather = () => {\n      var url = \"\";\n      this.generateURL(generatedURL => {\n        console.log(generatedURL);\n        url = generatedURL;\n        return fetch(url).then(response => response.json()).then(responseJson => {\n          this.setState({\n            weather: responseJson\n          });\n          var updatedForecast = [5];\n\n          var temperatures = this._trimEntriesToDays(responseJson.properties.temperature.values, responseJson.properties.maxTemperature.values);\n\n          var covers = this._trimEntriesToDays(responseJson.properties.skyCover.values, responseJson.properties.maxTemperature.values);\n\n          var trimmedForecast = this._trimEntriesToDays(responseJson.properties.weather.values, responseJson.properties.maxTemperature.values);\n\n          for (var i = 0; i <= 4; i++) {\n            day = {\n              day: responseJson.properties.maxTemperature.values[i].validTime.substring(0, 10),\n              temperature: Math.round(temperatures[i].value * (9 / 5) + 32),\n              high: Math.round(responseJson.properties.maxTemperature.values[i].value * (9 / 5)) + 32,\n              low: Math.round(responseJson.properties.minTemperature.values[i].value * (9 / 5)) + 32,\n              weather: trimmedForecast[i].value[0].weather != null && trimmedForecast[i].value[0].coverage != null && trimmedForecast[i].value[0].coverage != \" \" && trimmedForecast[i].value[0].weather != \" \" ? trimmedForecast[i].value[0].coverage.replace(\"_\", \" \") + \" of \" + trimmedForecast[i].value[0].weather.replace(\"_\", \" \") : \"clear\"\n            };\n            updatedForecast[i] = day;\n          }\n\n          this.setState({\n            forecast: updatedForecast\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      });\n    };\n\n    this._getLocationAsync = _asyncToGenerator(function* () {\n      var {\n        status\n      } = yield Permissions.askAsync(Permissions.LOCATION);\n\n      if (status !== \"granted\") {\n        _this.setState({\n          locationResult: \"Permission to access location was denied\"\n        });\n      }\n\n      var location = yield Location.getCurrentPositionAsync({});\n\n      _this.setState({\n        latitude: JSON.stringify(location.coords.latitude),\n        longitude: JSON.stringify(location.coords.longitude)\n      });\n\n      _this.setWeather();\n    });\n    this.state = {\n      latitude: null,\n      longitude: null,\n      forecast: [{\n        day: \"One\",\n        temperature: \"\",\n        high: \"\",\n        low: \"\",\n        weather: \"\",\n        cover: \"\"\n      }, {\n        day: \"Two\",\n        temperature: \"\",\n        high: \"\",\n        low: \"\",\n        weather: \"\",\n        cover: \"\"\n      }, {\n        day: \"Three\",\n        temperature: \"\",\n        high: \"\",\n        low: \"\",\n        weather: \"\",\n        cover: \"\"\n      }, {\n        day: \"Four\",\n        temperature: \"\",\n        high: \"\",\n        low: \"\",\n        weather: \"\",\n        cover: \"\"\n      }, {\n        day: \"Five\",\n        temperature: \"\",\n        high: \"\",\n        low: \"\",\n        weather: \"\",\n        cover: \"\"\n      }]\n    };\n  }\n\n  _trimEntriesToDays(list, referenceList) {\n    newList = [5];\n\n    for (var j = 0; j < referenceList.length; j++) {\n      for (var i = 0; i < list.length; i++) {\n        if (list[i].validTime.substring(0, 10) == referenceList[j].validTime.substring(0, 10)) {\n          newList[j] = list[i];\n        }\n      }\n\n      if (typeof newList[j] == \"undefined\" || newList[j] == null) {\n        newList[j] = {\n          validTime: \"2019-10-13T17:00:00+00:00/PT2H\",\n          value: [{\n            coverage: \" \",\n            weather: \" \"\n          }]\n        };\n      }\n    }\n\n    return newList;\n  }\n\n  componentDidMount() {\n    this._getLocationAsync();\n  }\n\n  render() {\n    return React.createElement(FlatGrid, {\n      itemDimension: width - 10,\n      items: this.state.forecast,\n      style: styles.gridView,\n      renderItem: (_ref2) => {\n        var {\n          item,\n          index\n        } = _ref2;\n        return React.createElement(TouchableOpacity, {\n          onPress: () => {\n            NavigationService.navigate(\"WeatherDay\", {\n              temperature: this.state.weather.properties.temperature.values,\n              chill: this.state.weather.properties.windChill.values,\n              date: item.day\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          }\n        }, React.createElement(View, {\n          style: [styles.itemContainer, {\n            backgroundColor: \"#045384\"\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          }\n        }, React.createElement(Text, {\n          style: styles.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          }\n        }, item.day), React.createElement(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          }\n        }, React.createElement(Text, {\n          style: styles.time,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          }\n        }, item.temperature, \"\\xB0 \"), React.createElement(Text, {\n          style: styles.amPM,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          }\n        }, \"high: \", item.high, \"\\xB0, \"), React.createElement(Text, {\n          style: styles.amPM,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          }\n        }, \"low: \", item.low, \"\\xB0 \"))), React.createElement(Text, {\n          style: styles.weather,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          }\n        }, item.weather)));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      }\n    });\n  }\n\n}\nWeather.navigationOptions = {\n  title: \"Local Weather\"\n};\nvar styles = StyleSheet.create({\n  gridView: {\n    flex: 1\n  },\n  itemContainer: {\n    justifyContent: \"center\",\n    borderRadius: 5,\n    padding: 10,\n    height: 150\n  },\n  name: {\n    fontSize: 16,\n    color: \"#fff\",\n    fontWeight: \"600\"\n  },\n  weather: {\n    fontSize: 25,\n    fontStyle: \"italic\",\n    color: \"#fff\"\n  },\n  amPM: {\n    fontSize: 20,\n    color: \"#fff\",\n    fontWeight: \"600\"\n  },\n  time: {\n    fontWeight: \"600\",\n    fontSize: 50,\n    color: \"#fff\"\n  }\n});","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\screens\\Weather.js"],"names":["React","NavigationService","FlatGrid","Permissions","Location","width","height","Dimensions","get","Weather","Component","constructor","props","generateURL","callback","fetch","state","latitude","longitude","then","response","json","responseJson","properties","gridX","gridY","setWeather","url","generatedURL","console","log","setState","weather","updatedForecast","temperatures","_trimEntriesToDays","temperature","values","maxTemperature","covers","skyCover","trimmedForecast","i","day","validTime","substring","Math","round","value","high","low","minTemperature","coverage","replace","forecast","catch","error","_getLocationAsync","status","askAsync","LOCATION","locationResult","location","getCurrentPositionAsync","JSON","stringify","coords","cover","list","referenceList","newList","j","length","componentDidMount","render","styles","gridView","item","index","navigate","chill","windChill","date","itemContainer","backgroundColor","name","flexDirection","time","amPM","navigationOptions","title","StyleSheet","create","flex","justifyContent","borderRadius","padding","fontSize","color","fontWeight","fontStyle"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, View, Dimensions, Text, TouchableOpacity } from \"react-native\";\r\nimport NavigationService from \"../NavigationService\";\r\nimport { FlatGrid } from \"react-native-super-grid\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport * as Location from \"expo-location\";\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\nexport default class Weather extends React.Component {\r\n  static navigationOptions = {\r\n    title: \"Local Weather\"\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      latitude: null,\r\n      longitude: null,\r\n      forecast: [\r\n        {\r\n          day: \"One\",\r\n          temperature: \"\",\r\n          high: \"\",\r\n          low: \"\",\r\n          weather: \"\",\r\n          cover: \"\"\r\n        },\r\n        {\r\n          day: \"Two\",\r\n          temperature: \"\",\r\n          high: \"\",\r\n          low: \"\",\r\n          weather: \"\",\r\n          cover: \"\"\r\n        },\r\n        {\r\n          day: \"Three\",\r\n          temperature: \"\",\r\n          high: \"\",\r\n          low: \"\",\r\n          weather: \"\",\r\n          cover: \"\"\r\n        },\r\n        {\r\n          day: \"Four\",\r\n          temperature: \"\",\r\n          high: \"\",\r\n          low: \"\",\r\n          weather: \"\",\r\n          cover: \"\"\r\n        },\r\n        {\r\n          day: \"Five\",\r\n          temperature: \"\",\r\n          high: \"\",\r\n          low: \"\",\r\n          weather: \"\",\r\n          cover: \"\"\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  _trimEntriesToDays(list, referenceList) {\r\n    newList = [5];\r\n    for (let j = 0; j < referenceList.length; j++) {\r\n      for (let i = 0; i < list.length; i++) {\r\n        if (\r\n          list[i].validTime.substring(0, 10) ==\r\n          referenceList[j].validTime.substring(0, 10)\r\n        ) {\r\n          newList[j] = list[i];\r\n        }\r\n      }\r\n      if (typeof newList[j] == \"undefined\" || newList[j] == null) {\r\n        newList[j] = {\r\n          validTime: \"2019-10-13T17:00:00+00:00/PT2H\",\r\n          value: [{ coverage: \" \", weather: \" \" }]\r\n        };\r\n      }\r\n    }\r\n    return newList;\r\n  }\r\n\r\n  generateURL = (callback) => {\r\n    return fetch(\"https://api.weather.gov/points/\" + this.state.latitude + \",\" + this.state.longitude)\r\n      .then(response => response.json())\r\n      .then(responseJson => {\r\n        callback(\"https://api.weather.gov/gridpoints/TOP/\" +\r\n        responseJson.properties.gridX + \",\" + responseJson.properties.gridY);\r\n      });\r\n  }\r\n\r\n  setWeather = () => {\r\n    let url = \"\";\r\n    this.generateURL((generatedURL)=> {\r\n      console.log(generatedURL);\r\n      url = generatedURL;\r\n      return fetch(url)\r\n      .then(response => response.json())\r\n      .then(responseJson => {\r\n        this.setState({weather: responseJson})\r\n        let updatedForecast = [5];\r\n        let temperatures = this._trimEntriesToDays(\r\n          responseJson.properties.temperature.values,\r\n          responseJson.properties.maxTemperature.values\r\n        );\r\n        let covers = this._trimEntriesToDays(\r\n          responseJson.properties.skyCover.values,\r\n          responseJson.properties.maxTemperature.values\r\n        );\r\n        let trimmedForecast = this._trimEntriesToDays(\r\n          responseJson.properties.weather.values,\r\n          responseJson.properties.maxTemperature.values\r\n        );\r\n        for (let i = 0; i <= 4; i++) {\r\n          day = {\r\n            day: responseJson.properties.maxTemperature.values[\r\n              i\r\n            ].validTime.substring(0, 10),\r\n            temperature: Math.round(temperatures[i].value * (9 / 5) + 32),\r\n            high:\r\n              Math.round(\r\n                responseJson.properties.maxTemperature.values[i].value *\r\n                  (9 / 5)\r\n              ) + 32,\r\n            low:\r\n              Math.round(\r\n                responseJson.properties.minTemperature.values[i].value *\r\n                  (9 / 5)\r\n              ) + 32,\r\n            weather:\r\n              trimmedForecast[i].value[0].weather != null &&\r\n              trimmedForecast[i].value[0].coverage != null &&\r\n              trimmedForecast[i].value[0].coverage != \" \" &&\r\n              trimmedForecast[i].value[0].weather != \" \"\r\n                ? trimmedForecast[i].value[0].coverage.replace(\"_\", \" \") +\r\n                  \" of \" +\r\n                  trimmedForecast[i].value[0].weather.replace(\"_\", \" \")\r\n                : \"clear\"\r\n          };\r\n          updatedForecast[i] = day;\r\n        }\r\n        this.setState({ forecast: updatedForecast });\r\n      }).catch(error=> {\r\n        console.log(error);\r\n      });\r\n    });\r\n\r\n\r\n  }\r\n  _getLocationAsync = async () => {\r\n    let { status } = await Permissions.askAsync(Permissions.LOCATION);\r\n    if (status !== \"granted\") {\r\n      this.setState({\r\n        locationResult: \"Permission to access location was denied\"\r\n      });\r\n    } \r\n\r\n    let location = await Location.getCurrentPositionAsync({});\r\n    this.setState({\r\n      latitude: JSON.stringify(location.coords.latitude),\r\n      longitude: JSON.stringify(location.coords.longitude)\r\n    });\r\n    this.setWeather();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._getLocationAsync();\r\n  }\r\n  render() {\r\n    return (\r\n      <FlatGrid\r\n        itemDimension={width - 10}\r\n        items={this.state.forecast}\r\n        style={styles.gridView}\r\n        renderItem={({ item, index }) => (\r\n        <TouchableOpacity\r\n              onPress={() => {\r\n                NavigationService.navigate(\"WeatherDay\", {\r\n                  temperature: this.state.weather.properties.temperature.values,\r\n                  chill: this.state.weather.properties.windChill.values,\r\n                  date: item.day,\r\n                });\r\n              }}\r\n            >\r\n          <View style={[styles.itemContainer, { backgroundColor: \"#045384\" }]}>\r\n            <Text style={styles.name}>{item.day}</Text>\r\n            <View style={{ flexDirection: \"row\" }}>\r\n              <Text>\r\n                <Text style={styles.time}>{item.temperature}° </Text>\r\n                <Text style={styles.amPM}>high: {item.high}°, </Text>\r\n                <Text style={styles.amPM}>low: {item.low}° </Text>\r\n              </Text>\r\n            </View>\r\n            <Text style={styles.weather}>{item.weather}</Text>\r\n          </View>\r\n          </TouchableOpacity>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  gridView: {\r\n    flex: 1\r\n  },\r\n  itemContainer: {\r\n    justifyContent: \"center\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    height: 150\r\n  },\r\n  name: {\r\n    fontSize: 16,\r\n    color: \"#fff\",\r\n    fontWeight: \"600\"\r\n  },\r\n  weather: {\r\n    fontSize: 25,\r\n    fontStyle: \"italic\",\r\n    color: \"#fff\"\r\n  },\r\n  amPM: {\r\n    fontSize: 20,\r\n    color: \"#fff\",\r\n    fontWeight: \"600\"\r\n  },\r\n  time: {\r\n    fontWeight: \"600\",\r\n    fontSize: 50,\r\n    color: \"#fff\"\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}