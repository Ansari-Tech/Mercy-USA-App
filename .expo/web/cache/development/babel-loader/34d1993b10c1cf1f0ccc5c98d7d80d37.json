{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\screens\\\\SalatTimes.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport NavigationService from \"../NavigationService\";\nimport { Constants } from \"expo\";\nimport { FlatGrid } from \"react-native-super-grid\";\nimport * as Permissions from \"expo-permissions\";\nimport * as Location from \"expo-location\";\nvar {\n  width,\n  height\n} = Dimensions.get(\"window\");\nexport default class SalatTimes extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n    this._getLocationAsync = _asyncToGenerator(function* () {\n      var {\n        status\n      } = yield Permissions.askAsync(Permissions.LOCATION);\n\n      if (status !== \"granted\") {\n        _this.setState({\n          locationResult: \"Permission to access location was denied\"\n        });\n      }\n\n      var location = yield Location.getCurrentPositionAsync({});\n\n      _this.setState({\n        latitude: JSON.stringify(location.coords.latitude),\n        longitude: JSON.stringify(location.coords.longitude)\n      });\n\n      var URL = \"http://api.aladhan.com/v1/timings/1398332113?latitude=\";\n      URL += _this.state.latitude + \"&longitude=\" + _this.state.longitude + \"&method=2\";\n      return fetch(URL).then(response => response.json()).then(responseJson => {\n        _this.setState({\n          times: [{\n            name: \"Fajr\",\n            time: _this._toStandardTime(responseJson.data.timings.Fajr),\n            amPM: _this._AMOrPM(responseJson.data.timings.Fajr)\n          }, {\n            name: \"Dhuhr\",\n            time: _this._toStandardTime(responseJson.data.timings.Dhuhr),\n            amPM: _this._AMOrPM(responseJson.data.timings.Dhuhr)\n          }, {\n            name: \"Asr\",\n            time: _this._toStandardTime(responseJson.data.timings.Asr),\n            amPM: _this._AMOrPM(responseJson.data.timings.Asr)\n          }, {\n            name: \"Maghrib\",\n            time: _this._toStandardTime(responseJson.data.timings.Maghrib),\n            amPM: _this._AMOrPM(responseJson.data.timings.Maghrib)\n          }, {\n            name: \"Isha\",\n            time: _this._toStandardTime(responseJson.data.timings.Isha),\n            amPM: _this._AMOrPM(responseJson.data.timings.Isha)\n          }]\n        });\n      }).catch(error => {\n        _this.setState({\n          locationResult: null\n        });\n      });\n    });\n    this.state = {\n      latitude: null,\n      longitude: null,\n      times: [{\n        name: \"Fajr\",\n        time: \"\"\n      }, {\n        name: \"Dhuhr\",\n        time: \"\"\n      }, {\n        name: \"Asr\",\n        time: \"\"\n      }, {\n        name: \"Maghrib\",\n        time: \"\"\n      }, {\n        name: \"Isha\",\n        time: \"\"\n      }]\n    };\n  }\n\n  _toStandardTime(originalTimeString) {\n    var originalHours = parseInt(originalTimeString.substring(0, 2), 10);\n    var originalMinutes = originalTimeString.substring(3, 5);\n    var newHours = originalHours % 12;\n    return newHours + \":\" + originalMinutes;\n  }\n\n  _AMOrPM(inTime) {\n    var hours = parseInt(inTime.substring(0, 2), 10);\n    return hours > 12 ? \"PM\" : \"AM\";\n  }\n\n  componentDidMount() {\n    this._getLocationAsync();\n  }\n\n  render() {\n    return React.createElement(FlatGrid, {\n      itemDimension: width - 10,\n      items: this.state.times,\n      style: styles.gridView,\n      renderItem: (_ref2) => {\n        var {\n          item,\n          index\n        } = _ref2;\n        return React.createElement(View, {\n          style: [styles.itemContainer, {\n            backgroundColor: \"#045384\"\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          }\n        }, React.createElement(Text, {\n          style: styles.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          }\n        }, item.name), React.createElement(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          }\n        }, React.createElement(Text, {\n          style: styles.time,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          }\n        }, item.time), React.createElement(Text, {\n          style: styles.amPM,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          }\n        }, item.amPM))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      }\n    });\n  }\n\n}\nSalatTimes.navigationOptions = {\n  title: \"Salat Times\"\n};\nvar styles = StyleSheet.create({\n  gridView: {\n    flex: 1\n  },\n  itemContainer: {\n    justifyContent: \"center\",\n    borderRadius: 5,\n    padding: 10,\n    height: 100\n  },\n  name: {\n    fontSize: 16,\n    color: \"#fff\",\n    fontWeight: \"600\"\n  },\n  amPM: {\n    fontSize: 16,\n    color: \"#fff\",\n    fontWeight: \"600\"\n  },\n  time: {\n    fontWeight: \"600\",\n    fontSize: 50,\n    color: \"#fff\"\n  }\n});","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\screens\\SalatTimes.js"],"names":["React","NavigationService","Constants","FlatGrid","Permissions","Location","width","height","Dimensions","get","SalatTimes","Component","constructor","props","_getLocationAsync","status","askAsync","LOCATION","setState","locationResult","location","getCurrentPositionAsync","latitude","JSON","stringify","coords","longitude","URL","state","fetch","then","response","json","responseJson","times","name","time","_toStandardTime","data","timings","Fajr","amPM","_AMOrPM","Dhuhr","Asr","Maghrib","Isha","catch","error","originalTimeString","originalHours","parseInt","substring","originalMinutes","newHours","inTime","hours","componentDidMount","render","styles","gridView","item","index","itemContainer","backgroundColor","flexDirection","navigationOptions","title","StyleSheet","create","flex","justifyContent","borderRadius","padding","fontSize","color","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, View, Dimensions, Text, Alert } from \"react-native\";\r\nimport NavigationService from \"../NavigationService\";\r\nimport { Constants } from \"expo\";\r\nimport { FlatGrid } from \"react-native-super-grid\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport * as Location from \"expo-location\";\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\nexport default class SalatTimes extends React.Component {\r\n  static navigationOptions = {\r\n    title: \"Salat Times\"\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      latitude: null,\r\n      longitude: null,\r\n      times: [\r\n        { name: \"Fajr\", time: \"\" },\r\n        { name: \"Dhuhr\", time: \"\" },\r\n        { name: \"Asr\", time: \"\" },\r\n        { name: \"Maghrib\", time: \"\" },\r\n        { name: \"Isha\", time: \"\" }\r\n      ]\r\n    };\r\n  }\r\n\r\n  _toStandardTime(originalTimeString) {\r\n    let originalHours = parseInt(originalTimeString.substring(0, 2), 10);\r\n    let originalMinutes = originalTimeString.substring(3, 5);\r\n    let newHours = originalHours % 12;\r\n    return newHours + \":\" + originalMinutes;\r\n  }\r\n  _AMOrPM(inTime) {\r\n    let hours = parseInt(inTime.substring(0, 2), 10);\r\n\r\n    return hours > 12 ? \"PM\" : \"AM\";\r\n  }\r\n  _getLocationAsync = async () => {\r\n    let { status } = await Permissions.askAsync(Permissions.LOCATION);\r\n    if (status !== \"granted\") {\r\n      this.setState({\r\n        locationResult: \"Permission to access location was denied\"\r\n      });\r\n    }\r\n\r\n    let location = await Location.getCurrentPositionAsync({});\r\n    this.setState({\r\n      latitude: JSON.stringify(location.coords.latitude),\r\n      longitude: JSON.stringify(location.coords.longitude)\r\n    });\r\n    let URL = \"http://api.aladhan.com/v1/timings/1398332113?latitude=\";\r\n    URL +=\r\n      this.state.latitude + \"&longitude=\" + this.state.longitude + \"&method=2\";\r\n    return fetch(URL)\r\n      .then(response => response.json())\r\n      .then(responseJson => {\r\n        this.setState({\r\n          times: [\r\n            {\r\n              name: \"Fajr\",\r\n              time: this._toStandardTime(responseJson.data.timings.Fajr),\r\n              amPM: this._AMOrPM(responseJson.data.timings.Fajr)\r\n            },\r\n            {\r\n              name: \"Dhuhr\",\r\n              time: this._toStandardTime(responseJson.data.timings.Dhuhr),\r\n              amPM: this._AMOrPM(responseJson.data.timings.Dhuhr)\r\n            },\r\n            {\r\n              name: \"Asr\",\r\n              time: this._toStandardTime(responseJson.data.timings.Asr),\r\n              amPM: this._AMOrPM(responseJson.data.timings.Asr)\r\n            },\r\n            {\r\n              name: \"Maghrib\",\r\n              time: this._toStandardTime(responseJson.data.timings.Maghrib),\r\n              amPM: this._AMOrPM(responseJson.data.timings.Maghrib)\r\n            },\r\n            {\r\n              name: \"Isha\",\r\n              time: this._toStandardTime(responseJson.data.timings.Isha),\r\n              amPM: this._AMOrPM(responseJson.data.timings.Isha)\r\n            }\r\n          ]\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ locationResult: null });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._getLocationAsync();\r\n  }\r\n  render() {\r\n    return (\r\n      <FlatGrid\r\n        itemDimension={width - 10}\r\n        items={this.state.times}\r\n        style={styles.gridView}\r\n        renderItem={({ item, index }) => (\r\n          <View style={[styles.itemContainer, { backgroundColor: \"#045384\" }]}>\r\n            <Text style={styles.name}>{item.name}</Text>\r\n            <View style={{ flexDirection: \"row\" }}>\r\n              <Text>\r\n                <Text style={styles.time}>{item.time}</Text>\r\n                <Text style={styles.amPM}>{item.amPM}</Text>\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  gridView: {\r\n    flex: 1\r\n  },\r\n  itemContainer: {\r\n    justifyContent: \"center\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    height: 100\r\n  },\r\n  name: {\r\n    fontSize: 16,\r\n    color: \"#fff\",\r\n    fontWeight: \"600\"\r\n  },\r\n  amPM: {\r\n    fontSize: 16,\r\n    color: \"#fff\",\r\n    fontWeight: \"600\"\r\n  },\r\n  time: {\r\n    fontWeight: \"600\",\r\n    fontSize: 50,\r\n    color: \"#fff\"\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}