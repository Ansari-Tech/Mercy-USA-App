{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar\\\\day\\\\basic\\\\index.js\";\nimport React, { Component } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport { shouldUpdate } from \"../../../component-updater\";\nimport styleConstructor from \"./style\";\n\nclass Day extends Component {\n  constructor(props) {\n    super(props);\n    this.style = styleConstructor(props.theme);\n    this.onDayPress = this.onDayPress.bind(this);\n    this.onDayLongPress = this.onDayLongPress.bind(this);\n  }\n\n  onDayPress() {\n    this.props.onPress(this.props.date);\n  }\n\n  onDayLongPress() {\n    this.props.onLongPress(this.props.date);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return shouldUpdate(this.props, nextProps, ['state', 'children', 'marking', 'onPress', 'onLongPress']);\n  }\n\n  render() {\n    var containerStyle = [this.style.base];\n    var textStyle = [this.style.text];\n    var dotStyle = [this.style.dot];\n    var marking = this.props.marking || {};\n\n    if (marking && marking.constructor === Array && marking.length) {\n      marking = {\n        marking: true\n      };\n    }\n\n    var isDisabled = typeof marking.disabled !== 'undefined' ? marking.disabled : this.props.state === 'disabled';\n    var dot;\n\n    if (marking.marked) {\n      dotStyle.push(this.style.visibleDot);\n\n      if (isDisabled) {\n        dotStyle.push(this.style.disabledDot);\n      }\n\n      if (marking.dotColor) {\n        dotStyle.push({\n          backgroundColor: marking.dotColor\n        });\n      }\n\n      dot = React.createElement(View, {\n        style: dotStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      });\n    }\n\n    if (marking.selected) {\n      containerStyle.push(this.style.selected);\n\n      if (marking.selectedColor) {\n        containerStyle.push({\n          backgroundColor: marking.selectedColor\n        });\n      }\n\n      dotStyle.push(this.style.selectedDot);\n      textStyle.push(this.style.selectedText);\n    } else if (isDisabled) {\n      textStyle.push(this.style.disabledText);\n    } else if (this.props.state === 'today') {\n      containerStyle.push(this.style.today);\n      textStyle.push(this.style.todayText);\n      dotStyle.push(this.style.todayDot);\n    }\n\n    return React.createElement(TouchableOpacity, {\n      testID: this.props.testID,\n      style: containerStyle,\n      onPress: this.onDayPress,\n      onLongPress: this.onDayLongPress,\n      activeOpacity: marking.activeOpacity,\n      disabled: marking.disableTouchEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      }\n    }, React.createElement(Text, {\n      allowFontScaling: false,\n      style: textStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      }\n    }, String(this.props.children)), dot);\n  }\n\n}\n\nDay.displayName = 'IGNORE';\nDay.propTypes = {\n  state: PropTypes.oneOf(['disabled', 'today', '']),\n  theme: PropTypes.object,\n  marking: PropTypes.any,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  date: PropTypes.object\n};\nexport default Day;","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\node_modules\\react-native-calendars\\src\\calendar\\day\\basic\\index.js"],"names":["React","Component","PropTypes","shouldUpdate","styleConstructor","Day","constructor","props","style","theme","onDayPress","bind","onDayLongPress","onPress","date","onLongPress","shouldComponentUpdate","nextProps","render","containerStyle","base","textStyle","text","dotStyle","dot","marking","Array","length","isDisabled","disabled","state","marked","push","visibleDot","disabledDot","dotColor","backgroundColor","selected","selectedColor","selectedDot","selectedText","disabledText","today","todayText","todayDot","testID","activeOpacity","disableTouchEvent","String","children","displayName","propTypes","oneOf","object","any","func"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n  TouchableOpacity,\r\n  Text,\r\n  View\r\n} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport {shouldUpdate} from '../../../component-updater';\r\n\r\nimport styleConstructor from './style';\r\n\r\nclass Day extends Component {\r\n  static displayName = 'IGNORE';\r\n  \r\n  static propTypes = {\r\n    // TODO: disabled props should be removed\r\n    state: PropTypes.oneOf(['disabled', 'today', '']),\r\n\r\n    // Specify theme properties to override specific styles for calendar parts. Default = {}\r\n    theme: PropTypes.object,\r\n    marking: PropTypes.any,\r\n    onPress: PropTypes.func,\r\n    onLongPress: PropTypes.func,\r\n    date: PropTypes.object\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.style = styleConstructor(props.theme);\r\n    this.onDayPress = this.onDayPress.bind(this);\r\n    this.onDayLongPress = this.onDayLongPress.bind(this);\r\n  }\r\n\r\n  onDayPress() {\r\n    this.props.onPress(this.props.date);\r\n  }\r\n  onDayLongPress() {\r\n    this.props.onLongPress(this.props.date);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    return shouldUpdate(this.props, nextProps, ['state', 'children', 'marking', 'onPress', 'onLongPress']);\r\n  }\r\n\r\n  render() {\r\n    const containerStyle = [this.style.base];\r\n    const textStyle = [this.style.text];\r\n    const dotStyle = [this.style.dot];\r\n\r\n    let marking = this.props.marking || {};\r\n    if (marking && marking.constructor === Array && marking.length) {\r\n      marking = {\r\n        marking: true\r\n      };\r\n    }\r\n    const isDisabled = typeof marking.disabled !== 'undefined' ? marking.disabled : this.props.state === 'disabled';\r\n    let dot;\r\n    if (marking.marked) {\r\n      dotStyle.push(this.style.visibleDot);\r\n      if (isDisabled) {\r\n        dotStyle.push(this.style.disabledDot);\r\n      }\r\n      if (marking.dotColor) {\r\n        dotStyle.push({backgroundColor: marking.dotColor});\r\n      }\r\n      dot = (<View style={dotStyle}/>);\r\n    }\r\n\r\n    if (marking.selected) {\r\n      containerStyle.push(this.style.selected);\r\n      if (marking.selectedColor) {\r\n        containerStyle.push({backgroundColor: marking.selectedColor});\r\n      }\r\n      dotStyle.push(this.style.selectedDot);\r\n      textStyle.push(this.style.selectedText);\r\n    } else if (isDisabled) {\r\n      textStyle.push(this.style.disabledText);\r\n    } else if (this.props.state === 'today') {\r\n      containerStyle.push(this.style.today);\r\n      textStyle.push(this.style.todayText);\r\n      dotStyle.push(this.style.todayDot);\r\n    }\r\n\r\n    return (\r\n      <TouchableOpacity\r\n        testID={this.props.testID}\r\n        style={containerStyle}\r\n        onPress={this.onDayPress}\r\n        onLongPress={this.onDayLongPress}\r\n        activeOpacity={marking.activeOpacity}\r\n        disabled={marking.disableTouchEvent}\r\n      >\r\n        <Text allowFontScaling={false} style={textStyle}>{String(this.props.children)}</Text>\r\n        {dot}\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Day;\r\n"]},"metadata":{},"sourceType":"module"}