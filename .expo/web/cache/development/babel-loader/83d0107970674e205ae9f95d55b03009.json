{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\screens\\\\Qibla.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { Component } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Grid, Col, Row } from \"react-native-easy-grid\";\nimport { Magnetometer, ScreenOrientation } from \"expo-sensors\";\nimport * as Permissions from \"expo-permissions\";\nimport * as Location from \"expo-location\";\nvar {\n  height,\n  width\n} = Dimensions.get(\"window\");\nexport default class Qibla extends Component {\n  constructor() {\n    var _this;\n\n    super();\n    _this = this;\n\n    this._toggle = () => {\n      if (this._subscription) {\n        $;\n\n        this._unsubscribe();\n      } else {\n        this._subscribe();\n      }\n    };\n\n    this._subscribe = _asyncToGenerator(function* () {\n      _this._subscription = Magnetometer.addListener(data => {\n        _this.setState({\n          magnetometer: _this._angle(data),\n          qibla: _this._qAngle(data)\n        });\n      });\n    });\n\n    this._unsubscribe = () => {\n      this._subscription && this._subscription.remove();\n      this._subscription = null;\n    };\n\n    this._getLocationAsync = _asyncToGenerator(function* () {\n      var {\n        status\n      } = yield Permissions.askAsync(Permissions.LOCATION);\n\n      if (status !== \"granted\") {\n        _this.setState({\n          locationResult: \"Permission to access location was denied\"\n        });\n      }\n\n      var location = yield Location.getCurrentPositionAsync({});\n\n      _this.setState({\n        latitude: JSON.stringify(location.coords.latitude),\n        longitude: JSON.stringify(location.coords.longitude)\n      });\n    });\n\n    this._qAngle = magnetometer => {\n      if (magnetometer) {\n        var {\n          x,\n          y,\n          z\n        } = magnetometer;\n\n        if (Math.atan2(y, x) >= 0) {\n          angle = Math.atan2(y, x) * (180 / Math.PI);\n        } else {\n          angle = (Math.atan2(y, x) + 2 * Math.PI) * (180 / Math.PI);\n        }\n      }\n\n      return Math.round(angle - this.qBearing(this.state.latitude, this.state.longitude, this.state.mLat, this.state.mLon));\n    };\n\n    this._angle = magnetometer => {\n      if (magnetometer) {\n        var {\n          x,\n          y,\n          z\n        } = magnetometer;\n\n        if (Math.atan2(y, x) >= 0) {\n          angle = Math.atan2(y, x) * (180 / Math.PI);\n        } else {\n          angle = (Math.atan2(y, x) + 2 * Math.PI) * (180 / Math.PI);\n        }\n      }\n\n      return Math.round(angle);\n    };\n\n    this._direction = degree => {\n      if (degree >= 22.5 && degree < 67.5) {\n        return \"NE\";\n      } else if (degree >= 67.5 && degree < 112.5) {\n        return \"E\";\n      } else if (degree >= 112.5 && degree < 157.5) {\n        return \"SE\";\n      } else if (degree >= 157.5 && degree < 202.5) {\n        return \"S\";\n      } else if (degree >= 202.5 && degree < 247.5) {\n        return \"SW\";\n      } else if (degree >= 247.5 && degree < 292.5) {\n        return \"W\";\n      } else if (degree >= 292.5 && degree < 337.5) {\n        return \"NW\";\n      } else {\n        return \"N\";\n      }\n    };\n\n    this._degree = magnetometer => {\n      return magnetometer - 90 >= 0 ? magnetometer - 90 : magnetometer + 271;\n    };\n\n    this.state = {\n      magnetometer: \"0\",\n      mLat: 21.422518,\n      mLon: 39.826192,\n      latitude: 42.360427,\n      longitude: -83.48042,\n      qibla: 50\n    };\n  }\n\n  componentDidMount() {\n    this._getLocationAsync();\n\n    this.qBearing(this.state.latitude, this.state.longitude, this.state.mLat, this.state.mLon);\n\n    this._toggle();\n  }\n\n  componentWillUnmount() {\n    this._unsubscribe();\n  }\n\n  qBearing(lA, oA, lB, oB) {\n    delta = Math.abs((oA - oB) * (Math.PI / 180));\n    lA = lA * (Math.PI / 180);\n    oA = oA * (Math.PI / 180);\n    lB = lB * (Math.PI / 180);\n    oB = oB * (Math.PI / 180);\n    X = Math.cos(lB) * Math.sin(delta);\n    Y = Math.cos(lA) * Math.sin(lB) - Math.sin(lA) * Math.cos(lB) * Math.cos(delta);\n    this.setState({\n      bearing: \"X: \" + X + \"\\nY: \" + Y + \"\\n\" + Math.atan2(X, Y) * (180 / Math.PI)\n    });\n    return Math.atan2(X, Y) * (180 / Math.PI);\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      }\n    }, React.createElement(Row, {\n      style: {\n        alignItems: \"center\"\n      },\n      size: 0.9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      }\n    }, React.createElement(Col, {\n      style: {\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"#fff\",\n        fontSize: height / 26,\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      }\n    }, this._direction(this._degree(this.state.magnetometer))))), React.createElement(Row, {\n      style: {\n        alignItems: \"center\"\n      },\n      size: 0.1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      }\n    }, React.createElement(Col, {\n      style: {\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      }\n    }, React.createElement(View, {\n      style: {\n        position: \"absolute\",\n        width: width,\n        alignItems: \"center\",\n        top: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      }\n    }, React.createElement(Image, {\n      source: require(\"../assets/compass_pointer.png\"),\n      style: {\n        height: height / 26,\n        resizeMode: \"contain\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      }\n    })))), React.createElement(Row, {\n      style: {\n        alignItems: \"center\"\n      },\n      size: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"#fff\",\n        fontSize: height / 27,\n        width: width,\n        position: \"absolute\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      }\n    }, this._degree(this.state.magnetometer), \"\\xB0\"), React.createElement(Col, {\n      style: {\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      }\n    }, React.createElement(Image, {\n      source: require(\"../assets/compass_bg.png\"),\n      style: {\n        height: width - 80,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        resizeMode: \"contain\",\n        transform: [{\n          rotate: 360 - this.state.qibla + \"deg\"\n        }]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      }\n    }))), React.createElement(Row, {\n      style: {\n        alignItems: \"center\"\n      },\n      size: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      }\n    }, React.createElement(Col, {\n      style: {\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"#fff\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      }\n    }, this.state.qibla))));\n  }\n\n}\nQibla.navigationOptions = {\n  title: \"Qibla Compass\"\n};","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\screens\\Qibla.js"],"names":["React","Component","Grid","Col","Row","Magnetometer","ScreenOrientation","Permissions","Location","height","width","Dimensions","get","Qibla","constructor","_toggle","_subscription","$","_unsubscribe","_subscribe","addListener","data","setState","magnetometer","_angle","qibla","_qAngle","remove","_getLocationAsync","status","askAsync","LOCATION","locationResult","location","getCurrentPositionAsync","latitude","JSON","stringify","coords","longitude","x","y","z","Math","atan2","angle","PI","round","qBearing","state","mLat","mLon","_direction","degree","_degree","componentDidMount","componentWillUnmount","lA","oA","lB","oB","delta","abs","X","cos","sin","Y","bearing","render","alignItems","color","fontSize","fontWeight","position","top","require","resizeMode","textAlign","justifyContent","transform","rotate","navigationOptions","title"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Image, View, Text, Alert, Dimensions } from \"react-native\";\r\nimport { Grid, Col, Row } from \"react-native-easy-grid\";\r\nimport { Magnetometer, ScreenOrientation } from \"expo-sensors\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport * as Location from \"expo-location\";\r\nconst { height, width } = Dimensions.get(\"window\");\r\n\r\nexport default class Qibla extends Component {\r\n  static navigationOptions = {\r\n    title: \"Qibla Compass\"\r\n  };\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      magnetometer: \"0\",\r\n      mLat: 21.422518,\r\n      mLon: 39.826192,\r\n      latitude: 42.360427,\r\n      longitude: -83.48042,\r\n      qibla: 50\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this._getLocationAsync();\r\n    this.qBearing(\r\n      this.state.latitude,\r\n      this.state.longitude,\r\n      this.state.mLat,\r\n      this.state.mLon\r\n    );\r\n    this._toggle();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._unsubscribe();\r\n  }\r\n\r\n  _toggle = () => {\r\n    if (this._subscription) {\r\n      $;\r\n      this._unsubscribe();\r\n    } else {\r\n      this._subscribe();\r\n    }\r\n  };\r\n\r\n  _subscribe = async () => {\r\n    this._subscription = Magnetometer.addListener(data => {\r\n      this.setState({\r\n        magnetometer: this._angle(data),\r\n        qibla: this._qAngle(data)\r\n      });\r\n    });\r\n  };\r\n\r\n  _unsubscribe = () => {\r\n    this._subscription && this._subscription.remove();\r\n    this._subscription = null;\r\n  };\r\n  _getLocationAsync = async () => {\r\n    let { status } = await Permissions.askAsync(Permissions.LOCATION);\r\n    if (status !== \"granted\") {\r\n      this.setState({\r\n        locationResult: \"Permission to access location was denied\"\r\n      });\r\n    }\r\n\r\n    let location = await Location.getCurrentPositionAsync({});\r\n    this.setState({\r\n      latitude: JSON.stringify(location.coords.latitude),\r\n      longitude: JSON.stringify(location.coords.longitude)\r\n    });\r\n  };\r\n\r\n  _qAngle = magnetometer => {\r\n    if (magnetometer) {\r\n      let { x, y, z } = magnetometer;\r\n\r\n      if (Math.atan2(y, x) >= 0) {\r\n        angle = Math.atan2(y, x) * (180 / Math.PI);\r\n      } else {\r\n        angle = (Math.atan2(y, x) + 2 * Math.PI) * (180 / Math.PI);\r\n      }\r\n    }\r\n    return Math.round(\r\n      angle -\r\n        this.qBearing(\r\n          this.state.latitude,\r\n          this.state.longitude,\r\n          this.state.mLat,\r\n          this.state.mLon\r\n        )\r\n    );\r\n  };\r\n  _angle = magnetometer => {\r\n    if (magnetometer) {\r\n      let { x, y, z } = magnetometer;\r\n\r\n      if (Math.atan2(y, x) >= 0) {\r\n        angle = Math.atan2(y, x) * (180 / Math.PI);\r\n      } else {\r\n        angle = (Math.atan2(y, x) + 2 * Math.PI) * (180 / Math.PI);\r\n      }\r\n    }\r\n    return Math.round(angle);\r\n  };\r\n  qBearing(lA, oA, lB, oB) {\r\n    //Alert.alert(lB + \", \" + oB);\r\n    delta = Math.abs((oA - oB) * (Math.PI / 180));\r\n    lA = lA * (Math.PI / 180);\r\n    oA = oA * (Math.PI / 180);\r\n    lB = lB * (Math.PI / 180);\r\n    oB = oB * (Math.PI / 180);\r\n\r\n    X = Math.cos(lB) * Math.sin(delta);\r\n    Y =\r\n      Math.cos(lA) * Math.sin(lB) -\r\n      Math.sin(lA) * Math.cos(lB) * Math.cos(delta);\r\n    this.setState({\r\n      bearing:\r\n        \"X: \" + X + \"\\nY: \" + Y + \"\\n\" + Math.atan2(X, Y) * (180 / Math.PI)\r\n    });\r\n    return Math.atan2(X, Y) * (180 / Math.PI);\r\n  }\r\n\r\n  _direction = degree => {\r\n    if (degree >= 22.5 && degree < 67.5) {\r\n      return \"NE\";\r\n    } else if (degree >= 67.5 && degree < 112.5) {\r\n      return \"E\";\r\n    } else if (degree >= 112.5 && degree < 157.5) {\r\n      return \"SE\";\r\n    } else if (degree >= 157.5 && degree < 202.5) {\r\n      return \"S\";\r\n    } else if (degree >= 202.5 && degree < 247.5) {\r\n      return \"SW\";\r\n    } else if (degree >= 247.5 && degree < 292.5) {\r\n      return \"W\";\r\n    } else if (degree >= 292.5 && degree < 337.5) {\r\n      return \"NW\";\r\n    } else {\r\n      return \"N\";\r\n    }\r\n  };\r\n\r\n  // Match the device top with pointer 0° degree. (By default 0° starts from the right of the device.)\r\n  _degree = magnetometer => {\r\n    return magnetometer - 90 >= 0 ? magnetometer - 90 : magnetometer + 271;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <Row style={{ alignItems: \"center\" }} size={0.9}>\r\n          <Col style={{ alignItems: \"center\" }}>\r\n            <Text\r\n              style={{\r\n                color: \"#fff\",\r\n                fontSize: height / 26,\r\n                fontWeight: \"bold\"\r\n              }}\r\n            >\r\n              {this._direction(this._degree(this.state.magnetometer))}\r\n            </Text>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{ alignItems: \"center\" }} size={0.1}>\r\n          <Col style={{ alignItems: \"center\" }}>\r\n            <View\r\n              style={{\r\n                position: \"absolute\",\r\n                width: width,\r\n                alignItems: \"center\",\r\n                top: 0\r\n              }}\r\n            >\r\n              <Image\r\n                source={require(\"../assets/compass_pointer.png\")}\r\n                style={{\r\n                  height: height / 26,\r\n                  resizeMode: \"contain\"\r\n                }}\r\n              />\r\n            </View>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{ alignItems: \"center\" }} size={2}>\r\n          <Text\r\n            style={{\r\n              color: \"#fff\",\r\n              fontSize: height / 27,\r\n              width: width,\r\n              position: \"absolute\",\r\n              textAlign: \"center\"\r\n            }}\r\n          >\r\n            {this._degree(this.state.magnetometer)}°\r\n          </Text>\r\n\r\n          <Col style={{ alignItems: \"center\" }}>\r\n            <Image\r\n              source={require(\"../assets/compass_bg.png\")}\r\n              style={{\r\n                height: width - 80,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                resizeMode: \"contain\",\r\n                transform: [{ rotate: 360 - this.state.qibla + \"deg\" }]\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{ alignItems: \"center\" }} size={1}>\r\n          <Col style={{ alignItems: \"center\" }}>\r\n            <Text style={{ color: \"#fff\" }}>{this.state.qibla}</Text>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}