{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansari\\\\Documents\\\\Github\\\\Mercy-USA-App\\\\App.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React from \"react\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { AppLoading } from \"expo\";\nimport { Asset } from \"expo-asset\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { createStackNavigator, createAppContainer, createBottomTabNavigator } from \"react-navigation\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport NavigationService from \"./NavigationService\";\nimport AssetsScreen from \"./screens/AssetsScreen\";\nimport Loans from \"./screens/Loans\";\nimport Locations from \"./screens/Locations\";\nimport Qibla from \"./screens/Qibla\";\nimport Currency from \"./screens/Currency\";\nimport Donate from \"./screens/Donate\";\nimport Business from \"./screens/Business\";\nimport ZakatResults from \"./screens/ZakatResults\";\nimport Settings from \"./screens/Settings\";\nimport UserInfo from \"./screens/UserInfo\";\nimport Projects from \"./screens/Projects\";\nimport Privacy from \"./screens/Privacy\";\nimport contact from \"./screens/contact\";\nimport UnitConversion from \"./screens/UnitConversion\";\nimport Measurements from \"./screens/Measurements\";\nimport SalatTimes from \"./screens/SalatTimes\";\nimport IslamicCalendar from \"./screens/IslamicCalendar\";\nimport Weather from \"./screens/Weather\";\nimport WeatherDay from \"./screens/WeatherDay\";\nvar TabNavigator = createBottomTabNavigator({\n  Home: {\n    screen: HomeScreen\n  },\n  Locations: Locations,\n  Settings: Settings\n}, {\n  defaultNavigationOptions: (_ref) => {\n    var {\n      navigation\n    } = _ref;\n    return {\n      tabBarIcon: (_ref2) => {\n        var {\n          focused,\n          horizontal,\n          tintColor\n        } = _ref2;\n        var {\n          routeName\n        } = navigation.state;\n        var IconComponent = Ionicons;\n        var iconName;\n\n        if (routeName === \"Home\") {\n          iconName = \"ios-information-circle\".concat(focused ? \"\" : \"-outline\");\n        } else if (routeName === \"Settings\") {\n          iconName = \"ios-options\";\n        } else if (routeName == \"Locations\") {\n          iconName = \"ios-compass\";\n        } else if (routeName == \"Locations\") {\n          iconName = \"ios-flag\";\n        }\n\n        return React.createElement(IconComponent, {\n          name: iconName,\n          size: 25,\n          color: tintColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          }\n        });\n      }\n    };\n  },\n  tabBarOptions: {\n    activeTintColor: \"#045484\",\n    inactiveTintColor: \"gray\"\n  }\n});\nvar AppNavigator = createStackNavigator({\n  Home: HomeScreen,\n  Assets: AssetsScreen,\n  Loans: Loans,\n  Locations: Locations,\n  Qibla: Qibla,\n  Donate: Donate,\n  Currency: Currency,\n  Business: Business,\n  ZakatResults: ZakatResults,\n  Settings: Settings,\n  UserInfo: UserInfo,\n  Projects: Projects,\n  Privacy: Privacy,\n  contact: contact,\n  UnitConversion: UnitConversion,\n  Measurements: Measurements,\n  SalatTimes: SalatTimes,\n  IslamicCalendar: IslamicCalendar,\n  Weather: Weather,\n  WeatherDay: WeatherDay,\n  TabNavigator: {\n    screen: TabNavigator,\n    navigationOptions: {\n      header: null\n    }\n  }\n}, {\n  initialRouteName: \"TabNavigator\"\n});\nvar AppContainer = createAppContainer(AppNavigator);\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this._loadResourcesAsync = _asyncToGenerator(function* () {\n      return Promise.all([Asset.loadAsync([require(\"./assets/syria.png\"), require(\"./assets/lebanon.png\"), require(\"./assets/kenya.png\"), require(\"./assets/indonesia.png\"), require(\"./assets/somalia.png\"), require(\"./assets/india.png\"), require(\"./assets/america.png\"), require(\"./assets/albania.png\"), require(\"./assets/bosnia.png\"), require(\"./assets/yemen.png\"), require(\"./assets/logo.png\")])]);\n    });\n\n    this._handleLoadingError = error => {\n      this.setState({\n        isLoadingComplete: true\n      });\n    };\n\n    this._handleFinishLoading = () => {\n      this.setState({\n        isLoadingComplete: true\n      });\n    };\n\n    this.state = {\n      isLoadingComplete: false\n    };\n  }\n\n  componentDidMount() {\n    StatusBar.setHidden(true);\n  }\n\n  render() {\n    if (this.state.isLoadingComplete == false) {\n      return React.createElement(AppLoading, {\n        startAsync: this._loadResourcesAsync,\n        onError: this._handleLoadingError,\n        onFinish: this._handleFinishLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        }\n      });\n    } else {\n      return React.createElement(AppContainer, {\n        ref: navigatorRef => {\n          NavigationService.setTopLevelNavigator(navigatorRef);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        }\n      });\n    }\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Ansari\\Documents\\Github\\Mercy-USA-App\\App.js"],"names":["React","AppLoading","Asset","Ionicons","createStackNavigator","createAppContainer","createBottomTabNavigator","HomeScreen","NavigationService","AssetsScreen","Loans","Locations","Qibla","Currency","Donate","Business","ZakatResults","Settings","UserInfo","Projects","Privacy","contact","UnitConversion","Measurements","SalatTimes","IslamicCalendar","Weather","WeatherDay","TabNavigator","Home","screen","defaultNavigationOptions","navigation","tabBarIcon","focused","horizontal","tintColor","routeName","state","IconComponent","iconName","tabBarOptions","activeTintColor","inactiveTintColor","AppNavigator","Assets","navigationOptions","header","initialRouteName","AppContainer","App","Component","constructor","props","_loadResourcesAsync","Promise","all","loadAsync","require","_handleLoadingError","error","setState","isLoadingComplete","_handleFinishLoading","componentDidMount","StatusBar","setHidden","render","navigatorRef","setTopLevelNavigator"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StatusBar } from \"react-native\";\r\nimport { AppLoading } from \"expo\";\r\nimport { Asset } from \"expo-asset\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\nimport {\r\n  createStackNavigator,\r\n  createAppContainer,\r\n  createBottomTabNavigator\r\n} from \"react-navigation\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport NavigationService from \"./NavigationService\";\r\nimport AssetsScreen from \"./screens/AssetsScreen\";\r\nimport Loans from \"./screens/Loans\";\r\nimport Locations from \"./screens/Locations\";\r\nimport Qibla from \"./screens/Qibla\";\r\nimport Currency from \"./screens/Currency\";\r\nimport Donate from \"./screens/Donate\";\r\nimport Business from \"./screens/Business\";\r\nimport ZakatResults from \"./screens/ZakatResults\";\r\nimport Settings from \"./screens/Settings\";\r\nimport UserInfo from \"./screens/UserInfo\";\r\nimport Projects from \"./screens/Projects\";\r\nimport Privacy from \"./screens/Privacy\";\r\nimport contact from \"./screens/contact\";\r\nimport UnitConversion from \"./screens/UnitConversion\";\r\nimport Measurements from \"./screens/Measurements\";\r\nimport SalatTimes from \"./screens/SalatTimes\";\r\nimport IslamicCalendar from \"./screens/IslamicCalendar\";\r\nimport Weather from \"./screens/Weather\";\r\nimport WeatherDay from \"./screens/WeatherDay\"\r\n\r\nconst TabNavigator = createBottomTabNavigator(\r\n  {\r\n    Home: {\r\n      screen: HomeScreen\r\n    },\r\n    Locations: Locations,\r\n    Settings: Settings\r\n  },\r\n  {\r\n    defaultNavigationOptions: ({ navigation }) => ({\r\n      tabBarIcon: ({ focused, horizontal, tintColor }) => {\r\n        const { routeName } = navigation.state;\r\n        let IconComponent = Ionicons;\r\n        let iconName;\r\n        if (routeName === \"Home\") {\r\n          iconName = `ios-information-circle${focused ? \"\" : \"-outline\"}`;\r\n        } else if (routeName === \"Settings\") {\r\n          iconName = `ios-options`;\r\n        } else if (routeName == \"Locations\") {\r\n          iconName = \"ios-compass\";\r\n        } else if (routeName == \"Locations\") {\r\n          iconName = \"ios-flag\";\r\n        }\r\n        return <IconComponent name={iconName} size={25} color={tintColor} />;\r\n      }\r\n    }),\r\n    tabBarOptions: {\r\n      activeTintColor: \"#045484\",\r\n      inactiveTintColor: \"gray\"\r\n    }\r\n  }\r\n);\r\n\r\nconst AppNavigator = createStackNavigator(\r\n  {\r\n    Home: HomeScreen,\r\n    Assets: AssetsScreen,\r\n    Loans: Loans,\r\n    Locations: Locations,\r\n    Qibla: Qibla,\r\n    Donate: Donate,\r\n    Currency: Currency,\r\n    Business: Business,\r\n    ZakatResults: ZakatResults,\r\n    Settings: Settings,\r\n    UserInfo: UserInfo,\r\n    Projects: Projects,\r\n    Privacy: Privacy,\r\n    contact: contact,\r\n    UnitConversion: UnitConversion,\r\n    Measurements: Measurements,\r\n    SalatTimes: SalatTimes,\r\n    IslamicCalendar: IslamicCalendar,\r\n    Weather: Weather,\r\n    WeatherDay: WeatherDay,\r\n    TabNavigator: {\r\n      screen: TabNavigator,\r\n      navigationOptions: {\r\n        header: null\r\n      }\r\n    }\r\n  },\r\n  {\r\n    initialRouteName: \"TabNavigator\"\r\n  }\r\n);\r\n\r\nconst AppContainer = createAppContainer(AppNavigator);\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoadingComplete: false\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    StatusBar.setHidden(true);\r\n  }\r\n  render() {\r\n    if (this.state.isLoadingComplete == false) {\r\n      return (\r\n        <AppLoading\r\n          startAsync={this._loadResourcesAsync}\r\n          onError={this._handleLoadingError}\r\n          onFinish={this._handleFinishLoading}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <AppContainer\r\n          ref={navigatorRef => {\r\n            NavigationService.setTopLevelNavigator(navigatorRef);\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  _loadResourcesAsync = async () => {\r\n    return Promise.all([\r\n      Asset.loadAsync([\r\n        require(\"./assets/syria.png\"),\r\n        require(\"./assets/lebanon.png\"),\r\n        require(\"./assets/kenya.png\"),\r\n        require(\"./assets/indonesia.png\"),\r\n        require(\"./assets/somalia.png\"),\r\n        require(\"./assets/india.png\"),\r\n        require(\"./assets/america.png\"),\r\n        require(\"./assets/albania.png\"),\r\n        require(\"./assets/bosnia.png\"),\r\n        require(\"./assets/yemen.png\"),\r\n        require(\"./assets/logo.png\")\r\n      ])\r\n    ]);\r\n  };\r\n  _handleLoadingError = error => {\r\n    this.setState({ isLoadingComplete: true });\r\n  };\r\n\r\n  _handleFinishLoading = () => {\r\n    this.setState({ isLoadingComplete: true });\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}